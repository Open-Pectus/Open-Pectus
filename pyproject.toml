[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "openpectus"
authors = [{name = "Eskild Schroll-Fleischer", email = "eyfl@novonordisk.com"}, {name = "Morten Passow Odgaard", email = "mpo@mjolner.dk"}, {name = "Jan H. Knudsen", email = "jhk@mjolner.dk"}]
dynamic = ["version", "description"]

[tool.flit.sdist]
include = ["openpectus"]
exclude = [
    "openpectus/frontend*",
    "openpectus/test*",
    "openpectus/engine/p1*",
    "openpectus/.flake8*",
    "openpectus/.idea*",
    "openpectus/Dockerfile",
    "openpectus/docker-compose.yml"
]

[project.scripts]
pectus-aggregator = "openpectus.aggregator.main:main"
pectus-engine = "openpectus.engine.main:main"

[tool.flit.external-data]
directory = "openpectus/aggregator/frontend-dist/"


[tool.mypy]
#warn_return_any = true
#warn_unused_configs = true
#ignore_missing_imports = true
#check_untyped_defs = true
#disallow_untyped_defs = true

files = [ "./openpectus" ]
#exclude = [] # use [[tool.mypy.overrides]] instead


# Per-module options:

[[tool.mypy.overrides]]
# Note: 'exclude' does not work with 'files'. This works around that. See
# https://github.com/python/mypy/issues/11760
# https://stackoverflow.com/questions/72125692/how-to-exclude-multiples-folders-from-mypy-checking-by-using-pyproject-toml-conf
module = [
    "openpectus.lang.grammar.codegen.*",
    "openpectus.engine.p1.*",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "antlr4",
    "antlr4.tree.Tree",
    "pint",
    "pint.util",
    "fastapi",
    "fastapi.routing",
    "fastapi.responses",
    "fastapi.testclient",
    "fastapi_websocket_rpc",
    "fastapi_websocket_rpc.schemas",
    "fastapi_websocket_rpc.rpc_methods",
    "fastapi_websocket_rpc.logger",
    "fastapi_websocket_rpc.websocket_rpc_endpoint",
    "fastapi_websocket_rpc.utils",
    "fastapi_websocket_pubsub",
    "fastapi_websocket_pubsub.rpc_event_methods",
    "fastapi_websocket_pubsub.websocket_rpc_event_notifier",
    "fastapi_websocket_pubsub.event_notifier",
    "httpx",
    "uvicorn",
    "pydantic",
    "tenacity", "tenacity.stop", "tenacity.retry", 
    "starlette.staticfiles",
]

ignore_missing_imports = true

#[mypy-lang.exec.tags]
#type = ignore



[tool.pyright]
include = ["openpectus"]
exclude = ["**/node_modules",
    "**/__pycache__",
    "openpectus/frontend",
    "openpectus/lang/grammar/codegen/**",
    "openpectus/engine/p1/**",
    "openpectus/aggregator/frontend_ws/**",     #TODO fix
    "openpectus/aggregator/spa.py",             #TODO fix
]
defineConstant = { DEBUG = true }
venv = "env367"

reportMissingImports = true
reportMissingTypeStubs = false
reportImportCycles = true
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = true

reportUnknownMemberType = false
reportUnknownVariableType = false

reportMissingTypeArgument = true
#reportUnnecessaryComparison = true # TODO consider enabling this
reportImplicitStringConcatenation = true
reportUnnecessaryTypeIgnoreComment = true
reportMatchNotExhaustive = true
#reportImplicitOverride = true # TODO consider enabling this
reportShadowedImports = true

pythonVersion = "3.11"
pythonPlatform = "Linux"
