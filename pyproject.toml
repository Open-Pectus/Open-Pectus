[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "openpectus"
authors = [
  {name = "Eskild Schroll-Fleischer", email = "eyfl@novonordisk.com"},
  {name = "Morten Passow Odgaard", email = "mpo@mjolner.dk"},
  {name = "Jan H. Knudsen", email = "jhk@mjolner.dk"},
]
dynamic = ["version", "description"]
readme = "README.md"
requires-python = ">= 3.11"

dependencies = [
    "antlr4-python3-runtime==4.13.1",
    "pint==0.24.4",
    "pydantic==2.10.4",
    "fastapi==0.115.6",
    "uvicorn[standard]==0.34.0",
    "httpx==0.28.1",
    "fastapi_websocket_rpc==0.1.27",
    "fastapi_websocket_pubsub==0.3.9",
    "colorlog==6.9.0",
    "sqlalchemy==2.0.36",
    "asyncua==1.1.5",
    "labjack-ljm==1.23.0",
    "pyright==1.1.391",
    "alembic==1.14.0",
    "sentry-sdk==2.19.2",
    "PyJWT==2.10.1",
    "multiprocess==0.70.17",
]

keywords = ["process control", "process control system", "P code", "P-code", "chemical engineering", "SCADA", "PCS"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Manufacturing",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python",
  "Programming Language :: JavaScript",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Chemistry",
  "Topic :: System",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

[project.optional-dependencies]
development = [
    "flake8==7.1.1",
    "black==24.10.0",
    "build==1.2.2.post1",
]
docs = [
    "sphinx==8.1.3",
    "sphinx-rtd-theme==3.0.2",
    "sphinx-argparse==0.5.2",
    "sphinx-autoapi==3.4.0",
    "sphinxcontrib-openapi==0.8.4",
    "sphinxcontrib-spelling==8.0.1",
    "sphinxcontrib-mermaid==1.0.0",
    "ruamel.yaml==0.18.10",
]

[project.urls]
Documentation = "https://docs.openpectus.org/"
Repository = "https://github.com/Open-Pectus/Open-Pectus.git"
GitHub = "https://github.com/Open-Pectus/Open-Pectus"
Issues = "https://github.com/Open-Pectus/Open-Pectus/issues"

[tool.flit.sdist]
include = ["openpectus"]
exclude = [
    "openpectus/frontend*",
    "openpectus/engine/p1*",
    "openpectus/.flake8*",
    "openpectus/.idea*",
    "openpectus/dist",
    "openpectus/Dockerfile",
    "openpectus/docker-compose.yml"
]

[project.scripts]
pectus-aggregator = "openpectus.aggregator.main:main"
pectus-engine = "openpectus.engine.main:main"

[tool.flit.external-data]
directory = "openpectus/aggregator/frontend-dist/"

[tool.pyright]
include = ["openpectus"]
exclude = ["**/node_modules",
    "**/__pycache__",
    "openpectus/frontend",
    "openpectus/lang/grammar/codegen/**",
    "openpectus/engine/p1/**",
    "openpectus/aggregator/frontend_ws/**",     #TODO fix
    "openpectus/aggregator/spa.py",             #TODO fix
]
defineConstant = { DEBUG = true }
venv = "env367"

reportMissingImports = true
reportMissingTypeStubs = false
reportImportCycles = true
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = true

reportUnknownMemberType = false
reportUnknownVariableType = false

reportMissingTypeArgument = true
#reportUnnecessaryComparison = true # TODO consider enabling this
reportImplicitStringConcatenation = true
reportUnnecessaryTypeIgnoreComment = "warning"
reportMatchNotExhaustive = true
#reportImplicitOverride = true # TODO consider enabling this
reportShadowedImports = true

pythonVersion = "3.13"
pythonPlatform = "Linux"
