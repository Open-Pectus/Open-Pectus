<?xml version="1.0" encoding="UTF-8"?>
<testsuites disabled="" errors="0" failures="2" name="foo" tests="385" time="134.157">
<testsuite errors="0" failures="2" name="" tests="385" time="134.157">
<testcase classname="test.aggregator.test_aggregator.AggregatorEventsTest" name="test_persist_tag_values_can_save_new_tags" time="0.020"/>
<testcase classname="test.aggregator.test_aggregator.AggregatorEventsTest" name="test_persist_tag_values_can_update_tag_with_newer_after_threshold" time="0.008"/>
<testcase classname="test.aggregator.test_aggregator.AggregatorEventsTest" name="test_persist_tag_values_cannot_update_tag_with_older" time="0.008"/>
<testcase classname="test.aggregator.test_aggregator.AggregatorTest" name="test_register_engine" time="0.053"/>
<testcase classname="test.aggregator.test_aggregator.AggregatorTest" name="test_register_engine_different_name" time="0.018"/>
<testcase classname="test.aggregator.test_api.AggregatorOpenAPIApiTest" name="test_read_openapi_docs" time="0.008"/>
<testcase classname="test.aggregator.test_api.AggregatorOpenAPIApiTest" name="test_read_openapi_spec" time="0.063"/>
<testcase classname="test.aggregator.test_api.AggregatorOpenAPIApiTest" name="test_write_openapi_spec_to_file_and_compare_with_existing" time="0.018"/>
<testcase classname="test.aggregator.test_command_util.CommantUtilTest" name="test_cmd_with_value_Choice_" time="0.000"/>
<testcase classname="test.aggregator.test_command_util.CommantUtilTest" name="test_cmd_with_value_FreeText_" time="0.000"/>
<testcase classname="test.aggregator.test_command_util.CommantUtilTest" name="test_cmd_with_value_Number_float_no_unit" time="0.000"/>
<testcase classname="test.aggregator.test_command_util.CommantUtilTest" name="test_cmd_with_value_Number_int_unit" time="0.000"/>
<testcase classname="test.aggregator.test_command_util.CommantUtilTest" name="test_cmd_without_value_parse_as_injected_with_command_as_pcode" time="0.000"/>
<testcase classname="test.aggregator.test_command_util.CommantUtilTest" name="test_unit_button_parse" time="0.000"/>
<testcase classname="test.aggregator.test_data.DatabaseTest" name="test_create_db" time="0.011"/>
<testcase classname="test.aggregator.test_data.DatabaseTest" name="test_create_row_scoped" time="0.000"/>
<testcase classname="test.aggregator.test_data.DatabaseTest" name="test_no_missing_migration" time="0.308"/>
<testcase classname="test.aggregator.test_data.DatabaseTest" name="test_scope_session_identities" time="0.000"/>
<testcase classname="test.aggregator.test_data.RepositoryTest" name="test_can_find" time="0.011"/>
<testcase classname="test.aggregator.test_data.RepositoryTest" name="test_can_insert" time="0.000"/>
<testcase classname="test.aggregator.test_data.RepositoryTest" name="test_can_update" time="0.011"/>
<testcase classname="test.aggregator.test_data.RepositoryTest" name="test_json" time="0.011"/>
<testcase classname="test.aggregator.test_data.RepositoryTest" name="test_nested_json" time="0.011"/>
<testcase classname="test.aggregator.test_data.SerializationTest" name="test_json_deserialization" time="0.000"/>
<testcase classname="test.aggregator.test_data.SerializationTest" name="test_json_deserialization_complex" time="0.000"/>
<testcase classname="test.aggregator.test_data.SerializationTest" name="test_json_serialization" time="0.000"/>
<testcase classname="test.aggregator.test_data.SerializationTest" name="test_json_serialization_complex" time="0.000"/>
<testcase classname="test.engine.test_analyzer_check.CommandCheckAnalyzerTest" name="test_command_arg_invalid" time="0.011"/>
<testcase classname="test.engine.test_analyzer_check.CommandCheckAnalyzerTest" name="test_command_arg_valid" time="0.011"/>
<testcase classname="test.engine.test_analyzer_check.CommandCheckAnalyzerTest" name="test_command_defined" time="0.011"/>
<testcase classname="test.engine.test_analyzer_check.CommandCheckAnalyzerTest" name="test_command_undefined" time="0.000"/>
<testcase classname="test.engine.test_analyzer_check.ConditionCheckAnalyzerTest" name="test_tag_categorized_invalid" time="0.000">
<skipped>TODO</skipped>
</testcase>
<testcase classname="test.engine.test_analyzer_check.ConditionCheckAnalyzerTest" name="test_tag_categorized_valid" time="0.000">
<skipped>TODO</skipped>
</testcase>
<testcase classname="test.engine.test_analyzer_check.ConditionCheckAnalyzerTest" name="test_tag_name_defined" time="0.104"/>
<testcase classname="test.engine.test_analyzer_check.ConditionCheckAnalyzerTest" name="test_tag_name_undefined" time="0.051"/>
<testcase classname="test.engine.test_analyzer_check.ConditionCheckAnalyzerTest" name="test_tag_unit_CV" time="0.053"/>
<testcase classname="test.engine.test_analyzer_check.ConditionCheckAnalyzerTest" name="test_tag_unit_missing" time="0.051"/>
<testcase classname="test.engine.test_analyzer_check.ConditionCheckAnalyzerTest" name="test_tag_unit_unexpected" time="0.059"/>
<testcase classname="test.engine.test_analyzer_check.ConditionCheckAnalyzerTest" name="test_tag_unit_valid" time="0.053"/>
<testcase classname="test.engine.test_analyzer_check.ConditionCheckAnalyzerTest" name="test_tag_units_compatible" time="0.061"/>
<testcase classname="test.engine.test_analyzer_check.ConditionCheckAnalyzerTest" name="test_tag_units_equal" time="0.049"/>
<testcase classname="test.engine.test_analyzer_check.ConditionCheckAnalyzerTest" name="test_tag_units_incompatible" time="0.063"/>
<testcase classname="test.engine.test_analyzer_check.InfiniteBlockCheckAnalyzerTest" name="test_has_global_end" time="0.152"/>
<testcase classname="test.engine.test_analyzer_check.InfiniteBlockCheckAnalyzerTest" name="test_has_local_end" time="0.183"/>
<testcase classname="test.engine.test_analyzer_check.InfiniteBlockCheckAnalyzerTest" name="test_has_no_local_end" time="0.269"/>
<testcase classname="test.engine.test_analyzer_check.InfiniteBlockCheckAnalyzerTest" name="test_missing_global_end" time="0.041"/>
<testcase classname="test.engine.test_analyzer_check.SemanticCheckAnalyzerTest" name="test_basic" time="0.020"/>
<testcase classname="test.engine.test_analyzer_check.SemanticCheckAnalyzerTest" name="test_warning_UnreachableCode" time="0.101"/>
<testcase classname="test.engine.test_analyzer_check.UnreachableCodeCheckAnalyzerTest" name="test_UnreachableCodeVisitor" time="0.099"/>
<testcase classname="test.engine.test_analyzer_enrich.ConditionEnrichAnalyzerTest" name="test_float_re" time="0.002"/>
<testcase classname="test.engine.test_analyzer_enrich.ConditionEnrichAnalyzerTest" name="test_identifier_re" time="0.000"/>
<testcase classname="test.engine.test_analyzer_enrich.ConditionEnrichAnalyzerTest" name="test_unit_re" time="0.000"/>
<testcase classname="test.engine.test_analyzer_enrich.ConditionEnrichAnalyzerTest" name="test_watch_combinations" time="0.020"/>
<testcase classname="test.engine.test_analyzer_enrich.ConditionEnrichAnalyzerTest" name="test_watch_tag" time="0.061"/>
<testcase classname="test.engine.test_analyzer_enrich.ConditionEnrichAnalyzerTest" name="test_watch_value_unit" time="0.051"/>
<testcase classname="test.engine.test_analyzer_enrich.DurationEnrichAnalyzerTest" name="test_pause_w_unit" time="0.008"/>
<testcase classname="test.engine.test_analyzer_enrich.DurationEnrichAnalyzerTest" name="test_pause_wo_unit" time="0.002"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_alarm" time="0.130"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_blanks" time="0.061"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_block" time="0.000"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_block_Equilibration" time="0.337"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_block_Equilibration_partial" time="0.201"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_block_with_command" time="0.030"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_block_with_command_and_end_block" time="0.063"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_block_with_end_block" time="0.030"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_block_with_end_block_with_invalid_indentation" time="0.010"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_block_with_end_block_with_missing_indentation" time="0.010"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_block_with_invalid_indentation" time="0.000"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_block_with_invalid_scope_indentation" time="0.020"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_block_with_mark_with_missing_indentation" time="0.010"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_command" time="0.000"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_command_comment" time="0.163"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_commands" time="0.059"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_comment" time="0.177"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_end_blocks" time="0.000"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_hold" time="0.013"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_hold_w_arg" time="0.004"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_increment_run_counter" time="0.012"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_mark" time="0.004"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_mark_comment" time="0.003"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_navigation" time="0.297"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_nested_blocks" time="0.413"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_outdent" time="0.041"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_outdent_multiple" time="0.112"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_pause" time="0.008"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_pause_w_arg" time="0.000"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_program_errors" time="0.000">
<skipped>Need a better error concept for this to make sense</skipped>
</testcase>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_program_mark" time="0.074"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_program_watch" time="0.109"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_restart" time="0.069"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_run_counter" time="0.002"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_sequential_blocks" time="0.152"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_start" time="0.000"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_stop" time="0.061"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_wait_must_have_duration" time="0.000"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_wait_w_arg" time="0.008"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_watch" time="0.130"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_watch_unit" time="0.221"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_watch_unit_percent" time="0.059"/>
<testcase classname="test.engine.test_builder.BuilderTest" name="test_watch_unitless" time="0.215"/>
<testcase classname="test.engine.test_composite_hardware.TestCompositeHardware" name="test_connect" time="0.000"/>
<testcase classname="test.engine.test_composite_hardware.TestCompositeHardware" name="test_hardware_layer_is_itself_composite" time="0.000"/>
<testcase classname="test.engine.test_composite_hardware.TestCompositeHardware" name="test_missing_hardware_layer" time="0.000"/>
<testcase classname="test.engine.test_composite_hardware.TestCompositeHardware" name="test_read_multiple_registers" time="0.000"/>
<testcase classname="test.engine.test_composite_hardware.TestCompositeHardware" name="test_read_register" time="0.000"/>
<testcase classname="test.engine.test_composite_hardware.TestCompositeHardware" name="test_write_multiple_registers" time="0.000"/>
<testcase classname="test.engine.test_composite_hardware.TestCompositeHardware" name="test_write_register" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_EngineCommandEnum_has" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_RegexNamedArgumentParser_get_named_groups" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_RegexNamedArgumentParser_parse" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_accumulated_block_volume" time="1.314">
<failure type="AssertionError">Traceback (most recent call last):
  File "C:\Projects\Novo\Open-Pectus\openpectus\test\engine\test_engine.py", line 1113, in test_accumulated_block_volume
    self.assertEqual(block.get_value(), None)
AssertionError: 'A' != None
</failure>
</testcase>
<testcase classname="test.engine.test_engine.TestEngine" name="test_accumulated_column_block_volume" time="1.223">
<failure type="AssertionError">Traceback (most recent call last):
  File "C:\Projects\Novo\Open-Pectus\openpectus\test\engine\test_engine.py", line 1280, in test_accumulated_column_block_volume
    self.assertEqual(e.tags[SystemTagName.BLOCK].get_value(), None)
AssertionError: 'A' != None
</failure>
</testcase>
<testcase classname="test.engine.test_engine.TestEngine" name="test_accumulated_column_volume" time="1.145"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_accumulated_column_volume_base" time="1.377"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_accumulated_column_volume_watch" time="1.507"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_accumulated_volume" time="1.261"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_clocks" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_clocks_start_stop" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_concurrent_uod_commands" time="0.848"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_engine_error_causes_Paused_state" time="0.208"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_engine_start" time="0.000">
<skipped>Potentially affects other tests.</skipped>
</testcase>
<testcase classname="test.engine.test_engine.TestEngine" name="test_engine_start_writes_safe_values_to_hw" time="0.082"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_engine_started_runs_scan_cycle" time="0.000">
<skipped>Potentially affects other tests.</skipped>
</testcase>
<testcase classname="test.engine.test_engine.TestEngine" name="test_execute_command_marks_assigned_tags_dirty" time="0.318"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_get_runlog" time="0.312"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_get_status" time="0.000">
<skipped>not implemented, needs input</skipped>
</testcase>
<testcase classname="test.engine.test_engine.TestEngine" name="test_hold_w_duration" time="1.285"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_internal_command_can_execute_valid_command" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_interpreter_error_causes_Paused_state" time="0.221"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_notify_tag_updates_publishes_dirty_tag" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_overlapping_uod_commands" time="0.757"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_pause_w_duration" time="1.075"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_read_process_image_marks_assigned_tags_dirty" time="0.207"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_read_process_image_sets_assigned_tag_values" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_restart_can_restart" time="1.072"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_restart_can_stop" time="0.438"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_restart_cancels_running_commands" time="0.430"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_restart_stop_ticking_interpreter" time="3.301"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_runlog_block" time="0.589"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_runlog_uod_commands" time="1.060"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_runlog_watch" time="0.715"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_runlog_watch_forced" time="0.000">
<skipped>Not implemented yet</skipped>
</testcase>
<testcase classname="test.engine.test_engine.TestEngine" name="test_runstate_hold" time="0.210"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_runstate_pause" time="0.406"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_runstate_start" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_runstate_stop" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_runstate_unhold" time="0.000">
<skipped>not implemented</skipped>
</testcase>
<testcase classname="test.engine.test_engine.TestEngine" name="test_runstate_unpause" time="0.412"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_safe_values_apply" time="0.103"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_set_and_continue_program" time="2.051"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_set_and_run_program" time="1.027"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_totalizer_base_units_no_accumulator" time="0.688"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_totalizer_base_units_with_accumulator_cv" time="1.321"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_totalizer_base_units_with_accumulator_volume" time="1.333"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_units" time="0.509"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_uod_command_can_execute_valid_command" time="0.415"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_uod_command_w_arguments" time="1.033"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_uod_command_w_arguments_fail" time="0.221"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_uod_command_w_regex_arguments" time="1.026"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_uod_commands_multiple_iterations" time="3.152"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_uod_invoke_command_signatures" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_uod_verify_command_signatures_default" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_uod_verify_command_signatures_regex" time="0.016"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_wait" time="1.176"/>
<testcase classname="test.engine.test_engine.TestEngine" name="test_write_process_values_writes_data_to_registers" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngineSetup" name="test_configure_uod" time="0.000"/>
<testcase classname="test.engine.test_engine.TestEngineSetup" name="test_create_engine" time="0.000"/>
<testcase classname="test.engine.test_engine_new.TestEngineNew" name="test_inject_command" time="0.971"/>
<testcase classname="test.engine.test_engine_new.TestEngineNew" name="test_inject_thresholds_1" time="1.043"/>
<testcase classname="test.engine.test_engine_new.TestEngineNew" name="test_inject_thresholds_2" time="0.966"/>
<testcase classname="test.engine.test_engine_new.TestEngineNew" name="test_run_until_condition" time="1.215"/>
<testcase classname="test.engine.test_engine_new.TestEngineNew" name="test_run_until_instruction" time="6.424"/>
<testcase classname="test.engine.test_engine_new.TestEngineNew" name="test_run_until_instruction_block" time="3.706"/>
<testcase classname="test.engine.test_engine_new.TestEngineNew" name="test_run_until_method_end" time="0.753"/>
<testcase classname="test.engine.test_engine_new.TestEngineNew" name="test_run_until_stop" time="0.535"/>
<testcase classname="test.engine.test_engine_new.TestEngineNew" name="test_speed_perceived" time="0.000">
<skipped>speed > 1 not implemented</skipped>
</testcase>
<testcase classname="test.engine.test_engine_new.TestEngineNew" name="test_speed_timer" time="0.000">
<skipped>speed > 1 not implemented</skipped>
</testcase>
<testcase classname="test.engine.test_engine_new.TestEngineNew" name="test_wait" time="1.566"/>
<testcase classname="test.engine.test_engine_new.TestEngineNew" name="test_watch_restart" time="5.380"/>
<testcase classname="test.engine.test_engine_tags.TestEngineTags" name="test_tag_block_time" time="1.854"/>
<testcase classname="test.engine.test_engine_tags.TestEngineTags" name="test_tag_block_time_nested_blocks" time="2.002"/>
<testcase classname="test.engine.test_engine_tags.TestEngineTags" name="test_tag_block_time_restart" time="2.934"/>
<testcase classname="test.engine.test_engine_tags.TestEngineTags" name="test_tag_block_time_stop_start" time="3.187"/>
<testcase classname="test.engine.test_engine_tags.TestEngineTags" name="test_tag_process_time" time="3.226"/>
<testcase classname="test.engine.test_engine_tags.TestEngineTags" name="test_tag_run_time" time="2.620"/>
<testcase classname="test.engine.test_engine_tags.TestFormatting" name="test_formatting" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_failing_write_masks_error_and_adds_to_pending" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_in_state_Reconnect_reconnect_is_automatically_performed_on_tick" time="1.005"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_initial_state_Disconnected" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_initialize_with_connected_hwl" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_methods_are_delegated" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_read_error_in_state_Issue_transitions_to_state_Reconnect" time="1.008"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_read_error_in_state_OK_transitions_to_state_Issue" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_read_error_returns_last_known_good_value_masking_error" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_read_in_state_Reconnect_transitions_to_state_Error_after_timeout" time="2.008"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_read_success_in_state_Issue_transitions_to_state_OK" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_read_success_in_state_Reconnect_keeps_state_Reconnect" time="1.003"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_reconnect_is_correctly_backed_off" time="0.031"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_registers_are_delegated" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_state_Disconnected_connect_error_Disconnected" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_state_Disconnected_connect_ok_Connected" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_state_Disconnected_read_raises" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_state_Disconnected_write_raises" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_state_Error_read_raises" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_state_Error_write_raises" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareErrorRecovery" name="test_write_ok_in_state_Issue_writes_pending_values" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareLayer" name="test_can_read_register" time="0.000"/>
<testcase classname="test.engine.test_hardware.TestHardwareLayer" name="test_can_write_register" time="0.000"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_alarm_can_retrigger" time="1.660"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_alarm_triggers_by_condition" time="1.656"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_assert_time_equal" time="0.018"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_base_can_set" time="0.000"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_base_command_h" time="0.521"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_base_command_min" time="0.521"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_base_command_sec" time="0.515"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_base_default_is_set_to_minutes" time="0.000"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_base_threshold_uses_base_min" time="1.521"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_base_threshold_uses_base_sec" time="1.518"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_base_threshold_uses_default_base_min" time="1.547"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_block" time="1.127"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_block_end_block" time="1.078"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_block_end_blocks" time="1.109"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_block_nested" time="1.825"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_block_nested_end_block" time="1.728"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_block_nested_end_blocks" time="1.726"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_block_time_watch" time="2.293"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_block_time_watch_2" time="0.000">
<skipped>Review with Eskild</skipped>
</testcase>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_block_time_watch_complex" time="2.997"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_block_unterminated" time="0.707"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_change_base_in_program" time="0.000">
<skipped>TODO</skipped>
</testcase>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_change_base_in_scope" time="0.000">
<skipped>TODO</skipped>
</testcase>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_command_Increment_run_counter" time="0.552"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_command_Run_counter" time="0.510"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_command_incr_counter" time="1.050"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_condition_with_invalid_tag_fails" time="0.000">
<skipped>TODO</skipped>
</testcase>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_evaluate" time="0.000"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_sequential_marks" time="1.065"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_threshold_block_time" time="2.831"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_threshold_column_volume" time="0.000">
<skipped>TODO</skipped>
</testcase>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_threshold_time" time="2.094"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_wait" time="1.154"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_watch_block_long_running_block_time" time="0.000">
<skipped>Block in Watch not supported</skipped>
</testcase>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_watch_can_evaluate_tag" time="1.720"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_watch_long_running_order" time="1.311"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_watch_nested" time="1.928"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_watch_restart" time="3.615"/>
<testcase classname="test.engine.test_interpreter.InterpreterTest" name="test_watch_tag_categorized_value" time="0.000">
<skipped>TODO</skipped>
</testcase>
<testcase classname="test.engine.test_labjack_hardware.TestLabjackHardware" name="test_can_connect" time="0.000"/>
<testcase classname="test.engine.test_labjack_hardware.TestLabjackHardware" name="test_can_read_multiple_registers" time="0.016"/>
<testcase classname="test.engine.test_labjack_hardware.TestLabjackHardware" name="test_can_read_register" time="0.000"/>
<testcase classname="test.engine.test_labjack_hardware.TestLabjackHardware" name="test_can_write_multiple_registers" time="0.000"/>
<testcase classname="test.engine.test_labjack_hardware.TestLabjackHardware" name="test_can_write_register" time="0.000"/>
<testcase classname="test.engine.test_lexer.LexerTest" name="test_block" time="0.022"/>
<testcase classname="test.engine.test_lexer.LexerTest" name="test_command" time="0.000"/>
<testcase classname="test.engine.test_lexer.LexerTest" name="test_condition" time="0.000"/>
<testcase classname="test.engine.test_lexer.LexerTest" name="test_condition_2" time="0.000"/>
<testcase classname="test.engine.test_lexer.LexerTest" name="test_condition_negative_value" time="0.000"/>
<testcase classname="test.engine.test_lexer.LexerTest" name="test_condition_unit" time="0.000"/>
<testcase classname="test.engine.test_lexer.LexerTest" name="test_hold" time="0.000"/>
<testcase classname="test.engine.test_lexer.LexerTest" name="test_hold_w_arg" time="0.000"/>
<testcase classname="test.engine.test_lexer.LexerTest" name="test_hold_w_arg2" time="0.000"/>
<testcase classname="test.engine.test_lexer.LexerTest" name="test_pause" time="0.000"/>
<testcase classname="test.engine.test_lexer.LexerTest" name="test_pause_w_arg" time="0.000"/>
<testcase classname="test.engine.test_lexer.LexerTest" name="test_watch_condition" time="0.000"/>
<testcase classname="test.engine.test_opcua_hardware.TestOPCUAHardware" name="test_access_level_disparity_is_detected" time="0.000">
<skipped>Skipping slow tests as configured</skipped>
</testcase>
<testcase classname="test.engine.test_opcua_hardware.TestOPCUAHardware" name="test_can_connect" time="0.000">
<skipped>Skipping slow tests as configured</skipped>
</testcase>
<testcase classname="test.engine.test_opcua_hardware.TestOPCUAHardware" name="test_can_read_multiple_registers" time="0.000">
<skipped>Skipping slow tests as configured</skipped>
</testcase>
<testcase classname="test.engine.test_opcua_hardware.TestOPCUAHardware" name="test_can_read_register" time="0.000">
<skipped>Skipping slow tests as configured</skipped>
</testcase>
<testcase classname="test.engine.test_opcua_hardware.TestOPCUAHardware" name="test_can_read_write_registers_with_type" time="0.000">
<skipped>Skipping slow tests as configured</skipped>
</testcase>
<testcase classname="test.engine.test_opcua_hardware.TestOPCUAHardware" name="test_can_write_multiple_registers" time="0.000">
<skipped>Skipping slow tests as configured</skipped>
</testcase>
<testcase classname="test.engine.test_opcua_hardware.TestOPCUAHardware" name="test_can_write_register" time="0.000">
<skipped>Skipping slow tests as configured</skipped>
</testcase>
<testcase classname="test.engine.test_opcua_hardware.TestOPCUAHardware" name="test_connection_left_connected_does_not_hang" time="0.000">
<skipped>Skipping slow tests as configured</skipped>
</testcase>
<testcase classname="test.engine.test_opcua_hardware.TestOPCUAHardware" name="test_does_help_user_fix_path_typo" time="0.000">
<skipped>Skipping slow tests as configured</skipped>
</testcase>
<testcase classname="test.engine.test_opcua_hardware.TestOPCUAHardware" name="test_exception_when_attempting_to_access_using_disconnected_client" time="0.000">
<skipped>Skipping slow tests as configured</skipped>
</testcase>
<testcase classname="test.engine.test_opcua_hardware.TestOPCUAHardware" name="test_illegal_register_type_is_detected" time="0.000">
<skipped>Skipping slow tests as configured</skipped>
</testcase>
<testcase classname="test.engine.test_opcua_hardware.TestOPCUAHardware" name="test_reconnect" time="0.000">
<skipped>Skipping slow tests as configured</skipped>
</testcase>
<testcase classname="test.engine.test_opcua_hardware.TestOPCUAHardware" name="test_type_disparity_is_detected" time="0.000">
<skipped>Skipping slow tests as configured</skipped>
</testcase>
<testcase classname="test.engine.test_parser.ParserTest" name="test_alarm" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_alarm_with_condition" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_block" time="0.016"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_command" time="0.016"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_command_args" time="0.031"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_command_name" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_command_name_args" time="0.053"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_command_name_args_simple" time="0.031"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_condition_error" time="0.016"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_condition_error_2" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_condition_negative_value" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_condition_tag_ws" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_condition_unit" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_condition_unit_no_ws" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_condition_unit_percentage" time="0.016"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_condition_unitless" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_condition_ws" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_duration" time="0.016"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_end_block" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_end_blocks" time="0.007"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_hold" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_hold_w_arg" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_identifier" time="0.016"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_increment_rc" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_mark" time="0.016"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_pause" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_pause_w_arg" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_program_ws" time="0.100"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_restart" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_stop" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_wait_w_arg" time="0.016"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_watch" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_watch_unit" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_watch_unitless" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_watch_with_condition" time="0.000"/>
<testcase classname="test.engine.test_parser.ParserTest" name="test_watch_with_mark" time="0.100"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_absorbance" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_basics_quantity" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_basics_unit" time="0.016"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_comparison" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_compatibility_quantity" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_compatibility_unit" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_conversion" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_conversion_invalid" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_dimensionless" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_dimensionless_percentage" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_dimensions" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_flow" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_formatting" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_frequency" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_higher_dimensionality" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_list_compatible_units" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_locale" time="0.000">
<skipped>Not sure we need this. Requres the Babel lib</skipped>
</testcase>
<testcase classname="test.engine.test_pint.PintTest" name="test_mass_flow_rate" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_pressure" time="0.016"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_string_parsing" time="0.000"/>
<testcase classname="test.engine.test_pint.PintTest" name="test_test_for_unknown_unit" time="0.000"/>
<testcase classname="test.engine.test_runlog.TestRunlog" name="test_Alarm_multiple_invocations" time="1.162"/>
<testcase classname="test.engine.test_runlog.TestRunlog" name="test_Alarm_single_invocation" time="0.625"/>
<testcase classname="test.engine.test_runlog.TestRunlog" name="test_Watch" time="0.607"/>
<testcase classname="test.engine.test_runlog.TestRunlog" name="test_start_complete_EngineInternalCommand" time="0.509"/>
<testcase classname="test.engine.test_runlog.TestRunlog" name="test_start_complete_InstructionUodCommand" time="0.312"/>
<testcase classname="test.engine.test_runlog.TestRunlog" name="test_start_complete_UodCommand" time="0.840"/>
<testcase classname="test.engine.test_timer.TimerTest" name="test_one_thead_timer" time="0.000">
<skipped>Slow</skipped>
</testcase>
<testcase classname="test.engine.test_timer.TimerTest" name="test_one_thead_timer_can_restart" time="0.000">
<skipped>Slow</skipped>
</testcase>
<testcase classname="test.engine.test_timer.TimerTest" name="test_one_thread_timer_drift" time="0.000">
<skipped>Slow</skipped>
</testcase>
<testcase classname="test.engine.test_timer.TimerTest" name="test_zero_thread_timer" time="0.000">
<skipped>Slow</skipped>
</testcase>
<testcase classname="test.engine.test_units.TestUnits" name="test_compare_custom_units" time="0.000"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_compare_multidimensional_pint_units" time="0.000"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_compare_values_compatible_units" time="0.016"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_compare_values_invalid_operator" time="0.000"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_compare_values_numeric_equality" time="0.000"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_compare_values_numeric_equality_w_unit" time="0.016"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_compare_values_numeric_equality_w_unit_error" time="0.000"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_compare_values_numeric_equality_w_unit_incompatible" time="0.000"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_compare_values_numeric_inequality" time="0.000"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_compare_values_numeric_inequality_w_unit" time="0.000"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_compare_values_string_equality" time="0.000"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_compare_values_string_inequality" time="0.000"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_custom_units" time="0.000"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_get_compatible_unit_names" time="0.000"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_is_supported_unit" time="0.000"/>
<testcase classname="test.engine.test_units.TestUnits" name="test_troublesome_pint_units" time="0.000"/>
<testcase classname="test.engine.test_uod.TestConversions" name="test_as_float" time="0.000"/>
<testcase classname="test.engine.test_uod.TestConversions" name="test_as_int" time="0.000"/>
<testcase classname="test.engine.test_uod.TestRegexs" name="test_regex_categorical_exclusive" time="0.000"/>
<testcase classname="test.engine.test_uod.TestRegexs" name="test_regex_categorical_exclusive_and_additive" time="0.000"/>
<testcase classname="test.engine.test_uod.TestRegexs" name="test_regex_number_with_unit" time="0.000"/>
<testcase classname="test.engine.test_uod.TestRegexs" name="test_regex_number_with_unit_non_negative" time="0.000"/>
<testcase classname="test.engine.test_uod.TestRegexs" name="test_regex_number_without_unit" time="0.000"/>
<testcase classname="test.engine.test_uod.TestRegexs" name="test_regex_number_ws" time="0.000"/>
<testcase classname="test.engine.test_uod.TestRegexs" name="test_regex_string" time="0.000"/>
<testcase classname="test.engine.test_uod.TestRegexs" name="test_regex_string_allowing_empty" time="0.000"/>
<testcase classname="test.engine.test_uod.TestRegexs_named_groups" name="test_named_groups_RegexCategorical" time="0.000"/>
<testcase classname="test.engine.test_uod.TestRegexs_named_groups" name="test_named_groups_RegexNumberWithUnit" time="0.000"/>
<testcase classname="test.engine.test_uod.TestRegexs_named_groups" name="test_named_groups_RegexText" time="0.000"/>
<testcase classname="test.protocol.test_aggregator_engine.AggregatorErrorTest" name="test_can_get_engine_data_for_registered_engine" time="0.046"/>
<testcase classname="test.protocol.test_aggregator_engine.AggregatorErrorTest" name="test_rpc_call_fail_with_network_error_engine_state_is_removed" time="0.047"/>
<testcase classname="test.protocol.test_aggregator_engine.MessageTest" name="test_print_sequence_range" time="0.000"/>
<testcase classname="test.protocol.test_aggregator_engine.ProtocolIntegrationTest" name="test_can_detect_network_down_and_buffer_up_messages" time="0.031"/>
<testcase classname="test.protocol.test_aggregator_engine.ProtocolIntegrationTest" name="test_can_register" time="0.022"/>
<testcase classname="test.protocol.test_aggregator_engine.ProtocolIntegrationTest" name="test_can_send_tag_updates" time="1.016"/>
<testcase classname="test.protocol.test_serialization.SerializationTest" name="test_round_trip_AM_MethodMsg" time="0.000"/>
<testcase classname="test.protocol.test_serialization.SerializationTest" name="test_round_trip_RegisterEngineMsg" time="0.000"/>
<testcase classname="test.protocol.test_serialization.SerializationTest" name="test_round_trip_TagsUpdatedMsg" time="0.000"/>
<testcase classname="test.protocol.test_serialization.SerializationTest" name="test_serialization_RegisterEngineMsg" time="0.000"/>
<testcase classname="test.protocol.test_serialization.SerializationTest" name="test_serialization_TagsUpdatedMsg" time="0.000"/>
<testcase classname="test.protocol.test_websocket_library.TestRpc" name="test_get_engine_id" time="1.678"/>
</testsuite>
</testsuites>