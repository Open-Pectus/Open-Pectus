{
  "openapi": "3.1.0",
  "info": {
    "title": "Pectus Aggregator",
    "version": "0.1.0"
  },
  "paths": {
    "/api/process_unit/{unit_id}": {
      "get": {
        "tags": [
          "process_unit"
        ],
        "summary": "Get Unit",
        "operationId": "get_unit",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Unit Id"
            },
            "name": "unit_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessUnit"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/process_units": {
      "get": {
        "tags": [
          "process_unit"
        ],
        "summary": "Get Units",
        "operationId": "get_units",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProcessUnit"
                  },
                  "type": "array",
                  "title": "Response Get Units"
                }
              }
            }
          }
        }
      }
    },
    "/api/process_unit/{unit_id}/process_values": {
      "get": {
        "tags": [
          "process_unit"
        ],
        "summary": "Get Process Values",
        "operationId": "get_process_values",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Unit Id"
            },
            "name": "unit_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProcessValue"
                  },
                  "type": "array",
                  "title": "Response Get Process Values"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/process_unit/{unit_id}/execute_command": {
      "post": {
        "tags": [
          "process_unit"
        ],
        "summary": "Execute Command",
        "operationId": "execute_command",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Unit Id"
            },
            "name": "unit_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutableCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/process_unit/{unit_id}/process_diagram": {
      "get": {
        "tags": [
          "process_unit"
        ],
        "summary": "Get Process Diagram",
        "operationId": "get_process_diagram",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Unit Id"
            },
            "name": "unit_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessDiagram"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/process_unit/{unit_id}/command_examples": {
      "get": {
        "tags": [
          "process_unit"
        ],
        "summary": "Get Command Examples",
        "operationId": "get_command_examples",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Unit Id"
            },
            "name": "unit_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CommandExample"
                  },
                  "type": "array",
                  "title": "Response Get Command Examples"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/process_unit/{unit_id}/run_log": {
      "get": {
        "tags": [
          "process_unit"
        ],
        "summary": "Get Run Log",
        "operationId": "get_run_log",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Unit Id"
            },
            "name": "unit_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunLog"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/process_unit/{unit_id}/method": {
      "get": {
        "tags": [
          "process_unit"
        ],
        "summary": "Get Method",
        "operationId": "get_method",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Unit Id"
            },
            "name": "unit_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Method"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/batch_job/{id}": {
      "get": {
        "tags": [
          "batch_job"
        ],
        "summary": "Get Batch",
        "operationId": "get_batch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchJob"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/recent_batch_jobs": {
      "get": {
        "tags": [
          "batch_job"
        ],
        "summary": "Get Recent Batch Jobs",
        "operationId": "get_recent_batch_jobs",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BatchJob"
                  },
                  "type": "array",
                  "title": "Response Get Recent Batch Jobs"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "aggregator"
        ],
        "summary": "Health",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BatchJob": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "unit_id": {
            "type": "string",
            "title": "Unit Id"
          },
          "unit_name": {
            "type": "string",
            "title": "Unit Name"
          },
          "completed_date": {
            "type": "string",
            "format": "date-time",
            "title": "Completed Date"
          },
          "contributors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Contributors",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "unit_id",
          "unit_name",
          "completed_date"
        ],
        "title": "BatchJob",
        "description": "Represents a current or historical run of a process unit. "
      },
      "CommandExample": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "example": {
            "type": "string",
            "title": "Example"
          }
        },
        "type": "object",
        "required": [
          "name",
          "example"
        ],
        "title": "CommandExample"
      },
      "CommandSource": {
        "type": "string",
        "enum": [
          "process_value",
          "manually_entered",
          "unit_button"
        ],
        "title": "CommandSource",
        "description": "An enumeration."
      },
      "ExecutableCommand": {
        "properties": {
          "command": {
            "type": "string",
            "title": "Command"
          },
          "source": {
            "$ref": "#/components/schemas/CommandSource"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "command",
          "source"
        ],
        "title": "ExecutableCommand"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InProgress": {
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "in_progress"
            ],
            "title": "State"
          },
          "progress_pct": {
            "type": "integer",
            "title": "Progress Pct"
          }
        },
        "type": "object",
        "required": [
          "state",
          "progress_pct"
        ],
        "title": "InProgress"
      },
      "NotOnline": {
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "not_online"
            ],
            "title": "State"
          },
          "last_seen_date": {
            "type": "string",
            "format": "date-time",
            "title": "Last Seen Date"
          }
        },
        "type": "object",
        "required": [
          "state",
          "last_seen_date"
        ],
        "title": "NotOnline"
      },
      "ProcessDiagram": {
        "properties": {
          "svg": {
            "type": "string",
            "title": "Svg"
          }
        },
        "type": "object",
        "required": [
          "svg"
        ],
        "title": "ProcessDiagram"
      },
      "ProcessUnit": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Ready"
              },
              {
                "$ref": "#/components/schemas/InProgress"
              },
              {
                "$ref": "#/components/schemas/NotOnline"
              }
            ],
            "title": "State"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "runtime_msec": {
            "type": "integer",
            "title": "Runtime Msec"
          },
          "current_user_role": {
            "$ref": "#/components/schemas/UserRole"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "state",
          "current_user_role"
        ],
        "title": "ProcessUnit",
        "description": "Represents a process unit. "
      },
      "ProcessValue": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Value"
          },
          "value_unit": {
            "type": "string",
            "title": "Value Unit"
          },
          "value_type": {
            "$ref": "#/components/schemas/ProcessValueType"
          },
          "commands": {
            "items": {
              "$ref": "#/components/schemas/ProcessValueCommand"
            },
            "type": "array",
            "title": "Commands"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value_type"
        ],
        "title": "ProcessValue",
        "description": "Represents a process value. "
      },
      "ProcessValueCommand": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "command": {
            "type": "string",
            "title": "Command"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled"
          },
          "value": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProcessValueCommandNumberValue"
              },
              {
                "$ref": "#/components/schemas/ProcessValueCommandFreeTextValue"
              },
              {
                "$ref": "#/components/schemas/ProcessValueCommandChoiceValue"
              }
            ],
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "name",
          "command"
        ],
        "title": "ProcessValueCommand"
      },
      "ProcessValueCommandChoiceValue": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          },
          "value_type": {
            "type": "string",
            "enum": [
              "choice"
            ],
            "title": "Value Type"
          },
          "options": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Options"
          }
        },
        "type": "object",
        "required": [
          "value",
          "value_type",
          "options"
        ],
        "title": "ProcessValueCommandChoiceValue"
      },
      "ProcessValueCommandFreeTextValue": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          },
          "value_type": {
            "type": "string",
            "enum": [
              "string"
            ],
            "title": "Value Type"
          }
        },
        "type": "object",
        "required": [
          "value",
          "value_type"
        ],
        "title": "ProcessValueCommandFreeTextValue"
      },
      "ProcessValueCommandNumberValue": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Value"
          },
          "value_unit": {
            "type": "string",
            "title": "Value Unit"
          },
          "valid_value_units": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Valid Value Units"
          },
          "value_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "int"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "float"
                ]
              }
            ],
            "title": "Value Type"
          }
        },
        "type": "object",
        "required": [
          "value",
          "value_type"
        ],
        "title": "ProcessValueCommandNumberValue"
      },
      "ProcessValueType": {
        "type": "string",
        "enum": [
          "string",
          "float",
          "int",
          "choice"
        ],
        "title": "ProcessValueType",
        "description": "An enumeration."
      },
      "Ready": {
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "ready"
            ],
            "title": "State"
          }
        },
        "type": "object",
        "required": [
          "state"
        ],
        "title": "Ready"
      },
      "RunLog": {
        "properties": {
          "lines": {
            "items": {
              "$ref": "#/components/schemas/RunLogLine"
            },
            "type": "array",
            "title": "Lines"
          }
        },
        "type": "object",
        "required": [
          "lines"
        ],
        "title": "RunLog"
      },
      "RunLogLine": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "command": {
            "$ref": "#/components/schemas/ExecutableCommand"
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "title": "Start"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "title": "End"
          },
          "progress": {
            "type": "number",
            "title": "Progress"
          },
          "start_values": {
            "items": {
              "$ref": "#/components/schemas/ProcessValue"
            },
            "type": "array",
            "title": "Start Values"
          },
          "end_values": {
            "items": {
              "$ref": "#/components/schemas/ProcessValue"
            },
            "type": "array",
            "title": "End Values"
          }
        },
        "type": "object",
        "required": [
          "id",
          "command",
          "start",
          "start_values",
          "end_values"
        ],
        "title": "RunLogLine"
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "viewer",
          "admin"
        ],
        "title": "UserRole",
        "description": "An enumeration."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}