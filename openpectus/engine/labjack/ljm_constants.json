{
  "header": {
    "filename": "ljm_constants.json",
    "version": "2019.02.08.A",
    "checksum": "-1",
    "support_url": "https://labjack.com/support/modbus",
    "tags_base_url": "https://labjack.com/support/modbus"
  },

  "tag_mappings": {
    "AIN":                "/support/datasheets/t-series/ain",
    "AIN_EF":             "/support/datasheets/t-series/ain/extended-features",
    "ASYNCH":             "/support/datasheets/t-series/digital-io/asynchronous-serial",
    "DAC":                "/support/datasheets/t-series/dac",
    "DIO":                "/support/datasheets/t-series/digital-io/extended-features",
    "DIO_EF":             "/support/datasheets/t-series/digital-io/extended-features",
    "ETHERNET":           "/support/datasheets/t-series/ethernet",
    "FILE_IO":            "/support/datasheets/t-series/sd-card",
    "I2C":                "/support/datasheets/t-series/digital-io/i2c",
    "INTFLASH":           "/support/datasheets/t-series/internal-flash",
    "LUA":                "/support/datasheets/t-series/lua-scripting",
    "ONEWIRE":            "/support/datasheets/t-series/digital-io/1-wire",
    "RTC":                "/support/datasheets/t-series/rtc",
    "SBUS":               "/support/datasheets/t-series/digital-io/sbus",
    "SPI":                "/support/datasheets/t-series/digital-io/spi",
    "STREAM":             "/support/datasheets/t-series/communication/stream-mode",
    "TDAC":               "/support/datasheets/t-series/appendix-c-2",
    "UART":               "/support/datasheets/t-series/digital-io/asynchronous-serial",
    "USER_RAM":           "/support/datasheets/t-series/hardware-overview/ram",
    "WATCHDOG":           "/support/datasheets/t-series/watchdog",
    "WIFI":               "/support/datasheets/t-series/wifi"
  },

  "registers": [
    {
      "address": 0,
      "name": "AIN#(0:254)",
      "type": "FLOAT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["AIN", "CORE"],
      "streamable": true,
      "displayname": ["Analog In #"],
      "description": "Returns the voltage of the specified analog input."
    },
    {
      "address": 1000,
      "name": "DAC#(0:1)",
      "type": "FLOAT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["DAC", "CORE"],
      "displayname": ["Analog Out #"],
      "description": "Pass a voltage for the specified analog output."
    },
    {
      "address": 2000,
      "name": "FIO#(0:7)",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["DIO", "CORE"],
      "altnames": ["DIO#(0:7)"],
      "displayname": ["FIO Bit #"],
      "description": "Read or set the state of 1 bit of digital I/O.  Also configures the direction to input or output. Read 0=Low AND 1=High. Write 0=Low AND 1=High."
    },
    {
      "address": 2008,
      "name": "EIO#(0:7)",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["DIO", "CORE"],
      "altnames": ["DIO#(8:15)"],
      "displayname": ["EIO Bit #"],
      "description": "Read or set the state of 1 bit of digital I/O.  Also configures the direction to input or output. Read 0=Low AND 1=High. Write 0=Low AND 1=High."
    },
    {
      "address": 2016,
      "name": "CIO#(0:3)",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["DIO", "CORE"],
      "altnames": ["DIO#(16:19)"],
      "displayname": ["CIO Bit #"],
      "description": "Read or set the state of 1 bit of digital I/O.  Also configures the direction to input or output. Read 0=Low AND 1=High. Write 0=Low AND 1=High."
    },
    {
      "address": 2020,
      "name": "MIO#(0:2)",
      "type": "UINT16",
      "devices": [
        "T7"
      ],
      "readwrite": "RW",
      "tags": ["DIO", "CORE"],
      "altnames": ["DIO#(20:22)"],
      "displayname": ["MIO Bit #"],
      "description": "Read or set the state of 1 bit of digital I/O.  Also configures the direction to input or output. Read 0=Low AND 1=High. Write 0=Low AND 1=High."
    },
    {
      "address": 2500,
      "name": "FIO_STATE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1
        },
        {
          "device": "T4",
          "fwmin": 0.2
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "streamable": true,
      "displayname": ["FIO Port State"],
      "description": "Read or write the state of the 8 bits of FIO in a single binary-encoded value. 0=Low AND 1=High.  Does not configure direction.  Reading lines set to output returns the current logic levels on the terminals, not necessarily the output states written.  The upper 8-bits of this value are inhibits."
    },
    {
      "address": 2501,
      "name": "EIO_STATE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1
        },
        {
          "device": "T4",
          "fwmin": 0.2
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "streamable": true,
      "displayname": ["EIO Port State"],
      "description": "Read or write the state of the 8 bits of EIO in a single binary-encoded value. 0=Low AND 1=High.  Does not configure direction.  Reading lines set to output returns the current logic levels on the terminals, not necessarily the output states written.  The upper 8-bits of this value are inhibits."
    },
    {
      "address": 2502,
      "name": "CIO_STATE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1
        },
        {
          "device": "T4",
          "fwmin": 0.2
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "streamable": true,
      "displayname": ["CIO Port State"],
      "description": "Read or write the state of the 4 bits of CIO in a single binary-encoded value. 0=Low AND 1=High.  Does not configure direction.  Reading lines set to output returns the current logic levels on the terminals, not necessarily the output states written.  The upper 8-bits of this value are inhibits."
    },
    {
      "address": 2503,
      "name": "MIO_STATE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1
        },
        {
          "device": "T4",
          "fwmin": 0.2
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "streamable": true,
      "displayname": ["MIO Port State"],
      "description": "Read or write the state of the 3 bits of MIO in a single binary-encoded value. 0=Low AND 1=High.  Does not configure direction.  Reading lines set to output returns the current logic levels on the terminals, not necessarily the output states written.  The upper 8-bits of this value are inhibits."
    },
    {
      "address": 2580,
      "name": "FIO_EIO_STATE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0005
        },
        {
          "device": "T4",
          "fwmin": 0.2
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "streamable": true,
      "displayname": ["FIO-EIO Port State"],
      "description": "Read or write the state of the 16 bits of FIO-EIO in a single binary-encoded value. 0=Low AND 1=High.  Does not configure direction.  Reading lines set to output returns the current logic levels on the terminals, not necessarily the output states written."
    },
    {
      "address": 2581,
      "name": "EIO_CIO_STATE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0005
        },
        {
          "device": "T4",
          "fwmin": 0.2
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "streamable": true,
      "displayname": ["EIO-CIO Port State"],
      "description": "Read or write the state of the 12 bits of EIO-CIO in a single binary-encoded value. 0=Low AND 1=High.  Does not configure direction.  Reading lines set to output returns the current logic levels on the terminals, not necessarily the output states written. As of firmware 1.0172, MIO states are included in the upper nibble of the CIO byte."
    },
    {
      "address": 2582,
      "name": "CIO_MIO_STATE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0172
        },
        {
          "device": "T4",
          "fwmin": 0.2
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "streamable": true,
      "displayname": ["EIO-CIO Port State"],
      "description": "Read or write the state of the 12 bits of CIO-MIO in a single binary-encoded value. 0=Low AND 1=High.  Does not configure direction.  Reading lines set to output returns the current logic levels on the terminals, not necessarily the output states written."
    },
    {
      "address": 2600,
      "name": "FIO_DIRECTION",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9402
        },
        {
          "device": "T4",
          "fwmin": 0.2
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "displayname": ["FIO Port Direction"],
      "description": "Read or write the direction of the 8 bits of FIO in a single binary-encoded value.  0=Input and 1=Output.  The upper 8-bits of this value are inhibits."
    },
    {
      "address": 2601,
      "name": "EIO_DIRECTION",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9402
        },
        {
          "device": "T4",
          "fwmin": 0.2
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "displayname": ["EIO Port Direction"],
      "description": "Read or write the direction of the 8 bits of EIO in a single binary-encoded value.  0=Input and 1=Output.  The upper 8-bits of this value are inhibits."
    },
    {
      "address": 2602,
      "name": "CIO_DIRECTION",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9402
        },
        {
          "device": "T4",
          "fwmin": 0.2
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "displayname": ["CIO Port Direction"],
      "description": "Read or write the direction of the 4 bits of CIO in a single binary-encoded value.  0=Input and 1=Output.  The upper 8-bits of this value are inhibits."
    },
    {
      "address": 2603,
      "name": "MIO_DIRECTION",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9402
        },
        {
          "device": "T4",
          "fwmin": 0.2
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "displayname": ["MIO Port Direction"],
      "description": "Read or write the direction of the 3 bits of MIO in a single binary-encoded value.  0=Input and 1=Output.  The upper 8-bits of this value are inhibits."
    },
    {
      "address": 2800,
      "name": "DIO_STATE",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "description": "Read or write the state of all digital I/O in a single binary-encoded value. 0=Low AND 1=High. Does not configure direction.  A read of an output returns the current logic level on the terminal, not necessarily the output state written.  Writes are filtered by the value in DIO_INHIBIT.",
      "constants": [
        {"value": 0, "name": "Low"},
        {"value": 1, "name": "High"}
      ]
    },
    {
      "address": 2850,
      "name": "DIO_DIRECTION",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "description": "Read or write the direction of all digital I/O in a single binary-encoded value.  0=Input and 1=Output.  Writes are filtered by the value in DIO_INHIBIT.",
      "constants": [
        {"value": 0, "name": "Input"},
        {"value": 1, "name": "Output"}
      ]
    },
    {
      "address": 2880,
      "name": "DIO_ANALOG_ENABLE",
      "type": "UINT32",
      "devices": [
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "description": "Read or write the analog configuration of all digital I/O in a single binary-encoded value.  1=Analog mode and 0=Digital mode. When switching from analog to digital, the lines will be set to input. Writes are filtered by the value in DIO_INHIBIT.",
      "constants": [
        {"value": 0, "name": "Digital mode"},
        {"value": 1, "name": "Analog mode"}
      ]
    },
    {
      "address": 2890,
      "name": "DIO_PULLUP_DISABLE",
      "type": "UINT32",
      "devices": [
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "description": "This register will prevent pullups from being enabled on lines set to digital input. This is a binary coded value where bit 0 represent FIO0 and bit 11 represents EIO3. 1 = pullup disabled, 0 = pullup enabled. This register only affects flex-lines which can be configured as analog or digital. This register is not affected by the inhibit register."
    },
    {
      "address": 2900,
      "name": "DIO_INHIBIT",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["DIO"],
      "default": 0,
      "description": "A single binary-encoded value where each bit determines whether _STATE, _DIRECTION or _ANALOG_ENABLE writes affect that bit of digital I/O.<br>0=Default=Affected,<br>1=Ignored.",
      "constants": [
        {"value": 0, "name": "Affected"},
        {"value": 1, "name": "Ignored"}
      ]
    },
    {
      "address": 2990,
      "name": "LED_COMM",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1
        },
        {
          "device": "T4",
          "fwmin": 1.0008
        }
      ],
      "readwrite": "W",
      "tags": ["DIO"],
      "default": 0,
      "description": "Sets the state of the COMM LED when the LEDs are set to manual, see the POWER_LED register.",
      "constants": [
        {"value": 0, "name": "Off"},
        {"value": 1, "name": "On"}
      ]
    },
    {
      "address": 2991,
      "name": "LED_STATUS",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1
        },
        {
          "device": "T4",
          "fwmin": 1.0008
        }
      ],
      "readwrite": "W",
      "tags": ["DIO"],
      "default": 0,
      "description": "Sets the state of the STATUS LED when the LEDs are set to manual, see the POWER_LED register.",
      "constants": [
        {"value": 0, "name": "Off"},
        {"value": 1, "name": "On"}
      ]
    },
    {
      "address": 4002,
      "name": "STREAM_SCANRATE_HZ",
      "type": "FLOAT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "Write a value to specify the number of times per second that all channels in the stream scanlist will be read.  Max stream speeds are based on Sample Rate which is NumChannels*ScanRate.  Has no effect when using and external clock.  A read of this register returns the actual scan rate, which can be slightly different due to rounding.  For scan rates >152.588, the actual scan interval is multiples of 100 ns.  Assuming a core clock of 80 MHz the internal roll value is (80M/(8*DesiredScanRate))-1 and the actual scan rate is then 80M/(8*(RollValue+1).  For slower scan rates the scan interval resolution is changed to 1 us, 10 us, 100 us, or 1 ms as needed to achieve the longer intervals."
    },
    {
      "address": 4004,
      "name": "STREAM_NUM_ADDRESSES",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "The number of entries in the scanlist"
    },
    {
      "address": 4006,
      "name": "STREAM_SAMPLES_PER_PACKET",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "Specifies the number of data points to be sent in the data packet. Only applies to spontaneous mode."
    },
    {
      "address": 4008,
      "name": "STREAM_SETTLING_US",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "description": "The T7 will select the settling time based on resolution and gain settings. When the sample rate is above 60 kHz, settling time will be set to ~5 us. Max is 4400."
        },
        {
          "device": "T4",
          "description": "The T4 will default to 10 us. When the scan rate is above 20 kHz, settling time will be set to 5 us."
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "Time in microseconds to allow signals to settle after switching the mux. Does not apply to the 1st channel in the scan list, as that settling is controlled by scan rate (the time from the last channel until the start of the next scan). Default=0. When set to less than 1, automatic settling will be used. The automatic settling behavior varies by device." 
    },
    {
      "address": 4010,
      "name": "STREAM_RESOLUTION_INDEX",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "description": "Valid values: 0-8. Default value of 0 corresponds to an index of 1."
        },
        {
          "device": "T4",
          "description": "Valid values: 0-5. Default value of 0 corresponds to an index of 1."
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "The resolution index for stream readings. A larger resolution index generally results in lower noise and longer sample times."
    },
    {
      "address": 4012,
      "name": "STREAM_BUFFER_SIZE_BYTES",
      "type": "UINT32",
      "devices": [
        {
          "device": "T4",
          "default": 0,
          "description": "Max size is 32768. Default size is 8192."
        },
        {
          "device": "T7",
          "default": 0,
          "description": "Max size is 32768. Default size is 4096."
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "Size of the stream data buffer in bytes. A value of 0 equates to the default value.  Must be a power of 2. Size in samples is STREAM_BUFFER_SIZE_BYTES/2.  Size in scans is (STREAM_BUFFER_SIZE_BYTES/2)/STREAM_NUM_ADDRESSES. Changes while stream is running do not affect the currently running stream."
    },
    {
      "address": 4014,
      "name": "STREAM_CLOCK_SOURCE",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.011
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "altnames": ["STREAM_OPTIONS"],
      "description": "Controls which clock source will be used to run the main stream clock.<br>0 = Internal crystal,<br>2 = External clock source on CIO3.<br>Rising edges will increment a counter and trigger a stream scan after the number of edges specified in STREAM_EXTERNAL_CLOCK_DIVISOR. T7 will expect external stream clock on CIO3. All other values reserved."
    },
    {
      "address": 4016,
      "name": "STREAM_AUTO_TARGET",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9108
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "Controls where data will be sent. Value is a bitmask.<br>bit 0: 1 = Send to Ethernet 702 sockets,<br>bit 1: 1 = Send to USB,<br>bit 4: 1 = Command-Response mode.<br>All other bits are reserved."
    },
    {
      "address": 4020,
      "name": "STREAM_NUM_SCANS",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "The number of scans to run before automatically stopping (stream-burst). 0 = run continuously. Limit for STREAM_NUM_SCANS is 2^32-1, but if the host is not reading data as fast as it is acquired you also need to consider STREAM_BUFFER_SIZE_BYTES."
    },
    {
      "address": 4022,
      "name": "STREAM_EXTERNAL_CLOCK_DIVISOR",
      "type": "UINT32",
      "devices": [
        "T7"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "The number of pulses per stream scan when using an external clock."
    },
    {
      "address": 4024,
      "name": "STREAM_TRIGGER_INDEX",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0186
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "Controls when stream scanning will start.<br>0 = Start when stream is enabled,<br>2000 = Start when DIO_EF0 detects an edge,<br>2001 = Start when DIO_EF1 detects an edge.<br>See the stream documentation for all supported values."
    },
    {
      "address": 4026,
      "name": "STREAM_START_TIME_STAMP",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0214
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["STREAM"],
      "description": "When stream is started the value of CORE_TIMER will be saved to this register. The first stream scan occurs one scan period after the time reported by this register."
    },
    {
      "address": 4028,
      "name": "STREAM_AUTORECOVER_DISABLE",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0260
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "When the stream buffer becomes full the stream will be stopped. Same behavior as if STREAM_ENABLE is set to zero."
    },
    {
      "address": 4100,
      "name": "STREAM_SCANLIST_ADDRESS#(0:127)",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "A list of addresses to read each scan. In the case of Stream-Out enabled, the list may also include something to write each scan."
    },
    {
      "address": 4800,
      "name": "STREAM_OUT#(0:3)",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0012
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["STREAM"],
      "description": "Include one or more of these registers in STREAM_SCANLIST_ADDRESS#(0:127) to trigger stream-out updates.  When added to the scan list these do count against the max scan rate just like normal input addresses, but they do not return any data in the stream read."
    },
    {
      "address": 4040,
      "name": "STREAM_OUT#(0:3)_TARGET",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0012
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "Channel that data will be written to.  Before writing data to _BUFFER_###, you must write to _TARGET so the device knows how to interpret and store values."
    },
    {
      "address": 4050,
      "name": "STREAM_OUT#(0:3)_BUFFER_ALLOCATE_NUM_BYTES",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.93
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "altnames": ["STREAM_OUT#(0:3)_BUFFER_SIZE"],
      "description": "Size of the buffer in bytes as a power of 2. Should be at least twice the size of updates that will be written and no less than 32. Before writing data to _BUFFER_###, you must write to _BUFFER_ALLOCATE_NUM_BYTES to allocate RAM for the data. Max is 16384."
    },
    {
      "address": 4060,
      "name": "STREAM_OUT#(0:3)_LOOP_NUM_VALUES",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.93
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "altnames": ["STREAM_OUT#(0:3)_LOOP_SIZE"],
      "description": "The number of values, from the end of the array, that will be repeated after reaching the end of supplied data array."
    },
    {
      "address": 4070,
      "name": "STREAM_OUT#(0:3)_SET_LOOP",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.93
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["STREAM"],
      "description": "Controls when new data and loop size are used.<br>1=Use new data immediately.<br>2=Wait for synch. New data will not be used until a different stream-out channel is set to Synch.<br>3=Synch. This stream-out# as well as any stream-outs set to synch will start using new data immediately."
    },
    {
      "address": 4080,
      "name": "STREAM_OUT#(0:3)_BUFFER_STATUS",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.93
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["STREAM"],
      "description": "The number of values in the buffer that are not currently being used."
    },
    {
      "address": 4090,
      "name": "STREAM_OUT#(0:3)_ENABLE",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.93
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["STREAM"],
      "description": "When STREAM_OUT#_ENABLE is enabled, the stream out target is generally updated by one value from the stream out buffer per stream scan. For example, there will generally be one instance of e.g. STREAM_OUT0 in the stream scan list, which will cause one STREAM_OUT0_BUFFER value to be consumed and written to STREAM_OUT0_TARGET for every stream scan. The stream scan list could also contain two instances of STREAM_OUT0, in which case two values from STREAM_OUT0_BUFFER value would be consumed and written for every stream scan.",
      "usesRAM": true,
      "constants": [
        {"value": 0, "name": "DISABLED"},
        {"value": 1, "name": "ENABLED"}
      ]
    },
    {
      "address": 4400,
      "name": "STREAM_OUT#(0:3)_BUFFER_F32",
      "type": "FLOAT32",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.93
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["STREAM"],
      "description": "Data destination when sending floating point data. Appropriate cal constants are used to convert F32 values to 16-bit binary data, and thus each of these values uses 2 bytes of the stream-out buffer. This register is a buffer."
    },
    {
      "address": 4410,
      "name": "STREAM_OUT#(0:3)_BUFFER_U32",
      "type": "UINT32",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.93
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["STREAM"],
      "description": "Not used at this time.  There are no U32 registers supported in stream-out. This register is a buffer."
    },
    {
      "address": 4420,
      "name": "STREAM_OUT#(0:3)_BUFFER_U16",
      "type": "UINT16",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.93
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["STREAM"],
      "description": "Data destination when sending 16-bit integer data. Each value uses 2 bytes of the stream-out buffer. This register is a buffer."
    },
    {
      "address": 4500,
      "name": "STREAM_DATA_CR",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["STREAM"],
      "description": "Address to read stream data from when operating in C-R mode."
    },
    {
      "address": 4899,
      "name": "STREAM_DATA_CAPTURE_16",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0071
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "tags": ["STREAM"],
      "streamable": true,
      "description": "If a channel produces 32-bits of data the upper 16 will be saved here."
    },
    {
      "address": 4898,
      "name": "STREAM_DEBUG_GET_SELF_INDEX",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0254
        }
      ],
      "readwrite": "RW",
      "tags": ["STREAM"],
      "streamable": true,
      "description": "Returns the index of the channel. The index is the position in the scan list that the channel occupies."
    },
    {
      "address": 4990,
      "name": "STREAM_ENABLE",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9421
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["STREAM"],
      "description": "Write 1 to start stream. Write 0 to stop stream. Reading this register returns 1 when stream is enabled. When using a triggered stream the stream is considered enabled while waiting for the trigger.",
      "usesRAM": true
    },
    {
      "address": 5000,
      "name": "SPI_CS_DIONUM",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["SPI"],
      "description": "The DIO line for Chip-Select."
    },
    {
      "address": 5001,
      "name": "SPI_CLK_DIONUM",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["SPI"],
      "description": "The DIO line for Clock."
    },
    {
      "address": 5002,
      "name": "SPI_MISO_DIONUM",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["SPI"],
      "description": "The DIO line for Master-In-Slave-Out."
    },
    {
      "address": 5003,
      "name": "SPI_MOSI_DIONUM",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["SPI"],
      "description": "The DIO line for Master-Out-Slave-In."
    },
    {
      "address": 5004,
      "name": "SPI_MODE",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["SPI"],
      "description": "The SPI mode controls the clock idle state and which edge clocks the data. Bit 1 is CPOL and Bit 0 is CPHA, so CPOL/CPHA for different decimal values:<br>0 = 0/0 = b00,<br>1 = 0/1 = b01,<br>2 = 1/0 = b10,<br>3 = 1/1 = b11.<br>For CPOL and CPHA explanations, see Wikipedia article: https://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus."
    },
    {
      "address": 5005,
      "name": "SPI_SPEED_THROTTLE",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["SPI"],
      "description": "This value controls the SPI clock frequency.  Pass 0-65535.  Default=0 corresponds to 65536 internally which results in ~800 kHz.<br>65500 = ~100 kHz,<br>65100 = ~10 kHz,<br>61100 = ~1 kHz,<br>21000 = ~100 Hz,<br>and 1 = ~67 Hz.<br>Avoid setting too low such that the entire transaction lasts longer than the 250 millisecond timeout of the internal watchdog timer."
    },
    {
      "address": 5006,
      "name": "SPI_OPTIONS",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["SPI"],
      "description": "Bit 0 is Auto-CS-Disable. When bit 0 is 0, CS is enabled. When bit 0 is 1, CS is disabled.<br>Bit 1: 0 = Set DIO directions before starting the SPI operations, 1 = Do not set DIO directions.<br>Bit 2: 0 = Transmit data MSB first, 1 = LSB first.<br>Bits 4-7: This value sets the number of bits that will be transmitted during the last byte of the SPI operation. Default is 8, valid options are 1-8."
    },
    {
      "address": 5007,
      "name": "SPI_GO",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["SPI"],
      "description": "Write 1 to begin the configured SPI transaction.",
      "usesRAM": true
    },
    {
      "address": 5009,
      "name": "SPI_NUM_BYTES",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["SPI"],
      "description": "The number of bytes to transfer."
    },
    {
      "address": 5010,
      "name": "SPI_DATA_TX",
      "type": "BYTE",
      "isBuffer": true,
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["SPI"],
      "altnames": ["SPI_DATA_WRITE"],
      "description": "Write data here. This register is a buffer."
    },
    {
      "address": 5050,
      "name": "SPI_DATA_RX",
      "type": "BYTE",
      "isBuffer": true,
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["SPI"],
      "altnames": ["SPI_DATA_READ"],
      "description": "Read data here. This register is a buffer. Underrun behavior - fill with zeros."
    },
    {
      "address": 5100,
      "name": "I2C_SDA_DIONUM",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["I2C"],
      "description": "The number of the DIO line to be used as the I2C data line. Ex: Writing 0 will force FIO0 to become the I2C-SDA line."
    },
    {
      "address": 5101,
      "name": "I2C_SCL_DIONUM",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["I2C"],
      "description": "The number of the DIO line to be used as the I2C clock line. Ex: Writing 1 will force FIO1 to become the I2C-SCL line."
    },
    {
      "address": 5102,
      "name": "I2C_SPEED_THROTTLE",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["I2C"],
      "description": "This value controls the I2C clock frequency.  Pass 0-65535.<br>Default=0 corresponds to 65536 internally which results in ~450 kHz.<br>1 results in ~40 Hz, 65516 is ~100 kHz."
    },
    {
      "address": 5103,
      "name": "I2C_OPTIONS",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["I2C"],
      "description": "Advanced. Controls details of the I2C protocol to improve device compatibility.<br>bit 0: 1 = Reset the I2C bus before attempting communication.<br>bit 1: 0 = Restarts will use a stop and a start, 1 = Restarts will not use a stop.<br>bit 2: 1 = disable clock stretching."
    },
    {
      "address": 5104,
      "name": "I2C_SLAVE_ADDRESS",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["I2C"],
      "description": "The 7-bit address of the slave device. Value is shifted left by firmware to allow room for the I2C R/W bit. "
    },
    {
      "address": 5108,
      "name": "I2C_NUM_BYTES_TX",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["I2C"],
      "description": "The number of data bytes to transmit. Zero is valid and will result in a read-only I2C operation."
    },
    {
      "address": 5109,
      "name": "I2C_NUM_BYTES_RX",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["I2C"],
      "description": "The number of data bytes to read. Zero is valid and will result in a write-only I2C operation."
    },
    {
      "address": 5110,
      "name": "I2C_GO",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9504
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["I2C"],
      "description": "Writing to this register will instruct the LabJack to perform an I2C transaction."
    },
    {
      "address": 5114,
      "name": "I2C_ACKS",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9504
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["I2C"],
      "description": "An array of bits used to observe ACKs from the slave device."
    },
    {
      "address": 5120,
      "name": "I2C_DATA_TX",
      "type": "BYTE",
      "isBuffer": true,
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["I2C"],
      "altnames": ["I2C_WRITE_DATA"],
      "description": "Data that will be written to the I2C bus. This register is a buffer."
    },
    {
      "address": 5160,
      "name": "I2C_DATA_RX",
      "type": "BYTE",
      "isBuffer": true,
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["I2C"],
      "altnames": ["I2C_READ_DATA"],
      "description": "Data that has been read from the I2C bus. This register is a buffer. Underrun behavior - fill with zeros."
    },
    {
      "address": 5300,
      "name": "ONEWIRE_DQ_DIONUM",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "The data-line DIO number."
    },
    {
      "address": 5301,
      "name": "ONEWIRE_DPU_DIONUM",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "The dynamic pullup control DIO number."
    },
    {
      "address": 5302,
      "name": "ONEWIRE_OPTIONS",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Controls advanced features. Value is a bitmask.<br>bit 0: reserved,<br>bit 1: reserved,<br>bit 2: 1=DPU Enabled 0=DPU Disabled,<br>bit 3: DPU Polarity 1=Active state is high, 0=Active state is low (Dynamic Pull-Up)"
    },
    {
      "address": 5307,
      "name": "ONEWIRE_FUNCTION",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Set the ROM function to use.<br>0xF0=Search,<br>0xCC=Skip,<br>0x55=Match,<br>0x33=Read."
    },
    {
      "address": 5308,
      "name": "ONEWIRE_NUM_BYTES_TX",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Number of data bytes to be sent."
    },
    {
      "address": 5309,
      "name": "ONEWIRE_NUM_BYTES_RX",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Number of data bytes to be received."
    },
    {
      "address": 5310,
      "name": "ONEWIRE_GO",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Instructs the T7 to perform the configured 1-wire transaction."
    },
    {
      "address": 5320,
      "name": "ONEWIRE_ROM_MATCH_H",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Upper 32-bits of the ROM to match."
    },
    {
      "address": 5322,
      "name": "ONEWIRE_ROM_MATCH_L",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Lower 32-bits of the ROM to match."
    },
    {
      "address": 5332,
      "name": "ONEWIRE_ROM_BRANCHS_FOUND_H",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Upper 32-bits of the branches detected during a search."
    },
    {
      "address": 5334,
      "name": "ONEWIRE_ROM_BRANCHS_FOUND_L",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Lower 32-bits of the branches detected during a search."
    },
    {
      "address": 5328,
      "name": "ONEWIRE_SEARCH_RESULT_H",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Upper 32-bits of the search result."
    },
    {
      "address": 5330,
      "name": "ONEWIRE_SEARCH_RESULT_L",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Lower 32-bites of the search result."
    },
    {
      "address": 5324,
      "name": "ONEWIRE_PATH_H",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Upper 32-bits of the path to take during a search."
    },
    {
      "address": 5326,
      "name": "ONEWIRE_PATH_L",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Lower 32-bits of the path to take during a search."
    },
    {
      "address": 5340,
      "name": "ONEWIRE_DATA_TX",
      "type": "BYTE",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Data to be transmitted over the 1-wire bus. This register is a buffer."
    },
    {
      "address": 5370,
      "name": "ONEWIRE_DATA_RX",
      "type": "BYTE",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["ONEWIRE"],
      "description": "Data received over the 1-wire bus. This register is a buffer. Underrun behavior - buffer is static, old data will fill the extra locations, firmware 1.0225 changes this to read zeros."
    },
    {
      "address": 5400,
      "name": "ASYNCH_ENABLE",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "1 = Turn on Asynch. Configures timing hardware, DIO lines and allocates the receiving buffer.",
      "usesRAM": true
    },
    {
      "address": 5420,
      "name": "ASYNCH_BAUD",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "The symbol rate that will be used for communication. 9600 is typical. Up to 38400 works, but heavily loads the T7's processor."
    },
    {
      "address": 5405,
      "name": "ASYNCH_RX_DIONUM",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "The DIO line that will receive data. (RX)"
    },
    {
      "address": 5410,
      "name": "ASYNCH_TX_DIONUM",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "The DIO line that will transmit data. (TX)"
    },
    {
      "address": 5415,
      "name": "ASYNCH_NUM_DATA_BITS",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "The number of data bits per frame. 0-8, 0=8."
    },
    {
      "address": 5430,
      "name": "ASYNCH_RX_BUFFER_SIZE_BYTES",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "Number of bytes to use for the receiving buffer. Max is 2048. 0 = 200"
    },
    {
      "address": 5435,
      "name": "ASYNCH_NUM_BYTES_RX",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "The number of data bytes that have been received."
    },
    {
      "address": 5440,
      "name": "ASYNCH_NUM_BYTES_TX",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "The number of bytes to be transmitted after writing to GO. Max is 256.",
      "usesRAM": true
    },
    {
      "address": 5450,
      "name": "ASYNCH_TX_GO",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "Write a 1 to this register to initiate a transmission."
    },
    {
      "address": 5455,
      "name": "ASYNCH_NUM_STOP_BITS",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "The number of stop bits. Values:<br>1 = one stop bit,<br>2 = two stop bits,<br>0 = one stop bit."
    },
    {
      "address": 5460,
      "name": "ASYNCH_PARITY",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "Parity setting:<br>0=none,<br>1=odd,<br>2=even."
    },
    {
      "address": 5465,
      "name": "ASYNCH_NUM_PARITY_ERRORS",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "The number of parity errors that have been detected. Cleared when UART is enabled. Can also be cleared by writing 0."
    },
    {
      "address": 5490,
      "name": "ASYNCH_DATA_TX",
      "type": "UINT16",
      "isBuffer": true,
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "Write data to be transmitted here. This register is a buffer."
    },
    {
      "address": 5495,
      "name": "ASYNCH_DATA_RX",
      "type": "UINT16",
      "isBuffer": true,
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["ASYNCH", "UART"],
      "description": "Read received data from here. This register is a buffer. Underrun behavior - fill with zeros."
    },
    {
      "address": 6000,
      "name": "LUA_RUN",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0018
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA"],
      "description": "Writing 1 compiles and runs the Lua script that is loaded in RAM. Writing zero stops the script and begins cleaning up memory. Users may poll the register after writing a value of 0 to verify that the VM is unloaded, and garbage collection is complete.<br>0 = VM fully unloaded.<br>1 = Running/in-progress",
      "usesRAM": true
    },
    {
      "address": 6012,
      "name": "LUA_SOURCE_SIZE",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0018
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA"],
      "description": "Allocates RAM for the source code.",
      "usesRAM": true
    },
    {
      "address": 6014,
      "name": "LUA_SOURCE_WRITE",
      "type": "BYTE",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0018
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "W",
      "tags": ["LUA"],
      "description": "Write the source code here. Source will be saved to the RAM allocated by LUA_SOURCE_SIZE. This register is a buffer."
    },
    {
      "address": 6020,
      "name": "LUA_DEBUG_ENABLE",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0018
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA"],
      "description": "Write 1 to this register to enable debugging.",
      "usesRAM": true
    },
    {
      "address": 6022,
      "name": "LUA_DEBUG_NUM_BYTES",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0018
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA"],
      "description": "The number of data bytes in the debug buffer waiting to be read."
    },
    {
      "address": 6024,
      "name": "LUA_DEBUG_DATA",
      "type": "BYTE",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0018
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "tags": ["LUA"],
      "description": "Read debug data from here. This register is a buffer."
    },
    {
      "address": 6032,
      "name": "LUA_SAVE_TO_FLASH",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0059
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA"],
      "description": "Write 1 to save the loaded source code to flash."
    },
    {
      "address": 6034,
      "name": "LUA_LOAD_SAVED",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0059
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "W",
      "tags": ["LUA"],
      "description": "Writing any value reads the script from Flash and loads it into RAM. The script can now be compiled and run."
    },
    {
      "address": 6036,
      "name": "LUA_SAVED_READ_POINTER",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.006
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA"],
      "description": "Address within the saved Lua script in Flash to begin reading from."
    },
    {
      "address": 6038,
      "name": "LUA_SAVED_READ",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.006
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "tags": ["LUA"],
      "description": "Read script saved to flash from here."
    },
    {
      "address": 6100,
      "name": "LUA_RUN_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0078
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA"],
      "description": "If set to 1 the script saved in flash will be loaded and run when the LabJack boots up."
    },
    {
      "address": 6120,
      "name": "LUA_DEBUG_ENABLE_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0078
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA"],
      "description": "This is the value that will be loaded into LUA_DEBUG_ENABLE when the LabJack boots up."
    },
    {
      "address": 6122,
      "name": "LUA_DEBUG_NUM_BYTES_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0078
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA"],
      "description": "This is the value that will be loaded into LUA_DEBUG_NUM_BYTES when the LabJack boots up."
    },
    {
      "address": 7000,
      "name": "AIN#(0:149)_EF_READ_A",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["AIN_EF", "AIN", "CORE"],
      "description": "Function dependent on selected feature index.",
      "usesRAM": true
    },
    {
      "address": 7300,
      "name": "AIN#(0:149)_EF_READ_B",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 7600,
      "name": "AIN#(0:149)_EF_READ_C",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 7900,
      "name": "AIN#(0:149)_EF_READ_D",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 9000,
      "name": "AIN#(0:149)_EF_INDEX",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4",
          "description": "The T4 does not support thermocouple modes."
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Specify the desired extended feature for this analog input with the index value. List of index values:<br>0=None(disabled);<br>1=Offset and Slope;<br>3=Max/Min/Avg;<br>4=Resistance;<br>5=Average and Threshold;<br>10=RMS Flex;<br>11=FlexRMS;<br>20=Thermocouple type E;<br>21=Thermocouple type J;<br>22=Thermocouple type K;<br>23=Thermocouple type R;<br>24=Thermocouple type T;<br>25=Thermocouple type S;<br>30=Thermocouple type C;<br>40=RTD model PT100;<br>41=RTD model PT500;<br>42=RTD model PT1000.",
      "usesRAM": true
    },
    {
      "address": 9300,
      "name": "AIN#(0:149)_EF_CONFIG_A",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 9600,
      "name": "AIN#(0:149)_EF_CONFIG_B",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 9900,
      "name": "AIN#(0:149)_EF_CONFIG_C",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 10200,
      "name": "AIN#(0:149)_EF_CONFIG_D",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 10500,
      "name": "AIN#(0:149)_EF_CONFIG_E",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 10800,
      "name": "AIN#(0:149)_EF_CONFIG_F",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 11100,
      "name": "AIN#(0:149)_EF_CONFIG_G",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 11400,
      "name": "AIN#(0:149)_EF_CONFIG_H",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 11700,
      "name": "AIN#(0:149)_EF_CONFIG_I",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 12000,
      "name": "AIN#(0:149)_EF_CONFIG_J",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.003
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN_EF", "AIN"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 30000,
      "name": "TDAC#(0:22)",
      "type": "FLOAT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["TDAC", "CORE"],
      "displayname": ["LJTick-DAC #"],
      "description": "Update a voltage output on a connected LJTick-DAC accessory.<br>Even TDAC# = DACA,<br>Odd TDAC# = DACB.<br>For instance, if LJTick-DAC accessory is connected to FIO2/FIO3 block on main device, TDAC2 corresponds with DACA, and TDAC3 corresponds with DACB."
    },
    {
      "address": 55200,
      "name": "TDAC_SERIAL_NUMBER",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["TDAC"],
      "description": "Returns the serial number of an LJTick-DAC, and forces a re-read of the calibration constants. Which LJTDAC is determined by the last write to TDAC# ... whether it was successful or not."
    },
    {
      "address": 55202,
      "name": "TDAC_SPEED_THROTTLE",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0208
        },
        {
          "device": "T4",
          "fwmin": 0.1
        }
      ],
      "readwrite": "RW",
      "default": 65516,
      "tags": ["TDAC"],
      "description": "Sets the I2C clock speed that will be used when communicating with the TDAC. Default value is 65516. See I2C_SPEED_THROTTLE for more detail."
    },
    {
      "address": 30100,
      "name": "SBUS#(0:22)_TEMP",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "tags": ["SBUS", "CORE"],
      "displayname": ["SBUS # Temp"],
      "description": "Reads temperature in Kelvin from an SBUS sensor (EI-1050/SHT1x/SHT7x).  SBUS# is the DIO line for the EI-1050 enable.  If SBUS# is the same as the value specified for data or clock line, there will be no control of an enable line."
    },
    {
      "address": 30150,
      "name": "SBUS#(0:22)_RH",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "tags": ["SBUS", "CORE"],
      "displayname": ["SBUS # RH"],
      "description": "Reads humidity in % from an external SBUS sensor (EI-1050/SHT1x/SHT7x).  # is the DIO line for the EI-1050 enable.  If # is the same as the value specified for data or clock line, there will be no control of an enable line."
    },
    {
      "address": 30200,
      "name": "SBUS#(0:22)_DATA_DIONUM",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056,
          "description": "Default = FIO0"
        },
        {
          "device": "T4",
          "description": "Default = FIO4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["SBUS"],
      "description": "This is the DIO# that the external sensor's data line is connected to."
    },
    {
      "address": 30225,
      "name": "SBUS#(0:22)_CLOCK_DIONUM",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056,
          "description": "Default = FIO1"
        },
        {
          "device": "T4",
          "description": "Default = FIO5"
        }
      ],
      "readwrite": "RW",
      "default": 1,
      "tags": ["SBUS"],
      "description": "This is the DIO# that the external sensor's clock line is connected to."
    },
    {
      "address": 30250,
      "name": "SBUS#(0:22)_BACKGROUND_ENABLE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["SBUS"],
      "description": "Currently unsupported."
    },
    {
      "address": 30275,
      "name": "SBUS_ALL_DATA_DIONUM",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["SBUS"],
      "description": "A write to this global parameter sets all SBUS data line registers to the same value. A read will return the correct setting if all channels are set the same, but otherwise will return 0xFF."
    },
    {
      "address": 30276,
      "name": "SBUS_ALL_CLOCK_DIONUM",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 1,
      "tags": ["SBUS"],
      "description": "A write to this global parameter sets all SBUS clock line registers to the same value. A read will return the correct setting if all channels are set the same, but otherwise will return 0xFF."
    },
    {
      "address": 30277,
      "name": "SBUS_ALL_POWER_DIONUM",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0056,
          "default": 2
        },
        {
          "device": "T4",
          "default": 6
        }
      ],
      "readwrite": "RW",
      "tags": ["SBUS"],
      "description": "Sets the power line. This DIO is set to output-high upon any read of SBUS#_TEMP or SBUS#_RH. Default is FIO6 for the T4 and FIO2 for the T7. An FIO line can power up to 4 sensors while an EIO/CIO/MIO line or DAC line can power up to 20 sensors. Set to 9999 to disable. To use multiple power lines, use a DAC line for power, or otherwise control power yourself, set this to 9999 and then control power using writes to normal registers such as FIO5, EIO0, or DAC0."
    },
    {
      "address": 30278,
      "name": "SBUS_ALL_CLOCK_SPEED",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0142
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 65000,
      "tags": ["SBUS"],
      "description": "Sets the clock speed. The clock is software generated so the resulting frequency is not exact. Valid range is 0-65535. Larger values are faster. 0 is the fastest option and is equivalent to 65536. A value of 0 is ~200 kHz. A value of 65000 is ~9.1 kHz."
    },
    {
      "address": 40000,
      "name": "AIN#(0:254)_RANGE",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "description": "Valid values/ranges:<br>0.0=Default=> +/-10V, 10.0=> +/-10V,<br>1.0=> +/-1V,<br>0.1=> +/-0.1V, or<br>0.01=> +/-0.01V."
        },
        {
          "device": "T4",
          "description": "Valid values/ranges:  0.0=Default=> 0-2.5 V on LV lines and ±10 V on HV lines."
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN"],
      "description": "The range/span of each analog input. Write the highest expected input voltage."
    },
    {
      "address": 41000,
      "name": "AIN#(0:254)_NEGATIVE_CH",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "description": "For base differential channels, positive must be an even channel from 0-12 and negative must be positive+1.  For extended channels 16-127, see Mux80 datasheet."
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 199,
      "tags": ["AIN"],
      "description": "Specifies the negative channel to be used for each positive channel. 199=Default=> Single-Ended."
    },
    {
      "address": 41500,
      "name": "AIN#(0:254)_RESOLUTION_INDEX",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "description": "Valid values:  0-8 for T7, 0-12 for T7-Pro.  Default value of 0 corresponds to an index of 8 (T7) or 9 (T7-Pro)."
        },
        {
          "device": "T4",
          "description": "Valid values:  0-5.  Default value of 0 corresponds to an index of 5."
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN"],
      "description": "The resolution index for command-response and AIN-EF readings. A larger resolution index generally results in lower noise and longer sample times."
    },
    {
      "address": 42000,
      "name": "AIN#(0:254)_SETTLING_US",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9328,
          "description": "0 = Auto.  Max is 50000 (microseconds)."
        },
        {
          "device": "T4",
          "description": "0 = Auto.  Max is 10000 (microseconds)."
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN"],
      "description": "Settling time for command-response and AIN-EF readings."
    },
    {
      "address": 43900,
      "name": "AIN_ALL_RANGE",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9328
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN"],
      "description": "A write to this global parameter affects all AIN.  A read will return the correct setting if all channels are set the same, but otherwise will return -9999."
    },
    {
      "address": 43902,
      "name": "AIN_ALL_NEGATIVE_CH",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9328
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 199,
      "tags": ["AIN"],
      "description": "A write to this global parameter affects all AIN. Writing 1 will set all AINs to differential. Writing 199 will set all AINs to single-ended. A read will return 1 if all AINs are set to differential and 199 if all AINs are set to single-ended. If AIN configurations are not consistent 0xFFFF will be returned."
    },
    {
      "address": 43903,
      "name": "AIN_ALL_RESOLUTION_INDEX",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9328,
          "description": "Valid values:  0-8 for T7, 0-12 for T7-Pro.  Default value of 0 corresponds to an index of 8 (T7) or 9 (T7-Pro)."
        },
        {
          "device": "T4",
          "description": "Valid values:  0-5.  Default value of 0 corresponds to an index of 5."
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN"],
      "description": "The resolution index for command-response and AIN-EF readings. A larger resolution index generally results in lower noise and longer sample times. A write to this global parameter affects all AIN.  A read will return the correct setting if all channels are set the same, but otherwise will return 0xFFFF."
    },
    {
      "address": 43904,
      "name": "AIN_ALL_SETTLING_US",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9328,
          "description": "0 = Auto.  Max is 50000 (microseconds)."
        },
        {
          "device": "T4",
          "description": "0 = Auto.  Max is 10000 (microseconds)."
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN"],
      "description": "Settling time for command-response and AIN-EF readings. A write to this global parameter affects all AIN.  A read will return the correct setting if all channels are set the same, but otherwise will return -9999. Max is 50,000 us."
    },
    {
      "address": 43906,
      "name": "AIN_ALL_EF_INDEX",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0115
        },
        {
          "device": "T4",
          "description": "The T4 does not support thermocouple modes."
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["AIN"],
      "altnames": ["AIN_ALL_EF_TYPE"],
      "description": "Write 0 to deactivate AIN_EF on all AINs. No other values may be written to this register. Reads will return the AIN_EF index if all 128 AINs are set to the same value. If values are not the same returns 0xFFFF (65535)."
    },
    {
      "address": 44900,
      "name": "DIO_EF_CLOCK0_ENABLE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.87
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "1 = enabled. 0 = disabled. Must be disabled during configuration."
    },
    {
      "address": 44901,
      "name": "DIO_EF_CLOCK0_DIVISOR",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.932
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "Divides the core clock. Valid options: 1,2,4,8,16,32,64,256."
    },
    {
      "address": 44902,
      "name": "DIO_EF_CLOCK0_OPTIONS",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.87
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "Bitmask: bit0: 1 = use external clock. All other bits reserved."
    },
    {
      "address": 44904,
      "name": "DIO_EF_CLOCK0_ROLL_VALUE",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.87
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "The clock will count to this value and then start over at zero. The clock pulses counted are those after the divisor. 0 results in the max roll value possible. This is a 32-bit value (0-4294967295) if using a 32-bit clock, and a 16-bit value (0-65535) if using a 16-bit clock."
    },
    {
      "address": 44910,
      "name": "DIO_EF_CLOCK1_ENABLE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.87
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "1 = enabled. 0 = disabled. Must be disabled during configuration."
    },
    {
      "address": 44911,
      "name": "DIO_EF_CLOCK1_DIVISOR",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.932
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "Divides the core clock. Valid options: 1,2,4,8,16,32,64,256."
    },
    {
      "address": 44912,
      "name": "DIO_EF_CLOCK1_OPTIONS",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.87
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "Bitmask: bit0: 1 = use external clock. All other bits reserved."
    },
    {
      "address": 44914,
      "name": "DIO_EF_CLOCK1_ROLL_VALUE",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.87
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "The clock will count to this value and then start over at zero. The clock pulses counted are those after the divisor. 0 results in the max roll value possible. This is a 32-bit value (0-4294967295) if using a 32-bit clock, and a 16-bit value (0-65535) if using a 16-bit clock."
    },
    {
      "address": 44920,
      "name": "DIO_EF_CLOCK2_ENABLE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.87
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "1 = enabled. 0 = disabled. Must be disabled during configuration."
    },
    {
      "address": 44921,
      "name": "DIO_EF_CLOCK2_DIVISOR",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.932
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "Divides the core clock. Valid options: 1,2,4,8,16,32,64,256."
    },
    {
      "address": 44922,
      "name": "DIO_EF_CLOCK2_OPTIONS",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.87
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "Bitmask: bit0: 1 = use external clock. All other bits reserved."
    },
    {
      "address": 44924,
      "name": "DIO_EF_CLOCK2_ROLL_VALUE",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.87
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "The clock will count to this value and then start over at zero. The clock pulses counted are those after the divisor. 0 results in the max roll value possible. This is a 32-bit value (0-4294967295) if using a 32-bit clock, and a 16-bit value (0-65535) if using a 16-bit clock."
    },
    {
      "address": 44908,
      "name": "DIO_EF_CLOCK0_COUNT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.943
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "tags": ["DIO_EF", "DIO"],
      "description": "Current tick count of this clock.  Will read between 0 and ROLL_VALUE-1."
    },
    {
      "address": 44918,
      "name": "DIO_EF_CLOCK1_COUNT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.943
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "tags": ["DIO_EF", "DIO"],
      "description": "Current tick count of this clock.  Will read between 0 and ROLL_VALUE-1."
    },
    {
      "address": 44928,
      "name": "DIO_EF_CLOCK2_COUNT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.943
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "tags": ["DIO_EF", "DIO"],
      "description": "Current tick count of this clock.  Will read between 0 and ROLL_VALUE-1."
    },
    {
      "address": 44000,
      "name": "DIO#(0:22)_EF_ENABLE",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.88
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "1 = enabled. 0 = disabled. Must be disabled during configuration. Note that DIO-EF reads work when disabled and do not return an error."
    },
    {
      "address": 44100,
      "name": "DIO#(0:22)_EF_INDEX",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.88
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "altnames": ["DIO#(0:22)_EF_TYPE"],
      "description": "An index to specify the feature you want."
    },
    {
      "address": 44200,
      "name": "DIO#(0:22)_EF_OPTIONS",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.88
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 44300,
      "name": "DIO#(0:22)_EF_CONFIG_A",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.88
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "altnames": ["DIO#(0:22)_EF_VALUE_A"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 44400,
      "name": "DIO#(0:22)_EF_CONFIG_B",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.88
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "altnames": ["DIO#(0:22)_EF_VALUE_B"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 44500,
      "name": "DIO#(0:22)_EF_CONFIG_C",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.88
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "altnames": ["DIO#(0:22)_EF_VALUE_C"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 44600,
      "name": "DIO#(0:22)_EF_CONFIG_D",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.88
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "altnames": ["DIO#(0:22)_EF_VALUE_D"],
      "description": "Function dependent on selected feature index."
    },
    {
      "address": 3000,
      "name": "DIO#(0:22)_EF_READ_A",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["DIO_EF", "DIO", "CORE"],
      "streamable": true,
      "displayname": ["DIO-EF Read A"],
      "description": "Reads an unsigned integer value. The meaning of the integer is dependent on selected feature index."
    },
    {
      "address": 3100,
      "name": "DIO#(0:22)_EF_READ_A_AND_RESET",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["DIO_EF", "DIO"],
      "streamable": true,
      "description": "Reads the same value as DIO#(0:22)_EF_READ_A and forces a reset."
    },
    {
      "address": 3200,
      "name": "DIO#(0:22)_EF_READ_B",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["DIO_EF", "DIO"],
      "streamable": true,
      "description": "Reads an unsigned integer value. The meaning of the integer is dependent on selected feature index."
    },
    {
      "address": 3500,
      "name": "DIO#(0:22)_EF_READ_A_F",
      "type": "FLOAT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["DIO_EF", "DIO"],
      "description": "Reads a floating point value. The meaning of value is dependent on selected feature index."
    },
    {
      "address": 3600,
      "name": "DIO#(0:22)_EF_READ_A_F_AND_RESET",
      "type": "FLOAT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["DIO_EF", "DIO"],
      "description": "Reads a floating point value and forces a reset. The meaning of value is dependent on selected feature index."
    },
    {
      "address": 3700,
      "name": "DIO#(0:22)_EF_READ_B_F",
      "type": "FLOAT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["DIO_EF", "DIO"],
      "description": "Reads a floating point value. The meaning of value is dependent on selected feature index."
    },
    {
      "address": 45000,
      "name": "DIO#(0:22)_EF_EASY_FREQUENCY_IN",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0105
        }
      ],
      "readwrite": "RW",
      "tags": ["DIO_EF", "DIO"],
      "description": "Deprecated. Automatically configures the associated DIO_EF for feature index 11. If already configured for index 11, reads the result and resets the DIO_EF."
    },
    {
      "address": 48003,
      "name": "POWER_ETHERNET",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.86
        },
        {
          "device": "T4",
          "fwmin": 0.01
        }
      ],
      "readwrite": "RW",
      "tags": ["CONFIG", "ETHERNET"],
      "description": "The current ON/OFF state of the Ethernet module."
    },
    {
      "address": 48004,
      "name": "POWER_WIFI",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.86
        }
      ],
      "readwrite": "RW",
      "tags": ["CONFIG", "WIFI"],
      "description": "The current ON/OFF state of the WiFi module."
    },
    {
      "address": 48005,
      "name": "POWER_AIN",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.86
        }
      ],
      "readwrite": "RW",
      "tags": ["CONFIG", "AIN"],
      "description": "The current ON/OFF state of the analog input module."
    },
    {
      "address": 48006,
      "name": "POWER_LED",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.86
        },
        {
          "device": "T4",
          "fwmin": 1.0008
        }
      ],
      "readwrite": "RW",
      "tags": ["CONFIG"],
      "description": "Sets the LED operation:<br>0 = Off. Useful for lower power applications.<br>1 = normal.<br>2 = Lower power, LEDs will still blink but will normally be off.<br>3 = Reserved.<br>4 = Manual, in this mode the LEDs can be user controlled."
    },
    {
      "address": 48053,
      "name": "POWER_ETHERNET_DEFAULT",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.86
        },
        {
          "device": "T4",
          "fwmin": 0.01
        }
      ],
      "readwrite": "RW",
      "tags": ["CONFIG", "ETHERNET"],
      "description": "The ON/OFF state of the Ethernet module after a power-cycle to the device. Provided to optionally reduce power consumption."
    },
    {
      "address": 48054,
      "name": "POWER_WIFI_DEFAULT",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.86
        }
      ],
      "readwrite": "RW",
      "tags": ["CONFIG", "WIFI"],
      "description": "The ON/OFF state of the WiFi module after a power-cycle to the device. Provided to optionally reduce power consumption."
    },
    {
      "address": 48055,
      "name": "POWER_AIN_DEFAULT",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.86
        }
      ],
      "readwrite": "RW",
      "tags": ["CONFIG", "AIN"],
      "description": "The ON/OFF state of the analog input module after a power-cycle to the device. Provided to optionally reduce power consumption."
    },
    {
      "address": 48056,
      "name": "POWER_LED_DEFAULT",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.86
        },
        {
          "device": "T4",
          "fwmin": 1.1
        }
      ],
      "readwrite": "RW",
      "tags": ["CONFIG"],
      "description": "The ON/OFF state of the LEDs after a power-cycle to the device."
    },
    {
      "address": 49000,
      "name": "IO_CONFIG_CHECK_FOR_FACTORY",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["CONFIG"],
      "description": "Returns 1 if default settings are the same as factory settings."
    },
    {
      "address": 49002,
      "name": "IO_CONFIG_SET_DEFAULT_TO_CURRENT",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "tags": ["CONFIG"],
      "description": "Write a 1 to cause new default (reboot/power-up) values to be saved to flash.  Current values are retrieved and saved as the new defaults. Systems affected: AIN, DIO, DAC, AIN_EF, DIO_EF."
    },
    {
      "address": 49004,
      "name": "IO_CONFIG_SET_DEFAULT_TO_FACTORY",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "tags": ["CONFIG"],
      "description": "Write a 1 to cause new default (reboot/power-up) values to be saved to flash.  Factory values are retrieved and saved as the new defaults. Systems affected: AIN, DIO, DAC, AIN_EF, DIO_EF."
    },
    {
      "address": 49006,
      "name": "IO_CONFIG_FACTORY_pREAD",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["CONFIG"]
    },
    {
      "address": 49008,
      "name": "IO_CONFIG_FACTORY_READ",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["CONFIG"]
    },
    {
      "address": 49010,
      "name": "IO_CONFIG_DEFAULT_pREAD",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["CONFIG"]
    },
    {
      "address": 49012,
      "name": "IO_CONFIG_DEFAULT_READ",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["CONFIG"]
    },
    {
      "address": 49014,
      "name": "IO_CONFIG_CURRENT_pREAD",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["CONFIG"]
    },
    {
      "address": 49016,
      "name": "IO_CONFIG_CURRENT_READ",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["CONFIG"]
    },
    {
      "address": 49018,
      "name": "IO_CONFIG_CHECK_FOR_DEFAULT",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["CONFIG"]
    },
    {
      "address": 49020,
      "name": "IO_CONFIG_CURRENT_CRC32",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.022
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "tags": ["CONFIG"],
      "description": "Collects the current IO configuration and calculates of a CRC32."
    },
    {
      "address": 49090,
      "name": "CLEANSE",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "tags": ["CONFIG"],
      "description": "Writing 0x5317052E to this register will trigger a system cleanse."
    },
    {
      "address": 61520,
      "name": "CORE_TIMER",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0071
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "tags": ["CONFIG"],
      "streamable": true,
      "description": "Internal 32-bit system timer running at 1/2 core speed, thus normally 80M/2 => 40 MHz."
    },
    {
      "address": 61522,
      "name": "SYSTEM_TIMER_20HZ",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0071
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "tags": ["CONFIG"],
      "streamable": true,
      "description": "Internal 32-bit system timer running at 20Hz."
    },
    {
      "address": 61530,
      "name": "SPC_FREQUENCY_OUT_ENABLE_DEPRECATED",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.022
        },
        {
          "device": "T4"
        }
      ],
      "altnames": ["SPC_FREQUENCY_OUT_ENABLE", "SPC_FREQUENCY_OUT"],
      "readwrite": "RW",
      "description": "This has been deprecated in favor of DAC1_FREQUENCY_OUT_ENABLE. 0 = off, 1 = output 10 Hz signal on SPC. Note that stream uses SPC for a timing output, so if you use this while streaming you will get a lot more counts."
    },
    {
      "address": 61532,
      "name": "DAC1_FREQUENCY_OUT_ENABLE",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0234
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "W",
      "description": "0 = off, 1 = output 10 Hz signal on DAC1. Note that writing to DAC1 or enabling a stream out which is targeting DAC1 will disable this feature."
    },
    {
      "address": 61590,
      "name": "WAIT_US_BLOCKING",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0026
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["CONFIG"],
      "description": "Delays for x microseconds. Range is 0-100000."
    },
    {
      "address": 61990,
      "name": "IO_CONFIG_SET_CURRENT_TO_FACTORY",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "tags": ["CONFIG"],
      "description": "Write a 1 to set current values to factory configuration.  The factory values are retrieved from flash and written to the current configuration registers. Systems affected: AIN, DIO, DAC, AIN_EF, DIO_EF."
    },
    {
      "address": 61991,
      "name": "IO_CONFIG_SET_CURRENT_TO_DEFAULT",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "tags": ["CONFIG"],
      "description": "Write a 1 to set current values to default configuration.  The default values are retrieved from flash and written to the current configuration registers, thus this behaves similar to reboot/power-up. Systems affected: AIN, DIO, DAC, AIN_EF, DIO_EF."
    },
    {
      "address": 61998,
      "name": "SYSTEM_REBOOT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9419
        },
        {
          "device": "T4",
          "fwmin": 0.202
        }
      ],
      "readwrite": "W",
      "tags": ["CONFIG"],
      "description": "Issues a device reboot. Must write 0x4C4Axxxx, where xxxx is number of 50ms ticks to wait before reboot.  To reboot immediately write 0x4C4A0000 (d1279918080)."
    },
    {
      "address": 60050,
      "name": "TEMPERATURE_AIR_K",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0105
        },
        {
          "device": "T4",
          "fwmin": 0.202
        }
      ],
      "readwrite": "R",
      "tags": ["AIN", "CORE"],
      "streamable": false,
      "displayname": ["Estimated Air Temperature [K]"],
      "description": "Returns the estimated ambient air temperature just outside of the device in its red plastic enclosure.  This register is equal to TEMPERATURE_DEVICE_K - 4.3.  If Ethernet and/or WiFi is enabled, subtract an extra 0.6 for each."
    },
    {
      "address": 60052,
      "name": "TEMPERATURE_DEVICE_K",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0105,
          "description": "The internal temperature sensor, AIN14, is internally connected to an LM94021 (U24) with GS=10 which is physically located on the bottom of the PCB between the AIN0/1 and AIN2/3 screw-terminals."
        },
        {
          "device": "T4",
          "fwmin": 0.202,
          "description": "The internal temperature sensor is internally connected to an LM94021 (U24) with GS=10 which is physically located on the top of the PCB behind the VS screw terminal of the FIO4 and FIO5 screw terminal block."
        }
      ],
      "readwrite": "R",
      "tags": ["AIN", "CORE"],
      "streamable": false,
      "displayname": ["Device Temperature [K]"],
      "description": "Takes a reading from the internal temperature sensor using range=+/-10V and resolution=8, and applies the formula Volts*-92.6+467.6 to return kelvins."
    },
    {
      "address": 49702,
      "name": "SNTP_UPDATE_INTERVAL",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.015
        },
        {
          "device": "T4",
          "fwmin": 0.202
        }
      ],
      "readwrite": "RW",
      "tags": ["RTC"],
      "description": "Sets the SNTP retry time in seconds. A value of zero will disable SNTP(0=default). Values must be 10 or greater."
    },
    {
      "address": 61500,
      "name": "RTC_TIME_S",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0128
        },
        {
          "device": "T4",
          "fwmin": 0.202
        }
      ],
      "readwrite": "R",
      "tags": ["RTC"],
      "description": "Read the current time in seconds since Jan, 1970, aka Epoch or Unix time. This value is calculated from the 80 MHz crystal, not the RTC 32 kHz crystal. Non-pro devices do not have a real time clock, so the reported time is either seconds since device startup or the time reported by the network time protocol over Ethernet. Pro devices have a real time clock that will be used to initialize this register at startup, the time can then be updated by NTP."
    },
    {
      "address": 61502,
      "name": "SYSTEM_COUNTER_10KHZ",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0229
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "tags": ["CONFIG"],
      "streamable": true,
      "description": "A 10 kHz counter synchronized to RTC_TIME_S. This register can be appended to RTC_TIME_S as the decimal portion to get 0.1 ms resolution."
    },
    {
      "address": 61504,
      "name": "RTC_SET_TIME_S",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0128
        },
        {
          "device": "T4",
          "fwmin": 0.202
        }
      ],
      "readwrite": "W",
      "tags": ["RTC"],
      "description": "Write a new timestamp to the RTC in seconds since Jan, 1970, aka Epoch or Unix timestamp."
    },
    {
      "address": 61506,
      "name": "RTC_SET_TIME_SNTP",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0128
        },
        {
          "device": "T4",
          "fwmin": 0.202
        }
      ],
      "readwrite": "W",
      "tags": ["RTC"],
      "description": "Write any value to instruct the T7 to update its clock from a SNTP server. Requires that SNTP_UPDATE_INTERVAL is non-zero."
    },
    {
      "address": 61510,
      "name": "RTC_TIME_CALENDAR",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0128
        },
        {
          "device": "T4",
          "fwmin": 0.202
        }
      ],
      "readwrite": "R",
      "tags": ["RTC"],
      "description": "Read six consecutive addresses of type UINT16, starting with this address. The result will be in year, month, day, hour, minute, second calendar format. i.e. [2014, 10, 21, 18, 55, 35]"
    },
    {
      "address": 49100,
      "name": "ETHERNET_IP",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["ETHERNET"],
      "description": "Read the current IP address of wired Ethernet."
    },
    {
      "address": 49102,
      "name": "ETHERNET_SUBNET",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["ETHERNET"],
      "description": "Read the current subnet of wired Ethernet."
    },
    {
      "address": 49104,
      "name": "ETHERNET_GATEWAY",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["ETHERNET"],
      "description": "Read the current gateway of wired Ethernet."
    },
    {
      "address": 49106,
      "name": "ETHERNET_DNS",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["ETHERNET"],
      "description": "Read the current DNS of wired Ethernet."
    },
    {
      "address": 49108,
      "name": "ETHERNET_ALTDNS",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["ETHERNET"],
      "description": "Read the current Alt DNS of wired Ethernet."
    },
    {
      "address": 49110,
      "name": "ETHERNET_DHCP_ENABLE",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["ETHERNET"],
      "description": "Read the current Enabled/Disabled state of Ethernet DHCP."
    },
    {
      "address": 49150,
      "name": "ETHERNET_IP_DEFAULT",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["ETHERNET"],
      "description": "The IP address of wired Ethernet after a power-cycle to the device."
    },
    {
      "address": 49152,
      "name": "ETHERNET_SUBNET_DEFAULT",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["ETHERNET"],
      "description": "The subnet of wired Ethernet after a power-cycle to the device."
    },
    {
      "address": 49154,
      "name": "ETHERNET_GATEWAY_DEFAULT",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["ETHERNET"],
      "description": "The gateway of wired Ethernet after a power-cycle to the device."
    },
    {
      "address": 49156,
      "name": "ETHERNET_DNS_DEFAULT",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["ETHERNET"],
      "description": "The DNS of wired Ethernet after a power-cycle to the device."
    },
    {
      "address": 49158,
      "name": "ETHERNET_ALTDNS_DEFAULT",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["ETHERNET"],
      "description": "The Alt DNS of wired Ethernet after a power-cycle to the device."
    },
    {
      "address": 49160,
      "name": "ETHERNET_DHCP_ENABLE_DEFAULT",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["ETHERNET"],
      "description": "The Enabled/Disabled state of Ethernet DHCP after a power-cycle to the device."
    },
    {
      "address": 49190,
      "name": "ETHERNET_APPLY_SETTINGS",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0103
        },
        {
          "device": "T4",
          "fwmin": 0.2
        }
      ],
      "readwrite": "W",
      "tags": ["ETHERNET"],
      "description": "Writing 1 to this register power-cycles Ethernet.  It tells the device to waits 1s before turning off Ethernet and then 500ms before turning it back on."
    },
    {
      "address": 49200,
      "name": "WIFI_IP",
      "type": "UINT32",
      "devices": [
        "T7"
      ],
      "readwrite": "R",
      "tags": ["WIFI"],
      "description": "Read the current IP address of WiFi."
    },
    {
      "address": 49202,
      "name": "WIFI_SUBNET",
      "type": "UINT32",
      "devices": [
        "T7"
      ],
      "readwrite": "R",
      "tags": ["WIFI"],
      "description": "Read the current subnet of WiFi."
    },
    {
      "address": 49204,
      "name": "WIFI_GATEWAY",
      "type": "UINT32",
      "devices": [
        "T7"
      ],
      "readwrite": "R",
      "tags": ["WIFI"],
      "description": "Read the current gateway of WiFi."
    },
    {
      "address": 49210,
      "name": "WIFI_DHCP_ENABLE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9014
        }
      ],
      "readwrite": "R",
      "tags": ["WIFI"],
      "description": "Read the current Enabled/Disabled state of WiFi DHCP."
    },
    {
      "address": 49300,
      "name": "WIFI_SSID",
      "type": "STRING",
      "devices": [
        "T7"
      ],
      "readwrite": "R",
      "tags": ["WIFI"],
      "description": "Read the current SSID (network name) of WiFi"
    },
    {
      "address": 49250,
      "name": "WIFI_IP_DEFAULT",
      "type": "UINT32",
      "devices": [
        "T7"
      ],
      "readwrite": "RW",
      "tags": ["WIFI"],
      "description": "The new IP address of WiFi. Use WIFI_APPLY_SETTINGS."
    },
    {
      "address": 49252,
      "name": "WIFI_SUBNET_DEFAULT",
      "type": "UINT32",
      "devices": [
        "T7"
      ],
      "readwrite": "RW",
      "tags": ["WIFI"],
      "description": "The new subnet of WiFi.  Use WIFI_APPLY_SETTINGS."
    },
    {
      "address": 49254,
      "name": "WIFI_GATEWAY_DEFAULT",
      "type": "UINT32",
      "devices": [
        "T7"
      ],
      "readwrite": "RW",
      "tags": ["WIFI"],
      "description": "The new gateway of WiFi. Use WIFI_APPLY_SETTINGS."
    },
    {
      "address": 49260,
      "name": "WIFI_DHCP_ENABLE_DEFAULT",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9014
        }
      ],
      "readwrite": "RW",
      "tags": ["WIFI"],
      "description": "The new Enabled/Disabled state of WiFi DHCP. Use WIFI_APPLY_SETTINGS"
    },
    {
      "address": 49325,
      "name": "WIFI_SSID_DEFAULT",
      "type": "STRING",
      "devices": [
        "T7"
      ],
      "readwrite": "RW",
      "tags": ["WIFI"],
      "description": "The new SSID (network name) of WiFi. Use WIFI_APPLY_SETTINGS."
    },
    {
      "address": 49350,
      "name": "WIFI_PASSWORD_DEFAULT",
      "type": "STRING",
      "devices": [
        "T7"
      ],
      "readwrite": "W",
      "tags": ["WIFI"],
      "description": "Write the password for the WiFi network, then use WIFI_APPLY_SETTINGS."
    },
    {
      "address": 49400,
      "name": "WIFI_APPLY_SETTINGS",
      "type": "UINT32",
      "devices": [
        "T7"
      ],
      "readwrite": "W",
      "tags": ["WIFI"],
      "description": "Apply all new WiFi settings: IP, Subnet, Gateway, DHCP, SSID, Password. 1=Apply"
    },
    {
      "address": 49402,
      "name": "WIFI_FIRMWARE_UPDATE_TO_VERSIONX",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9206
        }
      ],
      "readwrite": "W",
      "tags": ["WIFI"],
      "description": "Start an update by using USB or Ethernet to write the desired version to update to."
    },
    {
      "address": 49450,
      "name": "WIFI_STATUS",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.75
        }
      ],
      "readwrite": "R",
      "tags": ["WIFI"],
      "description": "Status Codes: ASSOCIATED = 2900, ASSOCIATING = 2901, ASSOCIATION_FAILED = 2902, UNPOWERED = 2903, BOOTING = 2904, START_FAILED = 2905, APPLYING_SETTINGS = 2906, DHCP_STARTED = 2907, OTHER = 2909",
      "constants": [
        {"value": 2900, "name": "ASSOCIATED"},
        {"value": 2901, "name": "ASSOCIATING"},
        {"value": 2902, "name": "ASSOCIATION_FAILED"},
        {"value": 2903, "name": "UNPOWERED"},
        {"value": 2904, "name": "BOOTING"},
        {"value": 2905, "name": "START_FAILED"},
        {"value": 2906, "name": "APPLYING_SETTINGS"},
        {"value": 2907, "name": "DHCP_STARTED"},
        {"value": 2909, "name": "OTHER"}
      ]
    },
    {
      "address": 49452,
      "name": "WIFI_RSSI",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.8
        }
      ],
      "readwrite": "R",
      "tags": ["WIFI"],
      "description": "WiFi RSSI (signal strength).  Typical values are -40 for very good, and -75 for very weak.  The T7 microcontroller only gets a new RSSI value from the WiFi module when WiFi communication occurs."
    },
    {
      "address": 49454,
      "name": "WIFI_FIRMWARE_UPDATE_STATUS",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9206
        }
      ],
      "readwrite": "R",
      "tags": ["WIFI"],
      "description": "CONFIGURING = 2920, IN_PROGRESS = 2921, REBOOTING = 2923, UPDATE_SUCCESS = 2924, UPDATE_FAILED = 2925",
      "constants": [
        {"value": 2920, "name": "CONFIGURING"},
        {"value": 2921, "name": "IN_PROGRESS"},
        {"value": 2923, "name": "REBOOTING"},
        {"value": 2924, "name": "UPDATE_SUCCESS"},
        {"value": 2925, "name": "UPDATE_FAILED"}
      ]
    },
    {
      "address": 50000,
      "name": "AIN#(0:254)_BINARY",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["AIN"],
      "streamable": false,
      "altnames": ["AIN#(0:254)_BIN"],
      "description": "Returns the 24-bit binary representation of the specified analog input. If you prefer 16-bit representation, simply divide this by 256. This is for command-response only.  Stream always returns binary and LJM applies cal constants, so the LJM config flag LJM_STREAM_AIN_BINARY is used to get binary values."
    },
    {
      "address": 51000,
      "name": "DAC#(0:1)_BINARY",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "tags": ["DAC"],
      "streamable": false,
      "description": "Writes binary values to the DACs. 0 = lowest output, 65535 = highest output."
    },
    {
      "address": 46000,
      "name": "USER_RAM#(0:39)_F32",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0023
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA", "USER_RAM"],
      "altnames": ["LUA_IO#(0:39)_READ"],
      "description": "Generic RAM registers. Useful for passing data between a host computer and a Lua script. Will not return an error if alternate data types are used."
    },
    {
      "address": 46080,
      "name": "USER_RAM#(0:9)_I32",
      "type": "INT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0162
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA", "USER_RAM"],
      "description": "Generic RAM registers. Useful for passing data between a host computer and a Lua script. Will not return an error if alternate data types are used."
    },
    {
      "address": 46100,
      "name": "USER_RAM#(0:39)_U32",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0162
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA", "USER_RAM"],
      "description": "Generic RAM registers. Useful for passing data between a host computer and a Lua script. Will not return an error if alternate data types are used."
    },
    {
      "address": 46180,
      "name": "USER_RAM#(0:19)_U16",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0162
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA", "USER_RAM"],
      "description": "Generic RAM registers. Useful for passing data between a host computer and a Lua script. Will not return an error if alternate data types are used."
    },
    {
      "address": 47000,
      "name": "USER_RAM_FIFO#(0:3)_DATA_U16",
      "type": "UINT16",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0163
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["LUA", "USER_RAM"],
      "description": "Generic FIFO buffer.  Useful for passing ORDERED or SEQUENTIAL data between various endpoints, such as between a host and a Lua script. Use up to 4 FIFO buffers simultaneously->1 of each data type, all 4 different data types, or a mixture. e.g. FIFO0_DATA_U16 points to the same memory as other FIFO0 registers, such that there are a total of 4 memory blocks: FIFO0, FIFO1, FIFO2 and FIFO3.  It is possible to write into a FIFO buffer using a different datatype than is being used to read out of it. This register is a buffer. Underrun behavior - throws an error."
    },
    {
      "address": 47010,
      "name": "USER_RAM_FIFO#(0:3)_DATA_U32",
      "type": "UINT32",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0163
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["LUA", "USER_RAM"],
      "description": "Generic FIFO buffer.  Useful for passing ORDERED or SEQUENTIAL data between various endpoints, such as between a host and a Lua script. Use up to 4 FIFO buffers simultaneously->1 of each data type, all 4 different data types, or a mixture. e.g. FIFO0_DATA_U16 points to the same memory as other FIFO0 registers, such that there are a total of 4 memory blocks: FIFO0, FIFO1, FIFO2 and FIFO3.  It is possible to write into a FIFO buffer using a different datatype than is being used to read out of it. This register is a buffer. Underrun behavior - throws an error."
    },
    {
      "address": 47020,
      "name": "USER_RAM_FIFO#(0:3)_DATA_I32",
      "type": "INT32",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0163
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["LUA", "USER_RAM"],
      "description": "Generic FIFO buffer.  Useful for passing ORDERED or SEQUENTIAL data between various endpoints, such as between a host and a Lua script. Use up to 4 FIFO buffers simultaneously->1 of each data type, all 4 different data types, or a mixture. e.g. FIFO0_DATA_U16 points to the same memory as other FIFO0 registers, such that there are a total of 4 memory blocks: FIFO0, FIFO1, FIFO2 and FIFO3.  It is possible to write into a FIFO buffer using a different datatype than is being used to read out of it. This register is a buffer. Underrun behavior - throws an error."
    },
    {
      "address": 47030,
      "name": "USER_RAM_FIFO#(0:3)_DATA_F32",
      "type": "FLOAT32",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0163
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["LUA", "USER_RAM"],
      "description": "Generic FIFO buffer.  Useful for passing ORDERED or SEQUENTIAL data between various endpoints, such as between a host and a Lua script. Use up to 4 FIFO buffers simultaneously->1 of each data type, all 4 different data types, or a mixture. e.g. FIFO0_DATA_U16 points to the same memory as other FIFO0 registers, such that there are a total of 4 memory blocks: FIFO0, FIFO1, FIFO2 and FIFO3.  It is possible to write into a FIFO buffer using a different datatype than is being used to read out of it. This register is a buffer. Underrun behavior - throws an error."
    },
    {
      "address": 47900,
      "name": "USER_RAM_FIFO#(0:3)_ALLOCATE_NUM_BYTES",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0163
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["LUA", "USER_RAM"],
      "description": "Allocate memory for a FIFO buffer. Number of bytes should be sufficient to store users max transfer array size.  Note that FLOAT32, INT32, and UINT32 require 4 bytes per value, and UINT16 require 2 bytes per value. Maximum size is limited by available memory. Care should be taken to conserve enough memory for other operations such as AIN_EF, Lua, Stream etc.",
      "usesRAM": true
    },
    {
      "address": 47910,
      "name": "USER_RAM_FIFO#(0:3)_NUM_BYTES_IN_FIFO",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0163
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["LUA", "USER_RAM"],
      "description": "Poll this register to see when new data is available/ready. Each read of the FIFO buffer decreases this value, and each write to the FIFO buffer increases this value. At any point in time, the following equation holds: Nbytes = Nwritten - Nread."
    },
    {
      "address": 47930,
      "name": "USER_RAM_FIFO#(0:3)_EMPTY",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0163
        },
        {
          "device": "T4"
        }
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["LUA", "USER_RAM"],
      "description": "Write any value to this register to efficiently empty, flush, or otherwise clear data from the FIFO."
    },
    {
      "address": 55100,
      "name": "TEST",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "default": 1122867,
      "tags": ["CONFIG"],
      "description": "A read of this test register should always return 0x00112233 or d1122867. If your software has the word swap quirk, you will incorrectly read 0x22330011 or 573767697.  If your software has the address-1 quirk, a UINT16 (1-register) read from 55101 will incorrectly return 0x0011 (should read 0x2233).  This register is unlike others, in that it allows you can read a single word from 55100 or 55101, or of course 2 words from 55100."
    },
    {
      "address": 55110,
      "name": "TEST_UINT16",
      "type": "UINT16",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 17,
      "tags": ["CONFIG"],
      "description": "Write a value and read back to test UINT16 operation. Default is 0x0011 or d17."
    },
    {
      "address": 55120,
      "name": "TEST_UINT32",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": 1122867,
      "tags": ["CONFIG"],
      "description": "Write a value and read back to test UINT32 operation. Default is 0x00112233 or d1122867. If your software has the word swap quirk, the default will incorrectly read 0x22330011 or 573767697."
    },
    {
      "address": 55122,
      "name": "TEST_INT32",
      "type": "INT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": -2003195205,
      "tags": ["CONFIG"],
      "description": "Write a value and read back to test INT32 operation. Default is 0x8899AABB or d-2003195205. If your software has the word swap quirk, the default will incorrectly read 0xAABB8899 or -1430550375."
    },
    {
      "address": 55124,
      "name": "TEST_FLOAT32",
      "type": "FLOAT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "default": -9999,
      "tags": ["CONFIG"],
      "description": "Write a value and read back to test FLOAT32 operation. Default is 0xC61C3C00 or -9999.0. If your software has the word swap quirk, the default will incorrectly read 0x3C00C61C or 0.00786."
    },
    {
      "address": 60000,
      "name": "PRODUCT_ID",
      "type": "FLOAT32",
      "devices": [
        "T7",
        "T4",
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": ["CONFIG"],
      "description": "The numeric identifier of the device.  Such as 7 for a T7 / T7-Pro."
    },
    {
      "address": 60002,
      "name": "HARDWARE_VERSION",
      "type": "FLOAT32",
      "devices": [
        "T7",
        "T4",
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": ["CONFIG"],
      "description": "The hardware version of the device."
    },
    {
      "address": 60004,
      "name": "FIRMWARE_VERSION",
      "type": "FLOAT32",
      "devices": [
        "T7",
        "T4",
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": ["CONFIG"],
      "description": "The current firmware version installed on the main processor."
    },
    {
      "address": 60006,
      "name": "BOOTLOADER_VERSION",
      "type": "FLOAT32",
      "devices": [
        "T7",
        "T4",
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": ["CONFIG"],
      "description": "The bootloader version installed on the main processor."
    },
    {
      "address": 60008,
      "name": "WIFI_VERSION",
      "type": "FLOAT32",
      "devices": [
        "T7"
      ],
      "readwrite": "R",
      "tags": ["CONFIG"],
      "description": "The current firmware version of the WiFi module, if available."
    },
    {
      "address": 60010,
      "name": "HARDWARE_INSTALLED",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "default": 0,
      "tags": ["CONFIG"],
      "description": "Bitmask indicating installed hardware options.<br>bit0: High Resolution ADC,<br>bit1: WiFi,<br>bit2: RTC,<br>bit3: microSD."
    },
    {
      "address": 60020,
      "name": "ETHERNET_MAC",
      "type": "UINT64",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["ETHERNET"],
      "description": "The MAC address of the wired Ethernet module."
    },
    {
      "address": 60024,
      "name": "WIFI_MAC",
      "type": "UINT64",
      "devices": [
        "T7"
      ],
      "readwrite": "R",
      "tags": ["WIFI"],
      "description": "The MAC address of the WiFi module."
    },
    {
      "address": 60028,
      "name": "SERIAL_NUMBER",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4",
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": ["CONFIG"],
      "description": "The serial number of the device."
    },
    {
      "address": 60500,
      "name": "DEVICE_NAME_DEFAULT",
      "type": "STRING",
      "devices": [
        "T7",
        "T4",
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": ["CONFIG"],
      "description": "Reads return the current device name. Writes update the default and current device name. A reboot is necessary to update the name reported by NBNS. Up to 49 characters, cannot contain periods."
    },
    {
      "address": 1900,
      "name": "CURRENT_SOURCE_10UA_CAL_VALUE",
      "type": "FLOAT32",
      "devices": [
        "T7"
      ],
      "readwrite": "R",
      "tags": ["CONFIG"],
      "description": "Fixed current source value in Amps for the 10UA terminal. This value is stored during factory calibration, it is not a current reading. Using the equation V=IR, with a known current and voltage, it is possible to calculate resistance of RTDs."
    },
    {
      "address": 1902,
      "name": "CURRENT_SOURCE_200UA_CAL_VALUE",
      "type": "FLOAT32",
      "devices": [
        "T7"
      ],
      "readwrite": "R",
      "tags": ["CONFIG"],
      "description": "Fixed current source value in Amps for the 200UA terminal. This value is stored during factory calibration, it is not a current reading. Using the equation V=IR, with a known current and voltage, it is possible to calculate resistance of RTDs."
    },
    {
      "address": 60600,
      "name": "FILE_IO_DIR_CHANGE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0156
        }
      ],
      "readwrite": "W",
      "tags": ["FILE_IO"],
      "description": "Write any value to this register to change the current working directory (CWD). Must first designate which directory to open by writing to FILE_IO_PATH_WRITE_LEN_BYTES then FILE_IO_PATH_WRITE."
    },
    {
      "address": 60601,
      "name": "FILE_IO_DIR_CURRENT",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "W",
      "tags": ["FILE_IO"],
      "description": "Write any value to this register to load the current working directory into FILE_IO_PATH_READ, and its length into FILE_IO_PATH_READ_LEN_BYTES. Can be used to identify current position in a file tree."
    },
    {
      "address": 60602,
      "name": "FILE_IO_DIR_MAKE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 99
        }
      ],
      "readwrite": "W",
      "tags": ["FILE_IO"],
      "description": "Unimplemented."
    },
    {
      "address": 60603,
      "name": "FILE_IO_DIR_REMOVE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 99
        }
      ],
      "readwrite": "W",
      "tags": ["FILE_IO"],
      "description": "Unimplemented."
    },
    {
      "address": 60610,
      "name": "FILE_IO_DIR_FIRST",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "W",
      "tags": ["FILE_IO"],
      "description": "Write any value to this register to initiate iteration through files and directories in the CWD. Typical sequence:<br>FILE_IO_DIR_FIRST(W), then loop through: [FILE_IO_NAME_READ_LEN(R), FILE_IO_NAME_READ(R), FILE_IO_ATTRIBUTES(R), FILE_IO_SIZE_BYTES(R), FILE_IO_DIR_NEXT(W)]<br>..until any of the following errors:<br>FILE_IO_END_OF_CWD (2966), FILE_IO_INVALID_OBJECT (2809), or FILE_IO_NOT_FOUND (2960)."
    },
    {
      "address": 60611,
      "name": "FILE_IO_DIR_NEXT",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "W",
      "tags": ["FILE_IO"],
      "description": "Write any value to this register to continue iteration through files and directories in the CWD."
    },
    {
      "address": 60620,
      "name": "FILE_IO_OPEN",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "W",
      "tags": ["FILE_IO"],
      "description": "Write any value to this register to open a file. Must first designate which file to open by writing to FILE_IO_PATH_WRITE_LEN_BYTES then FILE_IO_PATH_WRITE."
    },
    {
      "address": 60621,
      "name": "FILE_IO_CLOSE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "W",
      "tags": ["FILE_IO"],
      "description": "Write any value to this register to close the open file."
    },
    {
      "address": 60622,
      "name": "FILE_IO_DELETE",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "W",
      "tags": ["FILE_IO"],
      "description": "Write any value to this register to delete the active file. Must first designate which file to delete by writing to FILE_IO_PATH_WRITE_LEN_BYTES then FILE_IO_PATH_WRITE."
    },
    {
      "address": 60623,
      "name": "FILE_IO_ATTRIBUTES",
      "type": "UINT16",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "R",
      "tags": ["FILE_IO"],
      "description": "Used to differentiate files from directories/folders.<br>Bitmask:<br>Bit0: Reserved,<br>Bit1: Reserved,<br>Bit2: Reserved,<br>Bit3: Reserved,<br>Bit4: 1=Directory,<br>Bit5: 1=File."
    },
    {
      "address": 60628,
      "name": "FILE_IO_SIZE_BYTES",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "R",
      "tags": ["FILE_IO"],
      "altnames": ["FILE_IO_SIZE"],
      "description": "The size of the file in bytes. Directories have 0 size."
    },
    {
      "address": 60630,
      "name": "FILE_IO_DISK_SECTOR_SIZE_BYTES",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "R",
      "tags": ["FILE_IO"],
      "altnames": ["FILE_IO_DISK_SECTOR_SIZE"],
      "description": "The size of each sector in the SD card in bytes. In Windows this is called the Allocation Size."
    },
    {
      "address": 60632,
      "name": "FILE_IO_DISK_SECTORS_PER_CLUSTER",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "R",
      "tags": ["FILE_IO"],
      "description": "The number of sectors in each cluster. Captured on read of FILE_IO_DISK_SECTOR_SIZE_BYTES."
    },
    {
      "address": 60634,
      "name": "FILE_IO_DISK_TOTAL_CLUSTERS",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "R",
      "tags": ["FILE_IO"],
      "description": "The total number of clusters in the SD card. Captured on read of FILE_IO_DISK_SECTOR_SIZE_BYTES."
    },
    {
      "address": 60636,
      "name": "FILE_IO_DISK_FREE_CLUSTERS",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "R",
      "tags": ["FILE_IO"],
      "description": "Free (available) clusters in the SD card. Used to determine free space. Captured on read of FILE_IO_DISK_SECTOR_SIZE_BYTES."
    },
    {
      "address": 60638,
      "name": "FILE_IO_DISK_FORMAT_INDEX",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.016
        }
      ],
      "readwrite": "R",
      "tags": ["FILE_IO"],
      "altnames": ["FILE_IO_DISK_FORMAT"],
      "description": "Used to determine the format of the SD card.<br>0=None or Unknown,<br>1=FAT12,<br>2=FAT16(Windows FAT),<br>3=FAT32"
    },
    {
      "address": 60640,
      "name": "FILE_IO_PATH_WRITE_LEN_BYTES",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "W",
      "tags": ["FILE_IO"],
      "altnames": ["FILE_IO_NAME_WRITE_LEN"],
      "description": "Write the length (in bytes) of the file path or directory to access.",
      "usesRAM": true
    },
    {
      "address": 60642,
      "name": "FILE_IO_PATH_READ_LEN_BYTES",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "R",
      "tags": ["FILE_IO"],
      "altnames": ["FILE_IO_NAME_READ_LEN"],
      "description": "Read the length (in bytes) of the next file path or directory to access."
    },
    {
      "address": 60650,
      "name": "FILE_IO_PATH_WRITE",
      "type": "BYTE",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "W",
      "tags": ["FILE_IO"],
      "altnames": ["FILE_IO_NAME_WRITE"],
      "description": "Write the desired file path. Must first write the length of the file path string (in bytes) to FILE_IO_PATH_WRITE_LEN_BYTES. File paths should be null terminated. This register is a buffer."
    },
    {
      "address": 60652,
      "name": "FILE_IO_PATH_READ",
      "type": "BYTE",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "R",
      "tags": ["FILE_IO"],
      "altnames": ["FILE_IO_NAME_READ"],
      "description": "Read the next file path in the CWD. Length of the string (in bytes) determined by FILE_IO_PATH_READ_LEN_BYTES. File paths will be null terminated. This register is a buffer. Underrun behavior - fill with zeros."
    },
    {
      "address": 60654,
      "name": "FILE_IO_WRITE",
      "type": "BYTE",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 99
        }
      ],
      "readwrite": "W",
      "tags": ["FILE_IO"],
      "description": "Unimplemented. This register is a buffer."
    },
    {
      "address": 60656,
      "name": "FILE_IO_READ",
      "type": "BYTE",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0134
        }
      ],
      "readwrite": "R",
      "tags": ["FILE_IO"],
      "description": "Read the contents of a file. Must first write to FILE_IO_OPEN. Size of the file (in bytes) determined by FILE_IO_SIZE_BYTES. This register is a buffer. Underrun behavior - throws an error."
    },
    {
      "address": 61600,
      "name": "WATCHDOG_ENABLE_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "Write a 1 to enable the watchdog or a 0 to disable.  The watchdog must be disabled before writing any of the other watchdog registers (except for WATCHDOG_STRICT_CLEAR)."
    },
    {
      "address": 61602,
      "name": "WATCHDOG_ADVANCED_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "A single binary-encoded value where each bit is an advanced option. If bit 0 is set, IO_CONFIG_SET_CURRENT_TO_FACTORY will be done on timeout.  If bit 1 is set, IO_CONFIG_SET_CURRENT_TO_DEFAULT will be done on timeout."
    },
    {
      "address": 61604,
      "name": "WATCHDOG_TIMEOUT_S_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "When the device receives any communication over USB/Ethernet/WiFi, the watchdog timer is cleared.  If the watchdog timer is not cleared within the timeout period, the enabled actions will be done."
    },
    {
      "address": 61606,
      "name": "WATCHDOG_STARTUP_DELAY_S_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "This specifies the initial timeout period at device bootup.  This is used until the first time the watchdog is cleared or timeout ... after that the normal timeout is used."
    },
    {
      "address": 61610,
      "name": "WATCHDOG_STRICT_ENABLE_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "Set to 1 to enable strict mode."
    },
    {
      "address": 61612,
      "name": "WATCHDOG_STRICT_KEY_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "When set to strict mode, this is the value that must be written to the clear register."
    },
    {
      "address": 61614,
      "name": "WATCHDOG_STRICT_CLEAR",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "W",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "When running in strict mode, writing the key to this register is the only way to clear the watchdog. Writing to this register while not using strict mode will clear the watchdog."
    },
    {
      "address": 61620,
      "name": "WATCHDOG_RESET_ENABLE_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "Timeout action:  Set to 1 to enable device-reset on watchdog timeout."
    },
    {
      "address": 61630,
      "name": "WATCHDOG_DIO_ENABLE_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "Timeout action:  Set to 1 to enable DIO update on watchdog timeout."
    },
    {
      "address": 61632,
      "name": "WATCHDOG_DIO_STATE_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "The state high/low of the digital I/O after a Watchdog timeout. See DIO_STATE"
    },
    {
      "address": 61634,
      "name": "WATCHDOG_DIO_DIRECTION_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "tags": ["WATCHDOG"],
      "description": "The direction input/output of the digital I/O after a Watchdog timeout. See DIO_DIRECTION"
    },
    {
      "address": 61636,
      "name": "WATCHDOG_DIO_INHIBIT_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "The inhibit mask of the digital I/O after a Watchdog timeout. See DIO_INHIBIT"
    },
    {
      "address": 61640,
      "name": "WATCHDOG_DAC0_ENABLE_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "Timeout action:  Set to 1 to enable DAC0 update on watchdog timeout."
    },
    {
      "address": 61642,
      "name": "WATCHDOG_DAC0_DEFAULT",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "The voltage of DAC0 after a Watchdog timeout."
    },
    {
      "address": 61650,
      "name": "WATCHDOG_DAC1_ENABLE_DEFAULT",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "Timeout action:  Set to 1 to enable DAC1 update on watchdog timeout."
    },
    {
      "address": 61652,
      "name": "WATCHDOG_DAC1_DEFAULT",
      "type": "FLOAT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0016
        },
        {
            "device": "T4"
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["WATCHDOG"],
      "description": "The voltage of DAC1 after a Watchdog timeout."
    },
    {
      "address": 61800,
      "name": "INTERNAL_FLASH_KEY",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["INTFLASH"],
      "description": "Sets the region of internal flash to which access is allowed."
    },
    {
      "address": 61810,
      "name": "INTERNAL_FLASH_READ_POINTER",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["INTFLASH"],
      "description": "The address in internal flash that reads will start from."
    },
    {
      "address": 61812,
      "name": "INTERNAL_FLASH_READ",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "R",
      "tags": ["INTFLASH"],
      "description": "Data read from internal flash."
    },
    {
      "address": 61820,
      "name": "INTERNAL_FLASH_ERASE",
      "type": "UINT32",
      "isBuffer": true,
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "tags": ["INTFLASH"],
      "description": "Erases a 4k section of internal flash starting at the specified address. This register is a buffer."
    },
    {
      "address": 61830,
      "name": "INTERNAL_FLASH_WRITE_POINTER",
      "type": "UINT32",
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "RW",
      "tags": ["INTFLASH"],
      "description": "Address in internal flash where writes will begin."
    },
    {
      "address": 61832,
      "name": "INTERNAL_FLASH_WRITE",
      "type": "UINT32",
      "isBuffer": true,
      "devices": [
        "T7",
        "T4"
      ],
      "readwrite": "W",
      "tags": ["INTFLASH"],
      "description": "Data written here will be written to internal flash. This register is a buffer."
    },
    {
      "address": 22000,
      "name": "DGT_TEMPERATURE_LATEST_RAW",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "Get the latest temperature conversion, and begin a new conversion. Starting with FW1.21, temperature conversion is instantaneous. Units are described in TMP112 datasheet."
    },
    {
      "address": 22001,
      "name": "DGT_HUMIDITY_RAW",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "Craw. Get a new humidity reading from HCH-1000. Units are in 100s fF of capacitance."
    },
    {
      "address": 22002,
      "name": "DGT_LIGHT_RAW",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "Counts. Get a new light reading from LED. Units are in counts before reverse leakage complete."
    },
    {
      "address": 22018,
      "name": "DGT_CHANGE_LOG_ITEMS",
      "type": "UINT16",
      "devices": [
        {
          "device": "DIGIT",
          "fwmin": 1.21
        }
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "Set the items to log. Value is a bitmask:<br>Bit0: 1 = Log Temperature,<br>Bit1: 1 = Log Light,<br>Bit2: 1 = Log Humidity.<br>All other bits reserved. Change implemented on next erase of dataset."
    },
    {
      "address": 22019,
      "name": "DGT_LOG_ITEMS_DATASET",
      "type": "UINT16",
      "devices": [
        {
          "device": "DIGIT",
          "fwmin": 1.21
        }
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "Read what is logged in the dataset. Value is a bitmask:<br>Bit0: 1 = Temperature logged,<br>Bit1: 1 = Light logged,<br>Bit2: 1 = Humidity logged.<br>In memory: T, TL, TH, THL."
    },
    {
      "address": 22038,
      "name": "DGT_CHANGE_LOG_INTERVAL_INDEX",
      "type": "UINT16",
      "devices": [
        {
          "device": "DIGIT",
          "fwmin": 1.21
        }
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "Set the time interval between log events. Index<br>0=10s,<br>1=30s,<br>2=1m,<br>3=10m,<br>4=30m,<br>5=1h,<br>6=6h<br>Change implemented on next erase of dataset."
    },
    {
      "address": 22039,
      "name": "DGT_LOG_INTERVAL_INDEX_DATASET",
      "type": "UINT16",
      "devices": [
        {
          "device": "DIGIT",
          "fwmin": 1.21
        }
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "Read time interval between log events in the dataset. Index<br>0=10s,<br>1=30s,<br>2=1m,<br>3=10m,<br>4=30m,<br>5=1h,<br>6=6h"
    },
    {
      "address": 22042,
      "name": "DGT_LOG_START_TIME",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "The start time of the logging session: 22042 Year=0 to 99, 22043 Month=1 to 12, 22044 Day=1 to 31, 22045 Weekday=1 to 7, 22046 Hour=0 to 23, 22047 Minutes=0 to 59, 22048 Second=0 to 59"
    },
    {
      "address": 22049,
      "name": "DGT_nALARM_FLAGS",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "A bitmask of all alarm and error flags. 0=Occurred, 1=Did NOT occur. Refer to documentation for more information"
    },
    {
      "address": 22053,
      "name": "DGT_nTRIG_HIGH_ALARM",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "User high threshold alarm triggered. 0=Occurred, 1=Did NOT occur"
    },
    {
      "address": 22054,
      "name": "DGT_nTRIG_LOW_ALARM",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "User low threshold alarm triggered. 0=Occurred, 1=Did NOT occur"
    },
    {
      "address": 22055,
      "name": "DGT_nALARM_ARMED",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "User alarms armed flag. 0=Armed, 1=Not yet armed"
    },
    {
      "address": 22080,
      "name": "DGT_INDEX_ALARM_ITEM",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "Index of the user alarm item. 0=None, 1=Temperature, 2=Light, 3=Humidity. Valid results require that the corresponding item is being logged."
    },
    {
      "address": 22081,
      "name": "DGT_INDEX_ALARM_ARM_CONDITION",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "Index of the alarm arming condition. 0=Arm once within threshold window, 1=Arm after pure time delay"
    },
    {
      "address": 22082,
      "name": "DGT_HIGH_ALARM_ENABLE",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "User high threshold alarm enable. 0=Disabled, 1=Enabled"
    },
    {
      "address": 22083,
      "name": "DGT_LOW_ALARM_ENABLE",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "User low threshold alarm enable. 0=Disabled, 1=Enabled"
    },
    {
      "address": 22084,
      "name": "DGT_ALARM_ARM_DELAY",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "User threshold alarm arming delay counter. The number of consecutive readings (inside window) before arming the alarm-> 0 to 63"
    },
    {
      "address": 22085,
      "name": "DGT_ALARM_TRIG_DELAY",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "User threshold alarm trigger delay counter. The number of consecutive readings outside window before triggering the alarm-> 0 to 31"
    },
    {
      "address": 22100,
      "name": "DGT_HIGH_ALARM_THRESHOLD",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "User alarm high threshold value. Value depends on which item is being alarmed on(T, L, or H)."
    },
    {
      "address": 22101,
      "name": "DGT_LOW_ALARM_THRESHOLD",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "User alarm low threshold value. Value depends on which item is being alarmed on(T, L, or H)."
    },
    {
      "address": 22180,
      "name": "DGT_pHIGH_THRESH_LIGHT",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "High light threshold pointer(because light alarms require an array of count values)-> 0 to 255. Auto-incremented"
    },
    {
      "address": 22181,
      "name": "DGT_HIGH_THRESH_LIGHT",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "High light threshold array start."
    },
    {
      "address": 22190,
      "name": "DGT_pLOW_THRESH_LIGHT",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "Low light threshold pointer(because light alarms require an array of count values)-> 0 to 255. Auto-incremented"
    },
    {
      "address": 22191,
      "name": "DGT_LOW_THRESH_LIGHT",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "Low light threshold array start."
    },
    {
      "address": 22200,
      "name": "DGT_INSTALLED_OPTIONS",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "Number of things installed on the Digit 2=TL, 3=TLH"
    },
    {
      "address": 22210,
      "name": "DGT_STORED_BYTES",
      "type": "UINT32",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "Number of bytes of data stored on flash."
    },
    {
      "address": 22220,
      "name": "DGT_LIFETIME_READINGS",
      "type": "UINT32",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "Total number of readings saved since last cleared. Typically cleared if new battery is installed."
    },
    {
      "address": 22222,
      "name": "DGT_BATTERY_INSTALL_DATE",
      "type": "UINT32",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "The date that the battery was installed. Timestamp format = Seconds since 1970. This parameter is used to estimate remaining battery life."
    },
    {
      "address": 22231,
      "name": "DGT_HUMIDITY_CAL_OFFSET_FACTORY",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "The factory calibration offset which can be used in the conversion of raw humidity. Write requires unlocked."
    },
    {
      "address": 22232,
      "name": "DGT_HUMIDITY_CAL_OFFSET",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "A single point offset used in the conversion of raw humidity. Units in 100s fF"
    },
    {
      "address": 22233,
      "name": "DGT_HUMIDITY_CAL_I_SOURCE",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "Read=Constant current source trim value. Write(any value)=Automatically calibrate the current source. The current source is used for humidity readings, and once calibrated, it will not need to be calibrated again."
    },
    {
      "address": 22234,
      "name": "DGT_HUMIDITY_CAL_SLOPE_FACTORY",
      "type": "FLOAT32",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "The factory slope of humidity which can be used in the conversion of raw humidity. Units in %Rh per 100s fF. Write requires unlocked."
    },
    {
      "address": 22236,
      "name": "DGT_HUMIDITY_CAL_SLOPE",
      "type": "FLOAT32",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "The slope of humidity used in the conversion of raw humidity. Units in %Rh per 100s fF."
    },
    {
      "address": 22238,
      "name": "DGT_HUMIDITY_CAL_T_SLOPE",
      "type": "FLOAT32",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "The temperature dependent factor used in the conversion of raw humidity. Units in 100s fF per degC"
    },
    {
      "address": 22240,
      "name": "DGT_HUMIDITY_CAL_T_SLOPE_FACTORY",
      "type": "FLOAT32",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "The factory temperature dependent factor used in the conversion of raw humidity. Units in 100s fF per degC"
    },
    {
      "address": 22242,
      "name": "DGT_RTCC_TIME",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "The current time of the real-time-clock on the Digit. Synchronized with the computer within software. 22242 Year=0 to 99, 22243 Month=1 to 12, 22244 Day=1 to 31, 22245 Weekday=1 to 7, 22246 Hour=0 to 23, 22247 Minutes=0 to 59, 22248 Second=0 to 59"
    },
    {
      "address": 22804,
      "name": "DGT_FLASH_WIP",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "A status flag for the flash(data storage chip) on the Digit. 1=Write in-progress, 0=Idle"
    },
    {
      "address": 22810,
      "name": "DGT_pFLASH_READ",
      "type": "UINT32",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "The read pointer for flash. Auto-incremented, simply initialize with a start address, then use 22812+"
    },
    {
      "address": 22812,
      "name": "DGT_FLASH_READ",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "R",
      "tags": [""],
      "description": "Read data from this address and subsequent addresses after pointer is initialized. Used to download data from the Digit."
    },
    {
      "address": 22822,
      "name": "DGT_FLASH_bkERASE",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "W",
      "tags": [""],
      "description": "Erase all data on the flash. KEY=Erase, Other=No effect, KEY=37157 Takes 5 seconds to complete, so poll the WIP status flag until =0. After erase, logging will begin immediately."
    },
    {
      "address": 22830,
      "name": "DGT_pFLASH_WRITE",
      "type": "UINT32",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "RW",
      "tags": [""],
      "description": "The write pointer for flash. Auto-incremented, simply initialize with a start address, then use 22832+"
    },
    {
      "address": 22832,
      "name": "DGT_FLASH_WRITE",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "W",
      "tags": [""],
      "description": "Write data to this address and subsequent addresses after pointer is initialized. Used primarily for firmware updates."
    },
    {
      "address": 22844,
      "name": "DGT_FACTORY_UNLOCK",
      "type": "UINT16",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "W",
      "tags": [""],
      "description": "Write a unique passkey to unlock factory settings. Only used by mfr."
    },
    {
      "address": 61996,
      "name": "DGT_REQ_FW_UPDATE",
      "type": "UINT32",
      "devices": [
        "DIGIT"
      ],
      "readwrite": "W",
      "tags": [""],
      "description": "Request a firmware update.  Pass a value of 150 (5mS) so that the Digit has time to de-enumerate. Only used by mfr."
    }
  ],

  "registers_beta": [
    {
      "address": 49410,
      "name": "WIFI_START_ADHOC",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.9308
        }
      ],
      "readwrite": "W",
      "tags": ["WIFI"]
    },
    {
      "address": 49406,
      "name": "WIFI_SCAN_START",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.87
        }
      ],
      "readwrite": "W",
      "tags": ["WIFI"]
    },
    {
      "address": 49486,
      "name": "WIFI_SCAN_NUM_BYTES",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.87
        }
      ],
      "readwrite": "R",
      "tags": ["WIFI"]
    },
    {
      "address": 49488,
      "name": "WIFI_SCAN_DATA",
      "type": "BYTE",
      "isBuffer": true,
      "devices": [
        {
          "device": "T7",
          "fwmin": 0.87
        }
      ],
      "readwrite": "R",
      "tags": ["WIFI"]
    },
    {
      "address": 6006,
      "name": "LUA_NUM_IO_FLOATS",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0023
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA"],
      "description": "Deprecated. Do not need to use this in FW 1.0163+, as 200 bytes of USER_RAM are pre-allocated. Allocates memory for x input-output floats in FW<1.0163."
    },
    {
      "address": 60662,
      "name": "FILE_IO_LUA_SWITCH_FILE",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1.0168
        }
      ],
      "readwrite": "RW",
      "tags": ["LUA", "FILE_IO"],
      "description": "Write any value to this register to instruct Lua scripts to switch to a new file. Lua script should periodically check LJ.CheckFileFlag() to receive instruction, then call LJ.ClearFileFlag() after file switch is complete. Useful for applications that require continuous logging in a Lua script, and on-demand file access from a host."
    },
    {
      "address": 61200,
      "name": "BATTERY_RAM#(0:16)",
      "type": "UINT32",
      "devices": [
        {
          "device": "T7",
          "fwmin": 1
        }
      ],
      "readwrite": "RW",
      "default": 0,
      "tags": ["LUA", "USER_RAM"],
      "description": "Saves or recalls data to or from the battery-backed SRAM. Only available on T7-Pros."
    }
  ],

  "errors": [
    {
      "error": 0,
      "string": "LJ_SUCCESS"
    },
    {
      "error": 200,
      "string": "LJME_WARNINGS_BEGIN",
      "description": "This indicates where the warning codes start is not a real warning code."
    },
    {
      "error": 399,
      "string": "LJME_WARNINGS_END",
      "description": "This indicates where the warning codes end is not a real warning code."
    },
    {
      "error": 201,
      "string": "LJME_FRAMES_OMITTED_DUE_TO_PACKET_SIZE",
      "description": "Some read/write operation(s) were not sent to the device because the Feedback command being created was too large for the device, given the current connection type."
    },
    {
      "error": 202,
      "string": "LJME_DEBUG_LOG_FAILURE",
      "description": "The debug log file could not be written to. Check the LJM_DEBUG_LOG_FILE and related LJM configurations."
    },
    {
      "error": 203,
      "string": "LJME_USING_DEFAULT_CALIBRATION",
      "description": "The device's calibration could not be read, so the nominal calibration values were used. Possible Cause: Incompatible microSD card installed. See SD Card section of T7 Datasheet."
    },
    {
      "error": 204,
      "string": "LJME_DEBUG_LOG_FILE_NOT_OPEN",
      "description": "The message could not be logged because the debug log file has not been opened."
    },
    {
      "error": 254,
      "string": "FEATURE_NOT_IMPLEMENTED"
    },
    {
      "error": 1200,
      "string": "LJME_MODBUS_ERRORS_BEGIN",
      "description": "This indicates where the Modbus error codes start is not a real Modbus error code."
    },
    {
      "error": 1216,
      "string": "LJME_MODBUS_ERRORS_END",
      "description": "This indicates where the Modbus error codes end is not a real Modbus error code."
    },
    {
      "error": 1201,
      "string": "LJME_MBE1_ILLEGAL_FUNCTION",
      "description": "The device received an invalid function code."
    },
    {
      "error": 1202,
      "string": "LJME_MBE2_ILLEGAL_DATA_ADDRESS",
      "description": "The device received an invalid address."
    },
    {
      "error": 1203,
      "string": "LJME_MBE3_ILLEGAL_DATA_VALUE",
      "description": "The device received a value that could not be written to the specified address."
    },
    {
      "error": 1204,
      "string": "LJME_MBE4_SLAVE_DEVICE_FAILURE",
      "description": "The device encountered an error."
    },
    {
      "error": 1205,
      "string": "LJME_MBE5_ACKNOWLEDGE",
      "description": "The device acknowledges the request, but will take some time to process."
    },
    {
      "error": 1206,
      "string": "LJME_MBE6_SLAVE_DEVICE_BUSY",
      "description": "The device is busy and cannot respond currently."
    },
    {
      "error": 1208,
      "string": "LJME_MBE8_MEMORY_PARITY_ERROR",
      "description": "The device detected a memory parity error."
    },
    {
      "error": 1210,
      "string": "LJME_MBE10_GATEWAY_PATH_UNAVAILABLE",
      "description": "The requested route was not available."
    },
    {
      "error": 1211,
      "string": "LJME_MBE11_GATEWAY_TARGET_NO_RESPONSE",
      "description": "The requested route was available but the device failed to respond."
    },
    {
      "error": 1220,
      "string": "LJME_LIBRARY_ERRORS_BEGIN",
      "description": "This indicates where the LJM error codes start is not a real LJM error code."
    },
    {
      "error": 1399,
      "string": "LJME_LIBRARY_ERRORS_END",
      "description": "This indicates where the LJM error codes end is not a real LJM error code."
    },
    {
      "error": 1221,
      "string": "LJME_UNKNOWN_ERROR",
      "description": "LJM reached an unexpected state. Please contact LabJack support if you've received this error."
    },
    {
      "error": 1222,
      "string": "LJME_INVALID_DEVICE_TYPE",
      "description": "LJM received an unexpected device type."
    },
    {
      "error": 1223,
      "string": "LJME_INVALID_HANDLE",
      "description": "LJM reached an invalid state."
    },
    {
      "error": 1224,
      "string": "LJME_DEVICE_NOT_OPEN",
      "description": "The requested handle did not refer to an open device. Perhaps the Open call failed but you still tried to use the returned handle.  Perhaps your code called Close somewhere and then after tried to use the handle."
    },
    {
      "error": 1225,
      "string": "LJME_STREAM_NOT_INITIALIZED",
      "description": "The requested device does not have a stream initialized in LJM."
    },
    {
      "error": 1226,
      "string": "LJME_DEVICE_DISCONNECTED",
      "description": "The device could not be contacted and LJM is not configured to heal device connections (see LJM config LJM_HEAL_CONNECTION_MODE)."
    },
    {
      "error": 1227,
      "string": "LJME_DEVICE_NOT_FOUND",
      "description": "A device matching the requested device parameters could not be found and therefore could not be opened."
    },
    {
      "error": 1229,
      "string": "LJME_DEVICE_ALREADY_OPEN",
      "description": "The device being registered was already registered. Please contact LabJack support if you've received this error."
    },
    {
      "error": 1230,
      "string": "LJME_DEVICE_CURRENTLY_CLAIMED_BY_ANOTHER_PROCESS",
      "description": "At least one matching device was found, but cannot be claimed by this process because a different process has already claimed it. Either close the device handle in your other process (i.e. program or application) or close the other process. Then try opening the device again."
    },
    {
      "error": 1231,
      "string": "LJME_CANNOT_CONNECT",
      "description": "At least one device matching the requested device parameters was found, but a connection could not be established."
    },
    {
      "error": 1233,
      "string": "LJME_SOCKET_LEVEL_ERROR",
      "description": "A TCP socket-level error occurred."
    },
    {
      "error": 1236,
      "string": "LJME_CANNOT_OPEN_DEVICE",
      "description": "The device could not be opened."
    },
    {
      "error": 1237,
      "string": "LJME_CANNOT_DISCONNECT",
      "description": "An error occurred while attempting to disconnect."
    },
    {
      "error": 1238,
      "string": "LJME_WINSOCK_FAILURE",
      "description": "A Windows WINSOCK error occurred."
    },
    {
      "error": 1239,
      "string": "LJME_RECONNECT_FAILED",
      "description": "The device could not be contacted. LJM is configured to heal device connections and the reconnection attempt failed."
    },
    {
      "error": 1240,
      "string": "LJME_CONNECTION_HAS_YIELDED_RECONNECT_FAILED",
      "description": "The device connection was yielded to another process and now cannot be contacted."
    },
    {
      "error": 1241,
      "string": "LJME_USB_FAILURE",
      "description": "System USB communication failed fatally."
    },
    {
      "error": 1243,
      "string": "LJME_U3_NOT_SUPPORTED_BY_LJM",
      "description": "LJM does not support UD-series LabJack devices; use the UD driver (https://labjack.com/support/ud)"
    },
    {
      "error": 1246,
      "string": "LJME_U6_NOT_SUPPORTED_BY_LJM",
      "description": "LJM does not support UD-series LabJack devices; use the UD driver (https://labjack.com/support/ud)"
    },
    {
      "error": 1249,
      "string": "LJME_UE9_NOT_SUPPORTED_BY_LJM",
      "description": "LJM does not support UD-series LabJack devices; use the UD driver (https://labjack.com/support/ud)"
    },
    {
      "error": 1250,
      "string": "LJME_INVALID_ADDRESS",
      "description": "The requested address was not found."
    },
    {
      "error": 1251,
      "string": "LJME_INVALID_CONNECTION_TYPE",
      "description": "LJM received an unexpected connection type."
    },
    {
      "error": 1252,
      "string": "LJME_INVALID_DIRECTION",
      "description": "LJM received an unexpected read/write direction."
    },
    {
      "error": 1253,
      "string": "LJME_INVALID_FUNCTION",
      "description": "LJM received an unexpected Modbus function."
    },
    {
      "error": 1254,
      "string": "LJME_INVALID_NUM_REGISTERS",
      "description": "LJM received an unexpected number of registers."
    },
    {
      "error": 1255,
      "string": "LJME_INVALID_PARAMETER",
      "description": "LJM received an unexpected parameter. Please check the LabJackM.h description of the function that returned this error for an explanation."
    },
    {
      "error": 1256,
      "string": "LJME_INVALID_PROTOCOL_ID",
      "description": "LJM received an unexpected Modbus protocol ID."
    },
    {
      "error": 1257,
      "string": "LJME_INVALID_TRANSACTION_ID",
      "description": "LJM received an unexpected Modbus transaction ID."
    },
    {
      "error": 1259,
      "string": "LJME_UNKNOWN_VALUE_TYPE",
      "description": "LJM received an unexpected data type."
    },
    {
      "error": 1260,
      "string": "LJME_MEMORY_ALLOCATION_FAILURE",
      "description": "LJM was unable to allocate needed memory."
    },
    {
      "error": 1261,
      "string": "LJME_NO_COMMAND_BYTES_SENT",
      "description": "No Modbus command bytes could be sent to the device."
    },
    {
      "error": 1262,
      "string": "LJME_INCORRECT_NUM_COMMAND_BYTES_SENT",
      "description": "An incorrect number of Modbus command bytes were sent to the device, as reported by the underlying driver."
    },
    {
      "error": 1263,
      "string": "LJME_NO_RESPONSE_BYTES_RECEIVED",
      "description": "No Modbus response bytes could be received from the device."
    },
    {
      "error": 1264,
      "string": "LJME_INCORRECT_NUM_RESPONSE_BYTES_RECEIVED",
      "description": "An incorrect/unexpected number of Modbus response bytes were received from the device."
    },
    {
      "error": 1265,
      "string": "LJME_MIXED_FORMAT_IP_ADDRESS",
      "description": "LJM received an IP identifier that seemed to be formatted in both hexadecimal and decimal."
    },
    {
      "error": 1266,
      "string": "LJME_UNKNOWN_IDENTIFIER",
      "description": "LJM received an unknown identifier type."
    },
    {
      "error": 1267,
      "string": "LJME_NOT_IMPLEMENTED",
      "description": "An unimplemented functionality was attempted. Please contact LabJack support if you've received this error so we can implement it for you!"
    },
    {
      "error": 1268,
      "string": "LJME_INVALID_INDEX",
      "description": "LJM received an index/offset that was out-of-bounds. Please contact LabJack support if you've received this error."
    },
    {
      "error": 1269,
      "string": "LJME_INVALID_LENGTH",
      "description": "LJM received a length that did not make sense. Please contact LabJack support if you've received this error."
    },
    {
      "error": 1270,
      "string": "LJME_ERROR_BIT_SET",
      "description": "A Modbus response had the error bit set. Please contact LabJack support if you've received this error."
    },
    {
      "error": 1271,
      "string": "LJME_INVALID_MAXBYTESPERMBFB",
      "description": "LJM_AddressesToMBFB received a value of MaxBytesPerMBFB that was too small."
    },
    {
      "error": 1272,
      "string": "LJME_NULL_POINTER",
      "description": "LJM received a null pointer for a pointer parameter that is required to not be null."
    },
    {
      "error": 1273,
      "string": "LJME_NULL_OBJ",
      "description": "LJM found a null object. Please contact LabJack support if you've received this error."
    },
    {
      "error": 1274,
      "string": "LJME_RESERVED_NAME",
      "description": "The requested name was invalid/reserved."
    },
    {
      "error": 1275,
      "string": "LJME_UNPARSABLE_DEVICE_TYPE",
      "description": "LJM received a device type string that was unparsable or unexpected."
    },
    {
      "error": 1276,
      "string": "LJME_UNPARSABLE_CONNECTION_TYPE",
      "description": "LJM received a connection type string that was unparsable or unexpected."
    },
    {
      "error": 1277,
      "string": "LJME_UNPARSABLE_IDENTIFIER",
      "description": "LJM received a identifier string that was unparsable or unexpected."
    },
    {
      "error": 1278,
      "string": "LJME_PACKET_SIZE_TOO_LARGE",
      "description": "The Modbus packet to be sent or the expected Modbus packet to be received exceeded the maximum packet size for the device connection."
    },
    {
      "error": 1279,
      "string": "LJME_TRANSACTION_ID_ERR",
      "description": "LJM received a mismatched Modbus transaction ID from the device."
    },
    {
      "error": 1280,
      "string": "LJME_PROTOCOL_ID_ERR",
      "description": "LJM received a mismatched Modbus protocol ID from the device."
    },
    {
      "error": 1281,
      "string": "LJME_LENGTH_ERR",
      "description": "LJM received a mismatched Modbus packet length from the device."
    },
    {
      "error": 1282,
      "string": "LJME_UNIT_ID_ERR",
      "description": "LJM received a mismatched Modbus unit ID from the device."
    },
    {
      "error": 1283,
      "string": "LJME_FUNCTION_ERR",
      "description": "LJM received a mismatched Modbus function ID from the device."
    },
    {
      "error": 1284,
      "string": "LJME_STARTING_REG_ERR",
      "description": "LJM received a mismatched Modbus register address from the device."
    },
    {
      "error": 1285,
      "string": "LJME_NUM_REGS_ERR",
      "description": "LJM received a mismatched Modbus number of registers from the device."
    },
    {
      "error": 1286,
      "string": "LJME_NUM_BYTES_ERR",
      "description": "LJM received a mismatched Modbus number of bytes from the device."
    },
    {
      "error": 1289,
      "string": "LJME_CONFIG_FILE_NOT_FOUND",
      "description": "The LJM configuration file could not be opened for reading."
    },
    {
      "error": 1290,
      "string": "LJME_CONFIG_PARSING_ERROR",
      "description": "An error occurred while parsing the LJM configuration file."
    },
    {
      "error": 1291,
      "string": "LJME_INVALID_NUM_VALUES",
      "description": "LJM received an invalid number of values."
    },
    {
      "error": 1292,
      "string": "LJME_CONSTANTS_FILE_NOT_FOUND",
      "description": "The LJM error constants file and/or Modbus constants file could not be opened for reading."
    },
    {
      "error": 1293,
      "string": "LJME_INVALID_CONSTANTS_FILE",
      "description": "The LJM error constants file and/or Modbus constants file could not be parsed."
    },
    {
      "error": 1294,
      "string": "LJME_INVALID_NAME",
      "description": "The requested name was not found in the register loaded from the constants file (if the constants file is loaded)."
    },
    {
      "error": 1296,
      "string": "LJME_OVERSPECIFIED_PORT",
      "description": "The requested connection type is ANY and port is specified."
    },
    {
      "error": 1297,
      "string": "LJME_INTENT_NOT_READY",
      "description": "The internal operation object was not prepared correctly. Please contact LabJack support if you've received this error."
    },
    {
      "error": 1298,
      "string": "LJME_ATTR_LOAD_COMM_FAILURE",
      "description": "A device matching the requested device parameters was found, claimed, and connected, but a communication error prevented device attributes from being loaded to LJM. The device was not opened."
    },
    {
      "error": 1299,
      "string": "LJME_INVALID_CONFIG_NAME",
      "description": "LJM received an unknown configuration name."
    },
    {
      "error": 1300,
      "string": "LJME_ERROR_RETRIEVAL_FAILURE",
      "description": "An error occurred on the device and LJM was unable to retrieve more information about that error. Please contact LabJack support if you've received this error."
    },
    {
      "error": 1301,
      "string": "LJME_LJM_BUFFER_FULL",
      "description": "The LJM stream buffer was filled with stream data and stream was stopped."
    },
    {
      "error": 1302,
      "string": "LJME_COULD_NOT_START_STREAM",
      "description": "LJM could not start stream. Input may have incorrect or a different error may have occurred."
    },
    {
      "error": 1303,
      "string": "LJME_STREAM_NOT_RUNNING",
      "description": "LJM is not streaming data from the device."
    },
    {
      "error": 1304,
      "string": "LJME_UNABLE_TO_STOP_STREAM",
      "description": "The stream could not be stopped."
    },
    {
      "error": 1305,
      "string": "LJME_INVALID_VALUE",
      "description": "LJM received a value that was not expected."
    },
    {
      "error": 1306,
      "string": "LJME_SYNCHRONIZATION_TIMEOUT",
      "description": "LJM did not receive data from the device for longer than the timeout specified by LJM_STREAM_RECEIVE_TIMEOUT_MS. Externally clocked stream setup is described here: https://labjack.com/support/software/api/ljm/function-reference/ljmestreamstart#externally-clocked"
    },
    {
      "error": 1307,
      "string": "LJME_OLD_FIRMWARE",
      "description": "The current firmware version of the device was not sufficient to read/write a requested register, as according to the loaded LJM constants file."
    },
    {
      "error": 1308,
      "string": "LJME_CANNOT_READ_OUT_ONLY_STREAM",
      "description": "The stream running is out-only and does not produce data values."
    },
    {
      "error": 1309,
      "string": "LJME_NO_SCANS_RETURNED",
      "description": "The LJM configuration LJM_STREAM_SCANS_RETURN is set to LJM_STREAM_SCANS_RETURN_ALL_OR_NONE and the full ScansPerRead scans have not be received."
    },
    {
      "error": 1310,
      "string": "LJME_TEMPERATURE_OUT_OF_RANGE",
      "description": "LJM_TCVoltsToTemp received a temperature that was out of range for the given thermocouple type."
    },
    {
      "error": 1311,
      "string": "LJME_VOLTAGE_OUT_OF_RANGE",
      "description": "LJM_TCVoltsToTemp received a voltage that was out of range for the given thermocouple type."
    },
    {
      "error": 1312,
      "string": "LJME_FUNCTION_DOES_NOT_SUPPORT_THIS_TYPE",
      "description": "The function does not support the given data type. For example, LJM_eReadName and LJM_eReadAddress do not support reading LJM_STRING values, which are too large."
    },
    {
      "error": 1313,
      "string": "LJME_INVALID_INFO_HANDLE",
      "description": "The given info handle did not exist. (It may have been passed to LJM_CleanInfo already.)"
    },
    {
      "error": 1314,
      "string": "LJME_NO_DEVICES_FOUND",
      "description": "An Open/OpenS call was called - with any device type, any connection type, and any identifier - but no devices were found."
    },
    {
      "error": 1316,
      "string": "LJME_AUTO_IPS_FILE_NOT_FOUND",
      "description": "The LJM auto IPs file could not be found or read. LJM will attempt to create the auto IPs file, as needed."
    },
    {
      "error": 1317,
      "string": "LJME_AUTO_IPS_FILE_INVALID",
      "description": "The LJM auto IPs file contents were not valid."
    },
    {
      "error": 1318,
      "string": "LJME_INVALID_INTERVAL_HANDLE",
      "description": "The given interval handle did not exist."
    },
    {
      "error": 1319,
      "string": "LJME_NAMED_MUTEX_PERMISSION_DENIED",
      "description": "There was a permission error while accessing a system-level named mutex. Try restarting your computer."
    },
    {
      "error": 1320,
      "string": "LJME_DIGITAL_AUTO_RECOVERY_ERROR_DETECTED",
      "description": "During stream, the device buffer overflowed, causing auto-recovery to occur. See labjack.com/digital-auto-recovery-error-detection."
    },
    {
      "error": 1321,
      "string": "LJME_NEGATIVE_RECEIVE_BUFFER_SIZE",
      "description": "During stream, the receive buffer size was negative. This is probably because LJM_STREAM_TCP_RECEIVE_BUFFER_SIZE was set to too large a number to be represented by the signed data type being used, int. Solution: Use a smaller LJM_STREAM_TCP_RECEIVE_BUFFER_SIZE."
    },
    {
      "error": 2300,
      "string": "MODBUS_RSP_OVERFLOW",
      "description": "Response packet greater than max packet size."
    },
    {
      "error": 2301,
      "string": "MODBUS_CMD_OVERFLOW",
      "description": "Command packet greater than max packet size"
    },
    {
      "error": 2310,
      "string": "MODBUS_STRING_CMD_TOO_BIG"
    },
    {
      "error": 2311,
      "string": "MODBUS_STRING_PARAM_TOO_BIG"
    },
    {
      "error": 2312,
      "string": "MODBUS_STRING_BAD_NUM_PARAMS"
    },
    {
      "error": 2313,
      "string": "MODBUS_INVALID_NUM_REGISTERS",
      "description": "Register data types does not match the number of registers in the request."
    },
    {
      "error": 2314,
      "string": "MODBUS_READ_TOO_LARGE"
    },
    {
      "error": 2315,
      "string": "MODBUS_NUM_REGS_MUST_BE_EVEN",
      "description": "Register or group of registers requires the access be in an even number of registers."
    },
    {
      "error": 2316,
      "string": "MODBUS_STRING_MISSING_NULL",
      "description": "Strings must be terminated with a null (\\0, 0x00)."
    },
    {
      "error": 2330,
      "string": "STARTUP_CONFIG_INVALID_CODE"
    },
    {
      "error": 2331,
      "string": "STARTUP_CONFIG_INVALID_READ",
      "description": "An attempt was made to read beyond the configuration structure."
    },
    {
      "error": 2340,
      "string": "USER_RAM_FIFO_MUST_BE_EMPTY",
      "description": "The FIFO can not contain any data when data size is being changed."
    },
    {
      "error": 2343,
      "string": "USER_RAM_FIFO_INSUFFICIENT_VALUES",
      "description": "The FIFO contains fewer values than requested."
    },
    {
      "error": 2344,
      "string": "USER_RAM_FIFO_INSUFFICIENT_SPACE",
      "description": "FIFO does not have enough free space to hold the requested write. No data was added to the FIFO."
    },
    {
      "error": 2345,
      "string": "USER_RAM_FIFO_SIZE_MUST_BE_EVEN",
      "description": "The number of bytes allocated to the FIFO must be even.."
    },
    {
      "error": 2350,
      "string": "INTFLASH_ADD_INVALID"
    },
    {
      "error": 2351,
      "string": "INTFLASH_CODE_INVALID"
    },
    {
      "error": 2352,
      "string": "INTFLASH_OP_PROHIBITED",
      "description": "Attempted to read or write a section that is not allowed."
    },
    {
      "error": 2353,
      "string": "INTFLASH_SECTION_OVERWRITE",
      "description": "Attempted to write or read beyond the currently selected section."
    },
    {
      "error": 2354,
      "string": "INTFLASH_KEY_INVALID",
      "description": "Specified Key and Address mismatch."
    },
    {
      "error": 2355,
      "string": "FLASH_VERIFICATION_FAILED",
      "description": "A write to flash failed to set one or more bits to the desired values."
    },
    {
      "error": 2356,
      "string": "FLASH_ERASE_FAILED",
      "description": "One or more bits failed to set during a flash erase operation."
    },
    {
      "error": 2358,
      "string": "INTFLASH_UNAVAILABLE",
      "description": "Flash can not be accessed due to the WiFi module booting up."
    },
    {
      "error": 2359,
      "string": "FILEIO_UNAVAILABLE",
      "description": "The file system can not be accessed due to the WiFi module booting up."
    },
    {
      "error": 2370,
      "string": "AIN_RANGE_INVALID",
      "description": "Specified range not available on this device."
    },
    {
      "error": 2371,
      "string": "AIN_SETTLING_INVALID",
      "description": "Specified settling is greater than device max."
    },
    {
      "error": 2372,
      "string": "AIN_SET_TO_BINARY",
      "description": "Analog input system currently set to binary. Some operations, such as AIN_EF, will fail."
    },
    {
      "error": 2373,
      "string": "AIN_NEGATIVE_CHANNEL_INVALID",
      "description": "For channel range 0-13: Negative channel must be even channel number + 1.  For extended channel range 48-127: Negative channel must be channel number + 8."
    },
    {
      "error": 2374,
      "string": "AIN_ALL_ZERO_ONLY",
      "description": "Only a value of zero may be written to this address."
    },
    {
      "error": 2375,
      "string": "AIN_RESOLUTION_INVALID",
      "description": "Selected resolution is invalid. Valid range is 0-5 for T4 and 0-12 for T7."
    },
    {
      "error": 2380,
      "string": "LUA_VM_STATE_NO_CHANGE"
    },
    {
      "error": 2381,
      "string": "LUA_INITIALIZATION_ERROR"
    },
    {
      "error": 2382,
      "string": "LUA_INVALID_NUM_IO_FLOATS",
      "description": "Requested more than the max possible number of IO floats."
    },
    {
      "error": 2383,
      "string": "LUA_IO_FLOATMEM_OVERFLOW",
      "description": "Attempt to read/write beyond the currently allocated IO space."
    },
    {
      "error": 2384,
      "string": "LUA_INVALID_MODE"
    },
    {
      "error": 2385,
      "string": "LUA_IS_RUNNING",
      "description": "A running script is preventing the requested operation."
    },
    {
      "error": 2386,
      "string": "LUA_CODE_BUFFER_EMPTY",
      "description": "Attempted to run a program that is not present."
    },
    {
      "error": 2387,
      "string": "LUA_DEBUG_IS_DISABLED",
      "description": "Attempted to read from debug buffer while debug is disabled."
    },
    {
      "error": 2388,
      "string": "LUA_TABLE_SMALLER_THAN_SPECIFIED_SIZE",
      "description": "The Lua table provided is too small to process the request."
    },
    {
      "error": 2389,
      "string": "LUA_IS_CLOSING",
      "description": "The Lua VM is being closed, usually takes less than 100 ms."
    },
    {
      "error": 2400,
      "string": "SYSTEM_MEMORY_BEREFT",
      "description": "Insufficient memory to perform the requested action."
    },
    {
      "error": 2401,
      "string": "SYSTEM_MEMORY_OVERWRITE",
      "description": "Attempted to overwrite a buffer."
    },
    {
      "error": 2402,
      "string": "SYSTEM_REBOOT_CODE_INVALID",
      "description": "Invalid code supplied when issuing a reboot."
    },
    {
      "error": 2403,
      "string": "SYSTEM_READ_OVERRUN"
    },
    {
      "error": 2404,
      "string": "SYSTEM_INVALID_PIN"
    },
    {
      "error": 2405,
      "string": "SYSTEM_NVRAM_UNAVAILABLE",
      "description": "NVRAM is not available on this device."
    },
    {
      "error": 2406,
      "string": "SYSTEM_NVRAM_INVALID_ADDRESS",
      "description": "The specified NVRAM location is not available on this device."
    },
    {
      "error": 2407,
      "string": "SYSTEM_WAIT_TOO_LONG",
      "description": "The requested wait time is beyond the max allowed."
    },
    {
      "error": 2408,
      "string": "SYSTEM_INCOMPATIBLE_FIRMWARE_VERSION",
      "description": "The firmware image is not compatible with this device."
    },
    {
      "error": 2420,
      "string": "DEVICE_NAME_MUST_BE_ALPHANUM",
      "description": "Attempted to write a device name with invalid characters."
    },
    {
      "error": 2450,
      "string": "POWER_INVALID_SETTING",
      "description": "Unknown value specified."
    },
    {
      "error": 2451,
      "string": "POWER_USB_NEEDS_20MHZ_OR_MORE",
      "description": "Core must be running at 20MHz minimum for USB to operate."
    },
    {
      "error": 2452,
      "string": "POWER_NO_CHANGE"
    },
    {
      "error": 2456,
      "string": "POWER_CAN_NOT_CHANGE_USED_CONNECTION",
      "description": "Can not change the power level of the connected medium."
    },
    {
      "error": 2460,
      "string": "POWER_ANALOG_OFF",
      "description": "Analog input system is powered down."
    },
    {
      "error": 2490,
      "string": "WIFI_NOT_ASSOCIATED",
      "description": "WiFi needs to be connected to a network before the requested action can be performed."
    },
    {
      "error": 2500,
      "string": "HW_DIO_NOT_AVAILABLE"
    },
    {
      "error": 2501,
      "string": "DIO_SET_TO_ANALOG",
      "description": "The digital line addressed is set to analog. Digital operations can not be performed."
    },
    {
      "error": 2508,
      "string": "HW_CNTRA_NOT_AVAILABLE",
      "description": "Counter A is being used by another system."
    },
    {
      "error": 2509,
      "string": "HW_CNTRB_NOT_AVAILABLE",
      "description": "Counter B is being used by another system."
    },
    {
      "error": 2510,
      "string": "HW_CNTRC_NOT_AVAILABLE",
      "description": "Counter C is being used by another system."
    },
    {
      "error": 2511,
      "string": "HW_CNTRD_NOT_AVAILABLE",
      "description": "Counter D is being used by another system."
    },
    {
      "error": 2520,
      "string": "HW_CIO0_NOT_AVAILABLE"
    },
    {
      "error": 2521,
      "string": "HW_CIO1_NOT_AVAILABLE"
    },
    {
      "error": 2523,
      "string": "HW_DAC1_NOT_AVAILABLE"
    },
    {
      "error": 2550,
      "string": "EF_DIO_HAS_NO_TNC_FEATURES"
    },
    {
      "error": 2551,
      "string": "EF_INVALID_TYPE",
      "description": "The selected type is not recognized."
    },
    {
      "error": 2552,
      "string": "EF_TYPE_NOT_SUPPORTED",
      "description": "The selected type is not recognized."
    },
    {
      "error": 2553,
      "string": "EF_PIN_TYPE_MISMATCH",
      "description": "The requested type is not supported on this DIO pin."
    },
    {
      "error": 2554,
      "string": "EF_CLOCK_SOURCE_NOT_ENABLED",
      "description": "Attempted to disable a clock source that is not running."
    },
    {
      "error": 2555,
      "string": "EF_32BIT_DATA_INTO_16BIT_REG",
      "description": "A number greater than 16-bits was written to a clock source configured for 16-bits."
    },
    {
      "error": 2556,
      "string": "EF_SET_TO_32BIT"
    },
    {
      "error": 2557,
      "string": "EF_SMOOTH_VALUE_OUT_OF_RANGE"
    },
    {
      "error": 2558,
      "string": "EF_32BIT_REQUIRES_BOTH_CLOCK0and1",
      "description": "Both Clock_Source 1 and Clock_Source 2 must be disabled before enabling Clock_Source 0."
    },
    {
      "error": 2559,
      "string": "EF_PRESCALE_VALUE_INVALID",
      "description": "Specified prescale value is not supported. Supported values are 1,2,4,8,16,32,64, and 256"
    },
    {
      "error": 2560,
      "string": "EF_PIN_RESERVED",
      "description": "Pin is already used by another system."
    },
    {
      "error": 2561,
      "string": "EF_INVALID_DIO_NUMBER",
      "description": "DIO addresses is not supported on this device."
    },
    {
      "error": 2563,
      "string": "EF_LINE_MUST_BE_LOW_BEFORE_STARTING",
      "description": "The DIO line must be set to output low to ensure proper signal generation."
    },
    {
      "error": 2564,
      "string": "EF_INVALID_DIVISOR"
    },
    {
      "error": 2565,
      "string": "EF_VALUE_GREATER_THAN_PERIOD",
      "description": "Value specified is greater than clock source roll value."
    },
    {
      "error": 2566,
      "string": "EF_CAN_NOT_CHANGE_INDEX_WHILE_ENABLED",
      "description": "The index of a DIO_EF can not be changed while that DIO_EF is enabled."
    },
    {
      "error": 2580,
      "string": "AIN_EF_INVALID_TYPE",
      "description": "The type index specified is not supported."
    },
    {
      "error": 2581,
      "string": "AIN_EF_INVALID_NUM_SAMPLES",
      "description": "Too many samples specified."
    },
    {
      "error": 2582,
      "string": "AIN_EF_CALCULATION_ERROR"
    },
    {
      "error": 2583,
      "string": "AIN_EF_CHANNEL_INACTIVE",
      "description": "AIN_EF channel has not been initialized. To initialize, set the index to a non-zero value."
    },
    {
      "error": 2584,
      "string": "AIN_EF_CALCULATION_OUT_OF_RANGE"
    },
    {
      "error": 2585,
      "string": "AIN_EF_INVALID_CHANNEL"
    },
    {
      "error": 2586,
      "string": "AIN_EF_INVALID_CJC_REGISTER"
    },
    {
      "error": 2587,
      "string": "AIN_EF_STREAM_START_FAILURE",
      "description": "Could not start the data collection stream."
    },
    {
      "error": 2588,
      "string": "AIN_EF_COULD_NOT_FIND_PERIOD",
      "description": "Failed to detect a period to perform calculations over."
    },
    {
      "error": 2589,
      "string": "AIN_EF_MUST_BE_DIFFERENTIAL",
      "description": "The selected AIN must be set to differential."
    },
    {
      "error": 2590,
      "string": "AIN_EF_SCAN_TIME_TOO_LONG",
      "description": "The data collection time (number of samples / scan_rate) is too big. Limit is set to 180 ms as of firmware 1.0170 "
    },
    {
      "error": 2591,
      "string": "AIN_EF_INVALID_EXCITATION_INDEX",
      "description": "The set excitation circuit is not valid, use a different excitation circuit."
    },
    {
      "error": 2600,
      "string": "STREAM_NEED_AT_LEAST_ONE_CHN",
      "description": "The list of channels to stream is empty."
    },
    {
      "error": 2601,
      "string": "STREAM_CLOCK_BASE_NOT_WRITABLE",
      "description": "Stream clock base is read only."
    },
    {
      "error": 2602,
      "string": "STREAM_EXTCLK_AND_GATE_MX"
    },
    {
      "error": 2603,
      "string": "STREAM_IN_SPONTANEOUS_MODE",
      "description": "Stream data can not be read with commands while in spontaneous mode."
    },
    {
      "error": 2604,
      "string": "STREAM_USB_PKT_OVERFLOW"
    },
    {
      "error": 2605,
      "string": "STREAM_IS_ACTIVE",
      "description": "The requested operation can not be performed while stream is running."
    },
    {
      "error": 2606,
      "string": "STREAM_CONFIG_INVALID",
      "description": "Stream resolution can not be greater than 8."
    },
    {
      "error": 2607,
      "string": "STREAM_CHN_LIST_INVALID",
      "description": "The channel list contains an unstreamable address."
    },
    {
      "error": 2608,
      "string": "STREAM_SCAN_RATE_INVALID",
      "description": "The scan rate times the number of channels per scan is too great for this device."
    },
    {
      "error": 2609,
      "string": "STREAM_OUT_BUFF_TOO_BIG"
    },
    {
      "error": 2610,
      "string": "STREAM_OUT_NUM_INVALID",
      "description": "An invalid stream out number was specified."
    },
    {
      "error": 2611,
      "string": "STREAM_DATA_TYPE_INVALID",
      "description": "An unsupported data types was specified."
    },
    {
      "error": 2612,
      "string": "STREAM_TARGET_CONFIG_INVALID",
      "description": "Stream must be set to either spontaneous or command-response."
    },
    {
      "error": 2613,
      "string": "STREAM_OUT_BUFF_FULL",
      "description": "Attempted to write more data than the buffer can hold. Extra data was discarded."
    },
    {
      "error": 2614,
      "string": "STREAM_OUT_TARGET_INVALID",
      "description": "Specified address can not be a stream out target."
    },
    {
      "error": 2615,
      "string": "STREAM_BUFF_SIZE_INVALID",
      "description": "Specified buffer was either too large or not a power of 2."
    },
    {
      "error": 2616,
      "string": "STREAM_OUT_BUFF_LOOP_OVERWRITE"
    },
    {
      "error": 2617,
      "string": "STREAM_OUT_BUFF_DNE",
      "description": "The buffer size must be set before data can be written to it."
    },
    {
      "error": 2618,
      "string": "STREAM_SAMPLES_PER_PKT_INVALID",
      "description": "The specified number of samples per packet is too large."
    },
    {
      "error": 2619,
      "string": "STREAM_BUFFER_DNE",
      "description": ""
    },
    {
      "error": 2620,
      "string": "STREAM_NOT_RUNNING",
      "description": ""
    },
    {
      "error": 2621,
      "string": "STREAM_SETTLING_INVALID",
      "description": "Specified settling time is greater than the max possible."
    },
    {
      "error": 2622,
      "string": "STREAM_OUT_LOOP_TOO_BIG",
      "description": "Loop size to big for the current buffer size."
    },
    {
      "error": 2623,
      "string": "STREAM_OUT_DATA_TRGT_MISSMATCH",
      "description": ""
    },
    {
      "error": 2624,
      "string": "STREAM_INVALID_DIVISOR",
      "description": "Selected divisor can not be used."
    },
    {
      "error": 2625,
      "string": "STREAM_CHN_CAN_NOT_BE_STREAMED",
      "description": "The requested channel can not be streamed."
    },
    {
      "error": 2626,
      "string": "STREAM_OUT_DAC_IN_USE",
      "description": "The high resolution converter can not be used while stream out is used to update a DAC."
    },
    {
      "error": 2627,
      "string": "STREAM_OUT_NEEDS_TO_BE_ENABLED",
      "description": "The STREAM_OUT#_ENABLE register must be set to 1 before writing STREAM_OUT#_LOOP_NUM_VALUES, STREAM_OUT#_SET_LOOP, or any of the STREAM_OUT#_BUFFER_ registers."
    },
    {
      "error": 2670,
      "string": "SWDT_ROLLT_INVALID"
    },
    {
      "error": 2671,
      "string": "SWDT_ENABLED",
      "description": "The watchdog must be disabled before the requested operation can be performed."
    },
    {
      "error": 2672,
      "string": "SWDT_DIO_SETTINGS_INVALID",
      "description": ""
    },
    {
      "error": 2673,
      "string": "SWDT_DAC0_SETTINGS_INVALID",
      "description": ""
    },
    {
      "error": 2674,
      "string": "SWDT_DAC1_SETTINGS_INVALID",
      "description": ""
    },
    {
      "error": 2690,
      "string": "RTC_TIME_INVALID"
    },
    {
      "error": 2691,
      "string": "RTC_SNTP_TIME_INVALID"
    },
    {
      "error": 2692,
      "string": "RTC_NOT_PRESENT",
      "description": "The requested operation can not be performed on units without a real-time-clock."
    },
    {
      "error": 2700,
      "string": "SPI_MODE_INVALID",
      "description": "Valid modes are 0-3."
    },
    {
      "error": 2701,
      "string": "SPI_NO_DATA_AVAILABLE"
    },
    {
      "error": 2702,
      "string": "SPI_CS_PIN_INVALID",
      "description": "Attempted to set an invalid pin."
    },
    {
      "error": 2703,
      "string": "SPI_CLK_PIN_INVALID",
      "description": "Attempted to set an invalid pin."
    },
    {
      "error": 2704,
      "string": "SPI_MISO_PIN_INVALID",
      "description": "Attempted to set an invalid pin."
    },
    {
      "error": 2705,
      "string": "SPI_MOSI_PIN_INVALID",
      "description": "Attempted to set an invalid pin."
    },
    {
      "error": 2706,
      "string": "SPI_CS_PIN_RESERVED",
      "description": "Selected pin is not available."
    },
    {
      "error": 2707,
      "string": "SPI_CLK_PIN_RESERVED",
      "description": "Selected pin is not available."
    },
    {
      "error": 2708,
      "string": "SPI_MISO_PIN_RESERVED",
      "description": "Selected pin is not available."
    },
    {
      "error": 2709,
      "string": "SPI_MOSI_PIN_RESERVED",
      "description": "Selected pin is not available."
    },
    {
      "error": 2710,
      "string": "SPI_TRANSFER_SIZE_TOO_LARGE"
    },
    {
      "error": 2720,
      "string": "I2C_BUS_BUSY",
      "description": "One or both of the I2C lines are held low. Check hardware and reset the bus."
    },
    {
      "error": 2721,
      "string": "I2C_NO_DATA_AVAILABLE",
      "description": "Attempted to read from an empty buffer."
    },
    {
      "error": 2722,
      "string": "I2C_SDA_PIN_INVALID",
      "description": "Attempted to set an invalid pin."
    },
    {
      "error": 2723,
      "string": "I2C_SCL_PIN_INVALID",
      "description": "Attempted to set an invalid pin."
    },
    {
      "error": 2724,
      "string": "I2C_SDA_PIN_RESERVED",
      "description": "Selected pin is not available."
    },
    {
      "error": 2725,
      "string": "I2C_SCL_PIN_RESERVED",
      "description": "Selected pin is not available."
    },
    {
      "error": 2726,
      "string": "I2C_TX_SIZE_TOO_LARGE"
    },
    {
      "error": 2727,
      "string": "I2C_RX_SIZE_TOO_LARGE"
    },
    {
      "error": 2728,
      "string": "I2C_BUFFER_OVERRUN"
    },
    {
      "error": 2729,
      "string": "I2C_SPEED_TOO_LOW",
      "description": "The throttle setting is too low, watchdog may fire. Minimum value = 46000"
    },
    {
      "error": 2740,
      "string": "SBUS_COMM_TIME_OUT",
      "description": "Slave device did not respond."
    },
    {
      "error": 2741,
      "string": "SBUS_NO_ACK",
      "description": "Slave device did not acknowledge the data transfer."
    },
    {
      "error": 2742,
      "string": "SBUS_CUSTOM_MODE_INVALID"
    },
    {
      "error": 2743,
      "string": "SBUS_INVALID_DIO_NUM",
      "description": "Attempted to set an invalid pin."
    },
    {
      "error": 2744,
      "string": "SBUS_BACKGROUND_SERVICE_ON",
      "description": "Command-response reads can not be used while the background service is running."
    },
    {
      "error": 2745,
      "string": "SBUS_CHECKSUM_ERROR",
      "description": "SHT communication checksum failed."
    },
    {
      "error": 2760,
      "string": "TDAC_SDA_SCL_INVALID",
      "description": "SCL must be even and SDA must be SCL+1."
    },
    {
      "error": 2761,
      "string": "TDAC_SCL_INVALID",
      "description": "Attempted to set an invalid pin."
    },
    {
      "error": 2762,
      "string": "TDAC_INVALID_CHANNEL",
      "description": "Specified channel not supported on this device."
    },
    {
      "error": 2763,
      "string": "TDAC_CAL_READ_FAILURE",
      "description": "Failed to read TDAC calibration."
    },
    {
      "error": 2764,
      "string": "TDAC_NOT_FOUND",
      "description": "The TDAC did not respond to communication attempts."
    },
    {
      "error": 2770,
      "string": "ONEWIRE_UNSUPPORETD_FUNCTION",
      "description": "Unknown function specified."
    },
    {
      "error": 2771,
      "string": "ONEWIRE_NO_PRESENCE_PULSE",
      "description": "Unable to detect any devices on the bus."
    },
    {
      "error": 2780,
      "string": "ASYNCH_NUM_DATA_BITS_INVALID",
      "description": "The specified number of data bits is not supported."
    },
    {
      "error": 2781,
      "string": "ASYNCH_NUM_TO_WRITE_INVALID",
      "description": "The number of bytes to send is invalid."
    },
    {
      "error": 2782,
      "string": "ASYNCH_READ_BUFF_SIZE_INVALID",
      "description": "The specified buffer size is invalid. Max is 2048."
    },
    {
      "error": 2783,
      "string": "ASYNCH_BAUD_TOO_HIGH",
      "description": "Baud rate too high for this device."
    },
    {
      "error": 2784,
      "string": "ASYNCH_IS_ENABLED",
      "description": "Specified operation can not be performed while enabled."
    },
    {
      "error": 2785,
      "string": "ASYNCH_IS_NOT_ENABLED",
      "description": "Specified operation can not be performed while disabled."
    },
    {
      "error": 2786,
      "string": "ASYNCH_TX_BUFFER_FULL",
      "description": "Transmit buffer is full."
    },
    {
      "error": 2787,
      "string": "ASYNCH_TX_TIMEOUT",
      "description": "Transmission timed out. Do not write more than 100 ms at a time."
    },
    {
      "error": 2788,
      "string": "ASYNCH_BAUD_ZERO",
      "description": "Baud rate is zero. Please specify a baud rate."
    },
    {
      "error": 2801,
      "string": "FILE_IO_DISK_ERROR",
      "description": "A hard error occurred in the low level disk I/O layer."
    },
    {
      "error": 2802,
      "string": "FILE_IO_INTERNAL_ERROR",
      "description": "Assertion failed."
    },
    {
      "error": 2803,
      "string": "FILE_IO_NOT_READY",
      "description": "The physical drive cannot work."
    },
    {
      "error": 2804,
      "string": "FILE_IO_NO_FILE",
      "description": "Could not find the file."
    },
    {
      "error": 2805,
      "string": "FILE_IO_NO_PATH",
      "description": "Could not find the path."
    },
    {
      "error": 2806,
      "string": "FILE_IO_INVALID_NAME",
      "description": "The path name format is invalid."
    },
    {
      "error": 2807,
      "string": "FILE_IO_DENIED",
      "description": "Access denied due to prohibited access or directory full."
    },
    {
      "error": 2808,
      "string": "FILE_IO_EXIST",
      "description": "Access denied due to prohibited access."
    },
    {
      "error": 2809,
      "string": "FILE_IO_INVALID_OBJECT",
      "description": "The file/directory object is invalid. Under the context of getting performing a \"ls\" command 2809 indicates that there are no more files."
    },
    {
      "error": 2810,
      "string": "FILE_IO_WRITE_PROTECTED",
      "description": "The physical drive is write protected."
    },
    {
      "error": 2811,
      "string": "FILE_IO_INVALID_DRIVE",
      "description": "The logical drive number is invalid."
    },
    {
      "error": 2812,
      "string": "FILE_IO_NOT_ENABLED",
      "description": "The volume has no work area."
    },
    {
      "error": 2813,
      "string": "FILE_IO_NO_FILESYSTEM",
      "description": "There is no valid FAT12, FAT16, or FAT32 volume."
    },
    {
      "error": 2814,
      "string": "FILE_IO_MKFS_ABORTED",
      "description": "The f_mkfs() aborted due to any parameter error."
    },
    {
      "error": 2815,
      "string": "FILE_IO_TIMEOUT",
      "description": "Could not get a grant to access the volume within defined period."
    },
    {
      "error": 2816,
      "string": "FILE_IO_LOCKED",
      "description": "The operation is rejected according to the file sharing policy."
    },
    {
      "error": 2817,
      "string": "FILE_IO_NOT_ENOUGH_CORE",
      "description": "LFN working buffer could not be allocated."
    },
    {
      "error": 2818,
      "string": "FILE_IO_TOO_MANY_OPEN_FILES",
      "description": "Number of open files greater than allowable limit (files > _FS_SHARE)."
    },
    {
      "error": 2819,
      "string": "FILE_IO_INVALID_PARAMETER",
      "description": "Given parameter is invalid."
    },
    {
      "error": 2900,
      "string": "WIFI_ASSOCIATED"
    },
    {
      "error": 2901,
      "string": "WIFI_ASSOCIATING"
    },
    {
      "error": 2902,
      "string": "WIFI_ASSOCIATION_FAILED"
    },
    {
      "error": 2903,
      "string": "WIFI_UNPOWERED"
    },
    {
      "error": 2904,
      "string": "WIFI_BOOTING_UP"
    },
    {
      "error": 2905,
      "string": "WIFI_COULD_NOT_START"
    },
    {
      "error": 2906,
      "string": "WIFI_APPLYING_SETTINGS"
    },
    {
      "error": 2907,
      "string": "WIFI_DHCP_STARTED"
    },
    {
      "error": 2909,
      "string": "WIFI_OTHER"
    },
    {
      "error": 2920,
      "string": "WIFI_UPDATE_CONFIG"
    },
    {
      "error": 2921,
      "string": "WIFI_UPDATE_IN_PROG"
    },
    {
      "error": 2923,
      "string": "WIFI_UPDATE_REBOOT"
    },
    {
      "error": 2924,
      "string": "WIFI_UPDATE_SUCCESS"
    },
    {
      "error": 2925,
      "string": "WIFI_UPDATE_FAILED"
    },
    {
      "error": 2940,
      "string": "STREAM_AUTO_RECOVER_ACTIVE"
    },
    {
      "error": 2941,
      "string": "STREAM_AUTO_RECOVER_END"
    },
    {
      "error": 2942,
      "string": "STREAM_SCAN_OVERLAP",
      "description": "A new scan started before the previous scan finished. Generally occurs because ScanRate > MaxSampleRate/NumChannels.  Note that MaxSampleRate is impacted by Range, ResolutionIndex, and Settling. Try adding commands right before StreamStart to set AIN_ALL_RANGE=10, STREAM_RESOLUTION_INDEX=0, and STREAM_SETTLING_US=0."
    },
    {
      "error": 2943,
      "string": "STREAM_AUTO_RECOVER_END_OVERFLOW"
    },
    {
      "error": 2944,
      "string": "STREAM_BURST_COMPLETE"
    },
    {
      "error": 2945,
      "string": "STREAM_BUFFER_FULL",
      "description": "Stream buffer filled up while autorecover was disabled. Stream stopped."
    },
    {
      "error": 2950,
      "string": "SELFDIAG_MAIN_OSC_FAIL"
    },
    {
      "error": 2960,
      "string": "FILE_IO_NOT_FOUND",
      "description": "The requested file was not found."
    },
    {
      "error": 2961,
      "string": "FILE_IO_NO_DISK",
      "description": "No SD card present or SC card could not be initialized."
    },
    {
      "error": 2962,
      "string": "FILE_IO_INVALID_NAME",
      "description": "The file name is invalid."
    },
    {
      "error": 2963,
      "string": "FILE_IO_FILE_NOT_OPEN",
      "description": "An open file is required to perform the requested operation."
    },
    {
      "error": 2964,
      "string": "FILE_IO_TOO_MANY_OPEN",
      "description": "There are too many files open."
    },
    {
      "error": 2965,
      "string": "FILE_IO_SD_CARD_NOT_FOUND",
      "description": "Failed to mount the SD card. Card may be bad or incompatible."
    },
    {
      "error": 2966,
      "string": "FILE_IO_END_OF_CWD",
      "description": "There are no more files in the current working directory."
    }
  ],

  "comments": [
    "2013.01.28.A:  Removed plurals on port and all digital register names.",
    "2013.01.30.A:  Added this comments section at bottom.  Changed neg=>negative, res=>resolution, set=>settling.  Changed dio_all to just dio.",
    "2013.02.01.A:  Added DF constants to beta section.",
    "2013.02.07.A:  Added WiFi DHCP constants.  Added DSF read registers to beta section.",
    "2013.02.11.A:  Changing some LJM error code names.",
    "2013.02.15.A:  Changed readwrite values: RO => R and WO => W.  Added TDAC registers.",
    "2013.02.18.A:  Moved TDAC registers to beta section.  Changed DAC_SCL to TDAC_SCL.",
    "2013.02.19.A:  Added LJME_ERROR_RETRIEVAL_FAILURE.",
    "2013.02.20.A:  Fixed tags for DSF.  Changed names for IO_CONFIG stuff.",
    "2013.02.21.A:  Added HARDWARE_INSTALLED to beta section.",
    "2013.02.26.A:  Added BATTERY_INSTALL_DATE to beta section.",
    "2013.02.27.A:  Changed DSF to DF in beta section.",
    "2013.03.20.A:  Added HUMIDITY_CAL_BAT_OFFSET to beta section.",
    "2013.03.22.A:  Changed DF to EF in beta section.",
    "2013.03.29.A:  Moved WIFI SSID_DEFAULT and PASS_DEFAULT to make room for 64 character passphrases. Added WIFI_UPDATE and WIFI_UPDATE_STATUS.",
    "2013.03.30.A:  Added O-stream registers.",
    "2013.04.02.A:  Edited O-stream register names.",
    "2013.04.10.A:  Name changes to AIN#(0:254)_NEGATIVE, AIN#(0:254)_RESOLUTION, ETHERNET_DHCP, ETHERNET_DHCP_DEFAULT, WIFI_DHCP, WIFI_DHCP_DEFAULT, WIFI_PASS_DEFAULT, DEVICE_NAME, WATCHDOG_TIMEOUT_DEFAULT, and WATCHDOG_STARTUP_DELAY_DEFAULT.",
    "2013.04.11.A:  Added 42500, 7000, 7002, 7004 to the beta section (Analog EF).",
    "2013.04.16.A:  Added WIFI_START_ADHOC.",
    "2013.04.17.A:  Changed type of AIN_EF_RESULTS_DC_OFFSET, AIN_EF_RESULTS_P2P, and AIN_EF_RESULTS_PERIOD from FLOAT to FLOAT32.",
    "2013.04.26.A:  Changed the spacing of EF registers.",
    "2013.05.22.A:  Fixed WIFI_SCAN_START address.",
    "2013.05.23.A:  Added current source cal value registers.",
    "2013.05.26.A:  Added/Updated firmware error and status codes. 2900-2999 are status codes.",
    "2013.05.30.A:  Changed WIFI_APPLY_SETTINGS to write-only.",
    "2013.06.03.A:  Added registers for global AIN settings referred to as AIN_ALL_.... Moved AIN configuration registers to make room for changing settling to a float32.",
    "2013.06.04.A:  Added registers for I2C.",
    "2013.06.06.A:  Fixed typos in I2C section found by jslint.com.  Started adding displayname and description fields.",
    "2013.06.07.A:  Synching the LJM error codes.",
    "2013.06.12.A:  Removed port mask registers.  Changed names of some stream registers.",
    "2013.06.12.B:  Removed the empty altnames",
    "2013.06.13.A:  Added AF frequency and num-samples registers. Moved TDAC reads",
    "2013.06.14.A:  Removed spaces from register names",
    "2013.06.17.A:  Some EF register names were changed due to a document conflict. Used remote version and changed back to proper names.",
    "2013.06.18.A:  More descriptions added.",
    "2013.06.18.A:  Made descriptions a string rather than a list.",
    "2013.06.21.A:  Changed some watchdog descriptions.",
    "2013.06.22.A:  Added error 2942.",
    "2013.06.24.A:  Added error 2358.  More descriptions added.",
    "2013.06.26.A:  Changed some upgrade errorcodes to update.",
    "2013.06.28.A:  Changed STREAM_BUFFER_SIZE_INDEX to STREAM_BUFFER_SIZE_BYTES.",
    "2013.07.01.A:  Added max firmware version to stream_stop",
    "2013.07.05.A:  Added AIN_ALL_EF_TYPE and CORE_TIMER. Changed AIN_ALL_SETTLING to AIN_ALL_SETTLING_US.",
    "2013.07.09.A:  Added SYSTEM_REBOOT, LJME_INVALID_VALUE.",
    "2013.07.09.A:  STREAM_AUTO_RECOVER_END_OVERFLOW",
    "2013.07.22.A:  LJME_SYNCHRONIZATION_TIMEOUT",
    "2013.07.23.A:  Changed STREAM_START to STREAM_ENABLE and removed STREAM_STOP.",
    "2013.07.24.A:  LJME_OLD_FIRMWARE.",
    "2013.07.31.A:  LJME_USING_DEFAULT_CALIBRATION.",
    "2013.08.02.A:  Added clock count registers.",
    "2013.08.20.A:  Changed type of I2C_WRITE and I2C_READ to BYTE.",
    "2013.08.21.A:  Changes to I2C, SHT, and TDAC registers ... still in beta section.",
    "2013.08.24.A:  Updated I2C to use the GO register",
    "2013.08.30.A:  Added LJME_CONFIG_FILE_NOT_FOUND",
    "2013.09.05.A:  Moved some entries from registers_beta to registers:  WIFI_RSSI, WIFI_FIRMWARE_UPDATE_STATUS, AIN#(0:254)_SETTLING_US",
    "2013.09.10.A:  Added comments to the I2C registers.",
    "2013.10.15.A:  Added digital EF read with reset register.",
    "2013.10.16.A:  Various descriptions added.",
    "2013.10.23.A:  Changed SPI registers. Moved HARDWARE_INSTALLED to release.",
    "2013.10.24.A:  Moved DIO_EF to release.",
    "2013.10.25.A:  Moved various to release.",
    "2013.11.08.A:  SPI description edits.",
    "2013.11.12.A:  Added FIO-EIO and EIO-CIO registers to beta section.",
    "2013.11.18.A:  Added External flash registers.",
    "2013.11.19.A:  Description edits.",
    "2013.11.29.A:  Changed SPI DATA types to BYTE.",
    "2013.12.06.A:  Changes to watchdog registers.",
    "2013.12.09.A:  Description edits.  New internal temp sensor registers in beta section.",
    "2013.12.10.A:  Changed SPI_SPEED to SPI_SPEED_THROTTLE.  Moved SPI to release.",
    "2013.12.12.A:  Added Lua Regs.",
    "2013.12.14.A:  Split the stream out buffer write register into 3 data type specific registers. Added error codes.",
    "2013.12.19.A:  Version number at top was behind numbers in these comments.",
    "2013.12.27.A:  Fix to the AIN_BIN register array.",
    "2013.12.31.A:  Added WAIT and AEF registers. AIN_ALL description edits. Changed AIN#(0:254)_BIN to AIN#(0:254)_BINARY.",
    "2014.01.01.A:  Changed data type of AIN_EF mode and CONFIG_A to uint 32.",
    "2014.01.02.A:  Adding register-constants to DIO_INHIBIT, STREAM_ENABLE, WIFI_STATUS, and WIFI_FIRMWARE_UPDATE_STATUS.",
    "2014.01.03.A:  Changed DIO#(0:22)_EF_VALUE_# to DIO#(0:22)_EF_CONFIG_#, removed constants from DIO_INHIBIT and STREAM_ENABLE.",
    "2014.01.09.A:  Updated AIN EF registers.",
    "2014.01.20.A:  Changed TEMPERATURE_AMBIENT_K to TEMPERATURE_APPROXIMATE_AMBIENT_K, updated description, updated T7 datasheet AIN 14 desc.",
    "2014.01.23.A:  Changed TEMPERATURE_APPROXIMATE_AMBIENT_K to TEMPERATURE_AIR_K.",
    "2014.01.27.A:  Added SBUS_ALL_POWER_DIONUM, changed SBUS data & clock defaults, and updated SBUS descriptions.",
    "2014.01.28.A:  Updated TEST registers descriptions and default values.",
    "2014.01.29.A:  Added error codes.",
    "2014.01.30.A:  Added CORE tag to some often used registers.",
    "2014.02.02.A:  Added 1-wire registers.",
    "2014.02.10.A:  Changed AIN#(0:254)_EF_INDEX to AIN#(0:254)_EF_INDEX in beta section.  Changed DIO#(0:22)_EF_INDEX to DIO#(0:22)_EF_INDEX, but put TYPE in altnames.",
    "2014.02.10.B:  Added Lua register for startup config and script saving.",
    "2014.02.11.A:  Edits to watchdog and sbus descriptions.",
    "2014.02.12.A:  SPI description edits.",
    "2014.02.14.A:  Added file IO registers.",
    "2014.02.19.A:  Edit to SPI mode description.",
    "2014.02.20.A:  Added stream register for external clock divisor. Changed register 4014 name.",
    "2014.02.20.B:  Changed all references to external flash to INTFLASH, and INTERNAL_ Therein adopting name scheme used by cell phones, cameras etc.",
    "2014.02.27.A:  IO Config description edits.",
    "2014.02.28.A:  Added stream register descriptions.",
    "2014.03.12.A:  Added ASYNCH registers.",
    "2014.03.14.A:  Added error code descriptions.",
    "2014.03.14.A:  Added Lua register descriptions and changed Lua types. Types were changed before, but those changes were lost.",
    "2014.03.30.A:  Changed Lua starupt configuration registers to DEFAULT.",
    "2014.04.07.A:  Added SPI_GO register.",
    "2014.04.09.A:  SPI, I2C, and ONEWIRE _DATA_WRITE and _DATA_READ changed to _DATA_TX and _DATA_RX.",
    "2014.04.24.A:  Added display names and other changes back in that were overwritten on April 9th.",
    "2014.05.15.A:  Added ETHERNET_APPLY_SETTINGS register so T7 can be configured over Ethernet connection w/o rebooting.",
    "2014.05.21.A:  Added STREAM_OUT#(0:3) register, and set as UINT16, and readable in FW 1.0103 or greater, also corrected (0:4) to (0:3), because there are only 4 stream out buffers, not 5.",
    "2014.05.23.A:  Added error code 2373, and description.",
    "2014.06.13.A:  Adding status codes back into description field until automated tools are updated.",
    "2014.06.17.A:  Added additional description to STREAM_OUT#(0:3)_SET_LOOP.",
    "2014.06.17.B:  Added additional description STREAM_SCANLIST_ADDRESS#(0:127).",
    "2014.06.24.A:  Added UART registers and descriptions.",
    "2014.06.27.A:  Changed UART data registers to UINT16.",
    "2014.07.16.A:  Removed wrong pieces of descriptions for AIN#(0:254)_RANGE, AIN#(0:254)_NEGATIVE_CH, AIN#(0:254)_RESOLUTION_INDEX, and AIN#(0:254)_SETTLING_US. --If all channels are the same, this reads the correct value, but otherwise this reads -9999.0-- --If all channels are the same, this reads the correct value, but otherwise this reads 0xFFFF-- Also changed name of AIN_ALL_EF_TYPE to AIN_ALL_EF_INDEX, added AIN_ALL_EF_TYPE as an altname.",
    "2014.07.17.A:  Added additional description to AIN#(0:254)_EF_INDEX, and AIN_ALL_EF_INDEX.",
    "2014.07.22.A:  Added additional description to LJTDAC, and SBUS regs.  Clarified that LJTick-DAC is an accessory device, and also clarified that 'Even #' refers to register 'TDAC#', not the Modbus address of a register.",
    "2014.07.24.A:  Changed streamable status of TEMPERATURE_AIR_K and TEMPERATURE_DEVICE_K to false.",
    "2014.09.22.A:  Updated UART error codes.",
    "2014.09.28.A:  Updated I2C throttle description.",
    "2014.10.21.A:  Added RTC registers, also updated onewire tag to be ONEWIRE instead of I2C. Also added a bit of descriptions to onewire regs",
    "2014.10.21.B:  Updated RTC register names",
    "2014.10.21.C:  Removed RTC_TIME_MS since it didn't work anymore, and the functionality is covered by CORE_TIMER",
    "2014.11.12.A:  Updated File IO registers.",
    "2014.11.17.A:  Added some missing error codes.",
    "2014.11.26.A:  Added SHT Csum error code. Added RTC SNTP update register. Added error codes 2801 through 2819 for FILE_IO errors.",
    "2014.12.02.A:  Updated 60010 HARDWARE_INSTALLED register to include full bitmask information.",
    "2014.12.02.B:  Updated 9000 AIN#(0:254)_EF_INDEX description to include AutoRMS and RTDs",
    "2014.12.03.A:  Updated 9000 AIN#(0:254)_EF_INDEX description, AutoRMS is now called FlexRMS",
    "2014.12.06.A:  Updated AIN_EF address ranges.",
    "2014.12.13.A:  Added stream clock source register.",
    "2014.12.30.A:  Added SBUS_ALL_CLOCK_SPEED register.",
    "2015.01.15.A:  Added FW max 1.2000 to Digit-TL/TLH address 22840, 22841, 22842, 22020, 22021, 22022, 22040. Added DGT_CHANGE_LOG_INTERVAL_INDEX, DGT_LOG_INTERVAL_INDEX_DATASET, DGT_CHANGE_LOG_ITEMS, DGT_LOG_ITEMS_DATASET.",
    "2015.01.19.A:  Removed Digit-TL/TLH Modbus addresses 22840, 22841, 22842, 22020, 22021, 22022, 22040, so parsing for fwmax token not needed.",
    "2015.01.20.A:  Changed Digit-TL/TLH registers 22049, 22053, 22054, 22055 to read-only to reflect firmware 1.21 behavior change.",
    "2015.01.27.A:  Changes typo for error code 1300 and others with 'received''.",
    "2015.02.23.A:  Added LJME_U3_CANNOT_BE_OPENED_BY_LJM, LJME_U6_CANNOT_BE_OPENED_BY_LJM, and LJME_UE9_CANNOT_BE_OPENED_BY_LJM.",
    "2015.02.26.A:  Added LJME_DEBUG_LOG_FILE_NOT_OPEN.",
    "2015.03.18.A:  Changed LUA_IO_READ to IO_RAM. Changed fwmin: of FILE_IO_DIR_CHANGE to 1.0156",
    "2015.03.20.A:  STREAM_OUT#(0:3)_BUFFER_SIZE => STREAM_OUT#(0:3)_BUFFER_NUM_BYTES, STREAM_OUT#(0:3)_LOOP_SIZE => STREAM_OUT#(0:3)_LOOP_NUM_VALUES",
    "2015.03.21.A:  Added Modbus FILE_IO error codes 2960-2964",
    "2015.03.22.A:  Added some error descriptions.",
    "2015.03.26.A:  STREAM_OUT#(0:3)_BUFFER_NUM_BYTES changed to STREAM_OUT#(0:3)_BUFFER_ALLOCATE_NUM_BYTES and added to the description that it must be a power of 2.",
    "2015.03.31.A:  Updated LJM error descriptions.",
    "2015.04.07.A:  Added USER_RAM_FIFO registers and error codes.",
    "2015.04.07.B:  Added descriptions to USER_RAM_FIFO registers, added USER_RAM#(0:39)_F32, USER_RAM#(0:9)_I32, USER_RAM#(0:39)_U32, and USER_RAM#(0:19)_U16.",
    "2015.04.09.A:  Updated messages for errorcodes 2508-2511 (cntr not available) to use letters A-D rather than numbers 0-3.",
    "2015.04.10.A:  Changed STREAM_ENABLE's readwrite from W to RW.",
    "2015.04.15.A:  Added SNTP interval register. Updated FIFO registers.",
    "2015.04.16.A:  Added FIFO error codes.",
    "2015.04.16.B:  Changed name of USER_RAM_FIFO#(0:3)_FLUSH to USER_RAM_FIFO#(0:3)_EMPTY, added fwmin field.",
    "2015:04.16.C:  Added many FILE_IO descriptions.  Updated some FILE_IO names. Added FILE_IO_LUA_SWITCH_FILE.",
    "2015.04.17.A:  Added description for FILE_IO_DIR_CURRENT, updated description of FILE_IO_DISK_FORMAT_INDEX.",
    "2015.04.17.B:  Updated description of USER_RAM_FIFO#(0:3)_DATA registers.",
    "2015.04.17.C:  Moved ASYNCH, USER_RAM, FILE_IO, RTC, STREAM_OUT, AIN_EF, ONEWIRE, LUA, and a few CONFIG registers out of beta.",
    "2015.04.22.A:  Added error code for RTC not installed. Removed the stream_data_type register. Added error description for STREAM_SCAN_OVERLAP.",
    "2015.04.27.A:  Added descriptions for CURRENT_SOURCE_10UA_CAL_VALUE and CURRENT_SOURCE_200UA_CAL_VALUE, moved FIO_EIO_STATE, EIO_CIO_STATE out of beta.",
    "2015.04.28.A:  Updated description of SNTP_UPDATE_INTERVAL, and RTC_SET_TIME_SNTP.",
    "2015.05.04.A:  Added isBuffer attribute to many registers.",
    "2015.05.06.A:  Removed U3, U6, and UE9 as device types.",
    "2015.05.14.A:  Added LJME_TEMPERATURE_OUT_OF_RANGE and LJME_VOLTAGE_OUT_OF_RANGE.",
    "2015.05.29.A:  Altered descriptions of STREAM_CLOCK_SOURCE and STREAM_EXTERNAL_CLOCK_DIVISOR.",
    "2015.06.16.A:  Addition of CIO_MIO_STATE/BATTERY_RAM#(0:16)/FILE_IO_SD_CARD_NOT_FOUND. Altered descriptions of EIO_CIO_STATE/AIN_ALL_SETTLING_US/AIN#(0:254)_BINARY. I2C_DATA_TX/I2C_DATA_RX/ASYNCH_DATA_TX/ASYNCH_DATA_RX/ONEWIRE_DATA_TX/ONEWIRE_DATA_RX/LUA_SOURCE_WRITE/LUA_DEBUG_DATA readwrite fixes. Changed FILE_IO_LUA_SWITCH_FILE to address 60662.",
    "2015.07.10.A:  Typo corrections.",
    "2015.08.17.A:  Added STREAM_TRIGGER_INDEX register. Changed LJME_COULD_NOT_CLAIM_DEVICE to LJME_DEVICE_CURRENTLY_CLAIMED_BY_ANOTHER_PROCESS.",
    "2015.10.04.A:  Clarifications in some descriptions.",
    "2015.12.02.A:  Added LJME_FUNCTION_DOES_NOT_SUPPORT_THIS_TYPE. Changed LJME_INVALID_VALUE_TYPE to LJME_UNKNOWN_VALUE_TYPE.",
    "2016.02.10.A:  Changed internal flash read and write registers to buffered.",
    "2016.03.01.A:  Fixed the duplicate error code 2964. The second should have been 2965.",
    "2016.03.09.A:  Updated description of the AIN_ALL_NEGATIVE_CH register.",
    "2016.03.15.A:  Updated description of the HARDWARE_INSTALLED register, changing uSD to microSD.",
    "2016.03.15.B:  Spelling corrections.",
    "2016.05.04.A:  BATTERY_RAM typo fix.",
    "2016.05.05.A:  STREAM_DATA_CAPTURE_16 access fix.",
    "2016.05.16.A:  Updated links to use https.",
    "2016.05.25.A:  Fixed an incorrect number in the description of the stream settling description.",
    "2016.05.31.A:  Added error codes: LUA_IS_CLOSING and LJME_INVALID_INFO_HANDLE.",
    "2016.06.30.A:  Added error code: I2C_SPEED_TOO_SLOW.",
    "2016.08.09.A:  Added initial T4 support.  Re-added several deleted comments.",
    "2016.09.01.A:  Added a note to the description of WATCHDOG_STRICT_CLEAR.",
    "2016.09.07.A:  Added DIO_ANALOG_ENABLE.",
    "2016.09.12.A:  Added T4 to SPI registers.",
    "2016.09.14.A:  Added Description to SPI_MODE register. Changed LJME_U3_CANNOT_BE_OPENED_BY_LJM to LJME_U3_NOT_SUPPORTED_BY_LJM, LJME_U6_CANNOT_BE_OPENED_BY_LJM to LJME_U6_NOT_SUPPORTED_BY_LJM, and LJME_UE9_CANNOT_BE_OPENED_BY_LJM to LJME_UE9_NOT_SUPPORTED_BY_LJM.",
    "2016.09.16.A:  Added SPC_FREQUENCY_OUT register.",
    "2016.10.25.A:  LJME_USING_DEFAULT_CALIBRATION description update and Windows line endings.",
    "2016.12.22.A:  Added DIO_PULLUP_DISABLE and STREAM_START_TIME_STAMP, fixed DIO_ANALOG_ENABLE address, and various other description updates.",
    "2017.01.30.A:  Added T4 to SYSTEM_REBOOT, TEMPERATURE_AIR_K, TEMPERATURE_DEVICE_K, SNTP_UPDATE_INTERVAL, RTC_TIME_S, RTC_SET_TIME_S, RTC_SET_TIME_SNTP, and RTC_TIME_CALENDAR. Added errors SYSTEM_INCOMPATIBLE_FIRMWARE_VERSION and DIO_SET_TO_ANALOG.",
    "2017.03.09.A   Added LJME_NO_DEVICES_FOUND.",
    "2017.04.28.A   Fixed IO_CONFIG_CURRENT_CRC32 address. Added IO_CONFIG_CHECK_FOR_DEFAULT and CLEANSE. Added errors LJME_AUTO_IPS_FILE_NOT_FOUND and LJME_AUTO_IPS_FILE_INVALID.",
    "2017.06.21.A   Added SYSTEM_COUNTER_10KHZ, and updated RTC_TIME_S register.",
    "2017.07.20.A   Changed SPC_FREQUENCY_OUT to SPC_FREQUENCY_OUT_ENABLE. Added error #2388.",
    "2018.08.03.A   Added DAC1_FREQUENCY_OUT_ENABLE register. Added error code 2523.",
    "2017.08.15.A   Added T4 to USER_RAM registers. USER_RAM#(0:39)_F32, USER_RAM#(0:9)_I32, USER_RAM#(0:39)_U32, USER_RAM#(0:19)_U16, USER_RAM_FIFO#(0:3)_DATA_U16, USER_RAM_FIFO#(0:3)_DATA_U32, USER_RAM_FIFO#(0:3)_DATA_I32, USER_RAM_FIFO#(0)_DATA_F32, USER_RAM_FIFO#(0:3)_ALLOCATE_NUM_BYTES, USER_RAM_FIFO#(0:3)_NUM_BYTES_IN_FIFO, USER_RAM_FIFO#(0:3)_EMPTY",
    "2017.08.15.B   Added T4 to DIO_EF_CLOCK registers and to DIO#(0:22)_EF registers (44900-44924 and 44000-44644, approx)",
    "2017.08.29.A   Updated DIO_PULLUP_DISABLE description.",
    "2017.09.20.A   Added T4 to AIN#(0:254)_RESOLUTION_INDEX, AIN#(0:254)_SETTLING_US, AIN_ALL_RESOLUTION_INDEX, AIN_ALL_SETTLING_US, and AIN_ALL_EF_INDEX.",
    "2017.09.21.A   Added error code 2375.",
    "2017.09.29.A   Re-indented.",
    "2017.10.19.A   Updated register support for T4. Modified descriptions to support the T4.",
    "2017.10.25.A   Added descriptions for the AIN#(0:13)_EF_CONFIG_x and AIN#(0:13)_EF_READ_x registers.",
    "2017.11.28.A   Updated descriptions for TEMPERATURE_AIR_K and TEMPERATURE_DEVICE_K.",
    "2017.12.08.A   Added registers 2990 and 2991; LED control.",
    "2018.03.29.A   Added error codes EF_CAN_NOT_CHANGE_INDEX_WHILE_ENABLED and LJME_INVALID_INTERVAL_HANDLE. Various descriptions, fwmins, and readwrites.",
    "2015.05.21.A   Fixed incorrect description in ONEWIRE_OPTIONS.",
    "2018.06.06.A   Fixed TDAC_SPEED_THROTTLE default.",
    "2018.08.29.A   Removed erroneous T4 support of STREAM_CLOCK_SOURCE.",
    "2018.09.06.A   Updated FILE_IO_DIR_FIRST description.",
    "2018.09.13.A   Updated description of Stream-Out buffer size allocation.",
    "2018.11.08.A   Added STREAM_BUFFER_FULL AND STREAM_AUTORECOVER_DISABLE.",
    "2018.11.29.A   Updated STREAM_DEBUG_GET_SELF_INDEX description.",
    "2018.11.30.A   Added tag_mappings.",
    "2018.12.05.A   Added <br>s to descriptions.",
    "2019.02.08.A   Added a missing error code for T4 AIN_EF features.",
    "2019.03.06.A   Added an error code STREAM_OUT_NEEDS_TO_BE_ENABLED.",
    "End Of Comments"
  ]
}
